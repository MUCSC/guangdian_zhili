###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        19/Jul/2016  22:58:24
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\app\roadSearch.c
#    Command line =  
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\app\roadSearch.c
#        -D LPLD_K60 -D USE_K60DZ10 -lCN
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\FLASH\List\
#        -lB
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\FLASH\List\
#        -o
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\FLASH\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        E:\IAR\anzhuang\arm\INC\c\DLib_Config_Normal.h -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\app\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\CPU\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\common\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\LPLD\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\LPLD\HW\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\FatFs\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\FatFs\option\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\USB\common\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\USB\driver\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\USB\descriptor\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\USB\class\
#        -Ol -I E:\IAR\anzhuang\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\FLASH\List\roadSearch.lst
#    Object file  =  
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\FLASH\Obj\roadSearch.o
#
###############################################################################

F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\app\roadSearch.c
      1          #include "roadSearch.h"
      2          
      3          #define ABS(x) ((x>0)?(x):(-x))
      4          

   \                                 In section .data, align 4
      5          int Reference_Width=50;//赛道参考宽度
   \                     Reference_Width:
   \   00000000   0x00000032         DC32 50

   \                                 In section .bss, align 1
      6          uint8 rightfind=0,leftfind=0;
   \                     rightfind:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     leftfind:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
      7          uint8 Leftlastfind=0,Rightlastfind=0;
   \                     Leftlastfind:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     Rightlastfind:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
      8          uint8 Leftlast=0,Rightlast=0;//最终确定的边界线
   \                     Leftlast:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     Rightlast:
   \   00000000                      DS8 1

   \                                 In section .data, align 4
      9          int Right=127,Left=0;
   \                     Right:
   \   00000000   0x0000007F         DC32 127

   \                                 In section .bss, align 4
   \                     Left:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     10          int CCD_Diff[128];//差分值数组
   \                     CCD_Diff:
   \   00000000                      DS8 512

   \                                 In section .bss, align 4
     11          int RisingEdgeIndex,FallingEdgeIndex;//寻找到的跳变沿index
   \                     RisingEdgeIndex:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     FallingEdgeIndex:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
     12          uint8 RisingEdgeCnt,FallingEdgeCnt,RisingEdge[5],FallingEdge[5];
   \                     RisingEdgeCnt:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     FallingEdgeCnt:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
   \                     RisingEdge:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
   \                     FallingEdge:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
     13          float Threshold;
   \                     Threshold:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
     14          uint8 RoadType=0;//定义赛道类型
   \                     RoadType:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     15          int Max_Peak;
   \                     Max_Peak:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     16          int B_RightOrLeft;
   \                     B_RightOrLeft:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     17          float Middle_Err=0;//中线偏移量
   \                     Middle_Err:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     18          float Character_Distance=0; //特征距离
   \                     Character_Distance:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     19          static float Middle_Last=0;//最终的中线偏移量
   \                     Middle_Last:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     20          float temp_s_p,Correct_Err=1.2;
   \                     temp_s_p:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
   \                     Correct_Err:
   \   00000000   0x3F99999A         DC32 3F99999AH

   \                                 In section .bss, align 4
     21          float Pre_Width[5]={0};
   \                     Pre_Width:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
     22          float Pre_Right[5]={0};
   \                     Pre_Right:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
     23          float Pre_Left[5]={0};
   \                     Pre_Left:
   \   00000000                      DS8 20

   \                                 In section .bss, align 1
     24          uint8 Nor_Cnt=0;
   \                     Nor_Cnt:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     25          uint8 STATE=0;
   \                     STATE:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     26          uint8 curve_to_cross=0;
   \                     curve_to_cross:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     27          uint8 flag_barraicade=0;
   \                     flag_barraicade:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     28          uint8 Barraicade_Cnt=0;
   \                     Barraicade_Cnt:
   \   00000000                      DS8 1

   \                                 In section .data, align 4
     29          float Barraicade_Num=1;
   \                     Barraicade_Num:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .bss, align 4
     30          float Barraicade_width,K_Barraicade=0.5;
   \                     Barraicade_width:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
   \                     K_Barraicade:
   \   00000000   0x3F000000         DC32 3F000000H

   \                                 In section .bss, align 1
     31          uint8 flag_curve_to_cross=0;
   \                     flag_curve_to_cross:
   \   00000000                      DS8 1
     32          
     33          /****
     34          *寻找跳变沿和峰值
     35          ****/
     36          

   \                                 In section .text, align 2, keep-with-next
     37          void EdgeFind(void) 
     38          {
   \                     EdgeFind: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     39            int i = 0;//for 的下标
   \   00000002   0x2400             MOVS     R4,#+0
     40            //对各值进行初始化
     41            Max_Peak=0;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable4
   \   0000000A   0x6008             STR      R0,[R1, #+0]
     42            RisingEdgeCnt=0;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   00000012   0x7008             STRB     R0,[R1, #+0]
     43            FallingEdgeCnt=0;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable6
   \   0000001A   0x7008             STRB     R0,[R1, #+0]
     44            for(i=0;i<5;i++)
   \   0000001C   0x2400             MOVS     R4,#+0
   \   0000001E   0xE008             B.N      ??EdgeFind_0
     45            {
     46              RisingEdge[i]=0;
   \                     ??EdgeFind_1: (+1)
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable5
   \   00000026   0x5460             STRB     R0,[R4, R1]
     47              FallingEdge[i]=0;
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   0000002E   0x5460             STRB     R0,[R4, R1]
     48            }
   \   00000030   0x1C64             ADDS     R4,R4,#+1
   \                     ??EdgeFind_0: (+1)
   \   00000032   0x2C05             CMP      R4,#+5
   \   00000034   0xDBF4             BLT.N    ??EdgeFind_1
     49            for(i=3;i<128;i++)
   \   00000036   0x2403             MOVS     R4,#+3
   \   00000038   0xE008             B.N      ??EdgeFind_2
     50            {
     51              CCD_Diff[i]=CCD_Buff[i]-CCD_Buff[i-3];
     52              if(ABS(CCD_Diff[i])>Max_Peak) Max_Peak=ABS(CCD_Diff[i]);//寻找差分值的峰值 
   \                     ??EdgeFind_3: (+1)
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   0000003E   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000042   0x4240             RSBS     R0,R0,#+0
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable4
   \   00000048   0x6008             STR      R0,[R1, #+0]
   \                     ??EdgeFind_4: (+1)
   \   0000004A   0x1C64             ADDS     R4,R4,#+1
   \                     ??EdgeFind_2: (+1)
   \   0000004C   0x2C80             CMP      R4,#+128
   \   0000004E   0xDA31             BGE.N    ??EdgeFind_5
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable5_3
   \   00000054   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   00000058   0x.... 0x....      LDR.W    R1,??DataTable5_3
   \   0000005C   0xEB11 0x0144      ADDS     R1,R1,R4, LSL #+1
   \   00000060   0xF831 0x1C06      LDRH     R1,[R1, #-6]
   \   00000064   0x1A40             SUBS     R0,R0,R1
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   0000006A   0xF841 0x0024      STR      R0,[R1, R4, LSL #+2]
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000072   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000076   0x2801             CMP      R0,#+1
   \   00000078   0xDB04             BLT.N    ??EdgeFind_6
   \   0000007A   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   0000007E   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000082   0xE004             B.N      ??EdgeFind_7
   \                     ??EdgeFind_6: (+1)
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000088   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000008C   0x4240             RSBS     R0,R0,#+0
   \                     ??EdgeFind_7: (+1)
   \   0000008E   0x.... 0x....      LDR.W    R1,??DataTable4
   \   00000092   0x6809             LDR      R1,[R1, #+0]
   \   00000094   0x4281             CMP      R1,R0
   \   00000096   0xDAD8             BGE.N    ??EdgeFind_4
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   0000009C   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   000000A0   0x2801             CMP      R0,#+1
   \   000000A2   0xDBCA             BLT.N    ??EdgeFind_3
   \   000000A4   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   000000A8   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   000000AC   0x.... 0x....      LDR.W    R1,??DataTable4
   \   000000B0   0x6008             STR      R0,[R1, #+0]
   \   000000B2   0xE7CA             B.N      ??EdgeFind_4
     53            }
     54            for(i=4;i<127;i++)
   \                     ??EdgeFind_5: (+1)
   \   000000B4   0x2404             MOVS     R4,#+4
   \   000000B6   0xE06D             B.N      ??EdgeFind_8
     55            {
     56              if((CCD_Diff[i]>=CCD_Diff[i-1])&&(CCD_Diff[i]>CCD_Diff[i+1])&&(CCD_Diff[i]>Threshold)) //寻找正的峰值，左边线
   \                     ??EdgeFind_9: (+1)
   \   000000B8   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   000000BC   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   000000C0   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   000000C4   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   000000C8   0xF851 0x1C04      LDR      R1,[R1, #-4]
   \   000000CC   0x4288             CMP      R0,R1
   \   000000CE   0xDB29             BLT.N    ??EdgeFind_10
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   000000D4   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   000000D8   0x6840             LDR      R0,[R0, #+4]
   \   000000DA   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   000000DE   0xF851 0x1024      LDR      R1,[R1, R4, LSL #+2]
   \   000000E2   0x4288             CMP      R0,R1
   \   000000E4   0xDA1E             BGE.N    ??EdgeFind_10
   \   000000E6   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   000000EA   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   000000EE   0x.... 0x....      BL       __aeabi_i2f
   \   000000F2   0x0001             MOVS     R1,R0
   \   000000F4   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   000000F8   0x6800             LDR      R0,[R0, #+0]
   \   000000FA   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000FE   0xD211             BCS.N    ??EdgeFind_10
     57              {
     58                if(RisingEdgeCnt<5)    
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000104   0x7800             LDRB     R0,[R0, #+0]
   \   00000106   0x2805             CMP      R0,#+5
   \   00000108   0xDA0C             BGE.N    ??EdgeFind_10
     59                { 
     60                 RisingEdge[RisingEdgeCnt]=i;
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable5
   \   0000010E   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   00000112   0x7809             LDRB     R1,[R1, #+0]
   \   00000114   0x540C             STRB     R4,[R1, R0]
     61                 RisingEdgeCnt++;  
   \   00000116   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   0000011A   0x7800             LDRB     R0,[R0, #+0]
   \   0000011C   0x1C40             ADDS     R0,R0,#+1
   \   0000011E   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   00000122   0x7008             STRB     R0,[R1, #+0]
     62                }
     63              } 
     64              if((CCD_Diff[i]<CCD_Diff[i-1])&&(CCD_Diff[i]<=CCD_Diff[i+1])&&(CCD_Diff[i]<-Threshold))  //寻找负的峰值，右边线
   \                     ??EdgeFind_10: (+1)
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000128   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000012C   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   00000130   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000134   0xF851 0x1C04      LDR      R1,[R1, #-4]
   \   00000138   0x4288             CMP      R0,R1
   \   0000013A   0xDA2A             BGE.N    ??EdgeFind_11
   \   0000013C   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000140   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   00000144   0x6840             LDR      R0,[R0, #+4]
   \   00000146   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   0000014A   0xF851 0x1024      LDR      R1,[R1, R4, LSL #+2]
   \   0000014E   0x4288             CMP      R0,R1
   \   00000150   0xDB1F             BLT.N    ??EdgeFind_11
   \   00000152   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000156   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000015A   0x.... 0x....      BL       __aeabi_i2f
   \   0000015E   0x.... 0x....      LDR.W    R1,??DataTable5_4
   \   00000162   0x6809             LDR      R1,[R1, #+0]
   \   00000164   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   00000168   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000016C   0xD211             BCS.N    ??EdgeFind_11
     65              {
     66                if(FallingEdgeCnt<5)    
   \   0000016E   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000172   0x7800             LDRB     R0,[R0, #+0]
   \   00000174   0x2805             CMP      R0,#+5
   \   00000176   0xDA0C             BGE.N    ??EdgeFind_11
     67                {
     68                 FallingEdge[FallingEdgeCnt]=i;
   \   00000178   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   0000017C   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000180   0x7809             LDRB     R1,[R1, #+0]
   \   00000182   0x540C             STRB     R4,[R1, R0]
     69                 FallingEdgeCnt++;
   \   00000184   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000188   0x7800             LDRB     R0,[R0, #+0]
   \   0000018A   0x1C40             ADDS     R0,R0,#+1
   \   0000018C   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000190   0x7008             STRB     R0,[R1, #+0]
     70                }
     71              }
     72            }
   \                     ??EdgeFind_11: (+1)
   \   00000192   0x1C64             ADDS     R4,R4,#+1
   \                     ??EdgeFind_8: (+1)
   \   00000194   0x2C7F             CMP      R4,#+127
   \   00000196   0xDB8F             BLT.N    ??EdgeFind_9
     73            
     74            
     75          
     76          }
   \   00000198   0xBD10             POP      {R4,PC}          ;; return
     77          
     78          /*****
     79          ** 寻找两条边线  仅能够处理直道，弯道无法识别
     80          *****/

   \                                 In section .text, align 2, keep-with-next
     81          void Find_BothLine(void)
     82          {
   \                     Find_BothLine: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
     83            uint8 i=0, j=0, find=0;
   \   00000002   0x2500             MOVS     R5,#+0
   \   00000004   0x2600             MOVS     R6,#+0
   \   00000006   0x2400             MOVS     R4,#+0
     84            for(i=60;i>20;i--)
   \   00000008   0x253C             MOVS     R5,#+60
   \   0000000A   0xE000             B.N      ??Find_BothLine_0
   \                     ??Find_BothLine_1: (+1)
   \   0000000C   0x1E6D             SUBS     R5,R5,#+1
   \                     ??Find_BothLine_0: (+1)
   \   0000000E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000010   0x2D15             CMP      R5,#+21
   \   00000012   0xDB28             BLT.N    ??Find_BothLine_2
     85            {
     86              if((CCD_Diff[i]>=CCD_Diff[i-1])&&(CCD_Diff[i]>CCD_Diff[i+1])&&(CCD_Diff[i]>Threshold)) //寻找左边线
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000018   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001A   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   00000022   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000024   0xEB11 0x0185      ADDS     R1,R1,R5, LSL #+2
   \   00000028   0xF851 0x1C04      LDR      R1,[R1, #-4]
   \   0000002C   0x4288             CMP      R0,R1
   \   0000002E   0xDBED             BLT.N    ??Find_BothLine_1
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000034   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000036   0xEB10 0x0085      ADDS     R0,R0,R5, LSL #+2
   \   0000003A   0x6840             LDR      R0,[R0, #+4]
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   00000040   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000042   0xF851 0x1025      LDR      R1,[R1, R5, LSL #+2]
   \   00000046   0x4288             CMP      R0,R1
   \   00000048   0xDAE0             BGE.N    ??Find_BothLine_1
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   0000004E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000050   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   00000054   0x.... 0x....      BL       __aeabi_i2f
   \   00000058   0x0001             MOVS     R1,R0
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000064   0xD2D2             BCS.N    ??Find_BothLine_1
     87              {
     88                  break;
     89              }
     90            }
     91            for(j=70;j<110;j++)
   \                     ??Find_BothLine_2: (+1)
   \   00000066   0x2646             MOVS     R6,#+70
   \   00000068   0xE000             B.N      ??Find_BothLine_3
   \                     ??Find_BothLine_4: (+1)
   \   0000006A   0x1C76             ADDS     R6,R6,#+1
   \                     ??Find_BothLine_3: (+1)
   \   0000006C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000006E   0x2E6E             CMP      R6,#+110
   \   00000070   0xDA29             BGE.N    ??Find_BothLine_5
     92            {
     93              if((CCD_Diff[j]<CCD_Diff[j-1])&&(CCD_Diff[j]<=CCD_Diff[j+1])&&(CCD_Diff[j]<-Threshold))//寻找右边线
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000076   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000078   0xF850 0x0026      LDR      R0,[R0, R6, LSL #+2]
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   00000080   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000082   0xEB11 0x0186      ADDS     R1,R1,R6, LSL #+2
   \   00000086   0xF851 0x1C04      LDR      R1,[R1, #-4]
   \   0000008A   0x4288             CMP      R0,R1
   \   0000008C   0xDAED             BGE.N    ??Find_BothLine_4
   \   0000008E   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000092   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000094   0xEB10 0x0086      ADDS     R0,R0,R6, LSL #+2
   \   00000098   0x6840             LDR      R0,[R0, #+4]
   \   0000009A   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   0000009E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000A0   0xF851 0x1026      LDR      R1,[R1, R6, LSL #+2]
   \   000000A4   0x4288             CMP      R0,R1
   \   000000A6   0xDBE0             BLT.N    ??Find_BothLine_4
   \   000000A8   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   000000AC   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000AE   0xF850 0x0026      LDR      R0,[R0, R6, LSL #+2]
   \   000000B2   0x.... 0x....      BL       __aeabi_i2f
   \   000000B6   0x.... 0x....      LDR.W    R1,??DataTable5_4
   \   000000BA   0x6809             LDR      R1,[R1, #+0]
   \   000000BC   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   000000C0   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000C4   0xD2D1             BCS.N    ??Find_BothLine_4
     94              {
     95                break;
     96              }
     97            }
     98            
     99            if(i>25 && j<105) //如果左右边线满足条件
   \                     ??Find_BothLine_5: (+1)
   \   000000C6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000C8   0x2D1A             CMP      R5,#+26
   \   000000CA   0xDB14             BLT.N    ??Find_BothLine_6
   \   000000CC   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000CE   0x2E69             CMP      R6,#+105
   \   000000D0   0xDA11             BGE.N    ??Find_BothLine_6
    100            {
    101              find=1;
   \   000000D2   0x2401             MOVS     R4,#+1
    102              Left=i;
   \   000000D4   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000D6   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   000000DA   0x6005             STR      R5,[R0, #+0]
    103              Right=j;
   \   000000DC   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   000000E2   0x6006             STR      R6,[R0, #+0]
    104              Leftlastfind=1;
   \   000000E4   0x2001             MOVS     R0,#+1
   \   000000E6   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   000000EA   0x7008             STRB     R0,[R1, #+0]
    105              Rightlastfind=1;
   \   000000EC   0x2001             MOVS     R0,#+1
   \   000000EE   0x.... 0x....      LDR.W    R1,??DataTable7
   \   000000F2   0x7008             STRB     R0,[R1, #+0]
   \   000000F4   0xE077             B.N      ??Find_BothLine_7
    106            }
    107            else  //放宽左右边线条件
    108            {
    109              for(i=10;i<80;i++)
   \                     ??Find_BothLine_6: (+1)
   \   000000F6   0x250A             MOVS     R5,#+10
   \   000000F8   0xE000             B.N      ??Find_BothLine_8
   \                     ??Find_BothLine_9: (+1)
   \   000000FA   0x1C6D             ADDS     R5,R5,#+1
   \                     ??Find_BothLine_8: (+1)
   \   000000FC   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000FE   0x2D50             CMP      R5,#+80
   \   00000100   0xDA71             BGE.N    ??Find_BothLine_7
    110              {
    111                if((CCD_Diff[i]>=CCD_Diff[i-1])&&(CCD_Diff[i]>CCD_Diff[i+1])&&(CCD_Diff[i]>Threshold))
   \   00000102   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000106   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000108   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   0000010C   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   00000110   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000112   0xEB11 0x0185      ADDS     R1,R1,R5, LSL #+2
   \   00000116   0xF851 0x1C04      LDR      R1,[R1, #-4]
   \   0000011A   0x4288             CMP      R0,R1
   \   0000011C   0xDB60             BLT.N    ??Find_BothLine_10
   \   0000011E   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000122   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000124   0xEB10 0x0085      ADDS     R0,R0,R5, LSL #+2
   \   00000128   0x6840             LDR      R0,[R0, #+4]
   \   0000012A   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   0000012E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000130   0xF851 0x1025      LDR      R1,[R1, R5, LSL #+2]
   \   00000134   0x4288             CMP      R0,R1
   \   00000136   0xDA53             BGE.N    ??Find_BothLine_10
   \   00000138   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   0000013C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000013E   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   00000142   0x.... 0x....      BL       __aeabi_i2f
   \   00000146   0x0001             MOVS     R1,R0
   \   00000148   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   0000014C   0x6800             LDR      R0,[R0, #+0]
   \   0000014E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000152   0xD245             BCS.N    ??Find_BothLine_10
    112                {
    113                  for(j=64;j<=120;j++)
   \   00000154   0x2640             MOVS     R6,#+64
   \   00000156   0xE000             B.N      ??Find_BothLine_11
   \                     ??Find_BothLine_12: (+1)
   \   00000158   0x1C76             ADDS     R6,R6,#+1
   \                     ??Find_BothLine_11: (+1)
   \   0000015A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000015C   0x2E79             CMP      R6,#+121
   \   0000015E   0xDA3F             BGE.N    ??Find_BothLine_10
    114                  {
    115                    if((CCD_Diff[j]<CCD_Diff[j-1])&&(CCD_Diff[j]<=CCD_Diff[j+1])&&(CCD_Diff[j]<-Threshold))
   \   00000160   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000164   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000166   0xF850 0x0026      LDR      R0,[R0, R6, LSL #+2]
   \   0000016A   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   0000016E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000170   0xEB11 0x0186      ADDS     R1,R1,R6, LSL #+2
   \   00000174   0xF851 0x1C04      LDR      R1,[R1, #-4]
   \   00000178   0x4288             CMP      R0,R1
   \   0000017A   0xDAED             BGE.N    ??Find_BothLine_12
   \   0000017C   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000180   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000182   0xEB10 0x0086      ADDS     R0,R0,R6, LSL #+2
   \   00000186   0x6840             LDR      R0,[R0, #+4]
   \   00000188   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   0000018C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000018E   0xF851 0x1026      LDR      R1,[R1, R6, LSL #+2]
   \   00000192   0x4288             CMP      R0,R1
   \   00000194   0xDBE0             BLT.N    ??Find_BothLine_12
   \   00000196   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   0000019A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000019C   0xF850 0x0026      LDR      R0,[R0, R6, LSL #+2]
   \   000001A0   0x.... 0x....      BL       __aeabi_i2f
   \   000001A4   0x.... 0x....      LDR.W    R1,??DataTable5_4
   \   000001A8   0x6809             LDR      R1,[R1, #+0]
   \   000001AA   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   000001AE   0x.... 0x....      BL       __aeabi_cfcmple
   \   000001B2   0xD2D1             BCS.N    ??Find_BothLine_12
    116                    {
    117                      if(j-i>25)
   \   000001B4   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000001B6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000001B8   0x1B70             SUBS     R0,R6,R5
   \   000001BA   0x281A             CMP      R0,#+26
   \   000001BC   0xDB10             BLT.N    ??Find_BothLine_13
    118                      {
    119                        find=1;
   \   000001BE   0x2401             MOVS     R4,#+1
    120                        Left=i;
   \   000001C0   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000001C2   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   000001C6   0x6005             STR      R5,[R0, #+0]
    121                        Right=j;
   \   000001C8   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000001CA   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   000001CE   0x6006             STR      R6,[R0, #+0]
    122                        Leftlastfind=1;
   \   000001D0   0x2001             MOVS     R0,#+1
   \   000001D2   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   000001D6   0x7008             STRB     R0,[R1, #+0]
    123                        Rightlastfind=1;
   \   000001D8   0x2001             MOVS     R0,#+1
   \   000001DA   0x.... 0x....      LDR.W    R1,??DataTable7
   \   000001DE   0x7008             STRB     R0,[R1, #+0]
    124                      }
    125                      break;
    126                    }
    127                    
    128                  }
    129                
    130                }
    131                if(find)  break;
   \                     ??Find_BothLine_13: (+1)
   \                     ??Find_BothLine_10: (+1)
   \   000001E0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001E2   0x2C00             CMP      R4,#+0
   \   000001E4   0xD089             BEQ.N    ??Find_BothLine_9
    132               
    133              
    134              }
    135          
    136            }
    137            
    138            if(find==0)
   \                     ??Find_BothLine_7: (+1)
   \   000001E6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001E8   0x2C00             CMP      R4,#+0
   \   000001EA   0xD107             BNE.N    ??Find_BothLine_14
    139            {
    140              Leftlastfind=0;
   \   000001EC   0x2000             MOVS     R0,#+0
   \   000001EE   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   000001F2   0x7008             STRB     R0,[R1, #+0]
    141              Rightlastfind=0;
   \   000001F4   0x2000             MOVS     R0,#+0
   \   000001F6   0x.... 0x....      LDR.W    R1,??DataTable7
   \   000001FA   0x7008             STRB     R0,[R1, #+0]
    142            }
    143           
    144          }
   \                     ??Find_BothLine_14: (+1)
   \   000001FC   0xBD70             POP      {R4-R6,PC}       ;; return
    145          
    146          /****
    147          * 根据参数寻找靠近中心线的边界
    148          * 参数;mode ,两种：LEFT和RIGHT
    149          ****/

   \                                 In section .text, align 2, keep-with-next
    150          uint8 FindBoundary(uint8 mode)
    151          {
   \                     FindBoundary: (+1)
   \   00000000   0x0001             MOVS     R1,R0
    152            uint8 find=0;
   \   00000002   0x2000             MOVS     R0,#+0
    153            if(mode==LEFT)
   \   00000004   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000006   0x2900             CMP      R1,#+0
   \   00000008   0xD128             BNE.N    ??FindBoundary_0
    154            {
    155              if(RisingEdgeCnt!=0)
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   0000000E   0x7809             LDRB     R1,[R1, #+0]
   \   00000010   0x2900             CMP      R1,#+0
   \   00000012   0xD045             BEQ.N    ??FindBoundary_1
    156              {
    157                for(RisingEdgeIndex=RisingEdgeCnt-1;RisingEdgeIndex>=0;RisingEdgeIndex--)//RisingEdgeIndex=RisingEdgeCnt-1？？？？？
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   00000018   0x7809             LDRB     R1,[R1, #+0]
   \   0000001A   0x1E49             SUBS     R1,R1,#+1
   \   0000001C   0x.... 0x....      LDR.W    R2,??DataTable6_4
   \   00000020   0x6011             STR      R1,[R2, #+0]
   \   00000022   0xE006             B.N      ??FindBoundary_2
   \                     ??FindBoundary_3: (+1)
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000028   0x6809             LDR      R1,[R1, #+0]
   \   0000002A   0x1E49             SUBS     R1,R1,#+1
   \   0000002C   0x.... 0x....      LDR.W    R2,??DataTable6_4
   \   00000030   0x6011             STR      R1,[R2, #+0]
   \                     ??FindBoundary_2: (+1)
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000036   0x6809             LDR      R1,[R1, #+0]
   \   00000038   0x2900             CMP      R1,#+0
   \   0000003A   0xD431             BMI.N    ??FindBoundary_1
    158                {
    159                  if(RisingEdge[RisingEdgeIndex]<75)   //参数为什么设置为75
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable5
   \   00000040   0x.... 0x....      LDR.W    R2,??DataTable6_4
   \   00000044   0x6812             LDR      R2,[R2, #+0]
   \   00000046   0x5C51             LDRB     R1,[R2, R1]
   \   00000048   0x294B             CMP      R1,#+75
   \   0000004A   0xDA01             BGE.N    ??FindBoundary_4
    160                  {
    161                    find=1;
   \   0000004C   0x2001             MOVS     R0,#+1
    162                    
    163                    break;
   \   0000004E   0xE027             B.N      ??FindBoundary_1
    164                  }
    165                  if(RisingEdgeIndex==0) break;
   \                     ??FindBoundary_4: (+1)
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000054   0x6809             LDR      R1,[R1, #+0]
   \   00000056   0x2900             CMP      R1,#+0
   \   00000058   0xD1E4             BNE.N    ??FindBoundary_3
   \   0000005A   0xE021             B.N      ??FindBoundary_1
    166                
    167                }
    168              }
    169            }
    170            else
    171            {
    172              if(FallingEdgeCnt!=0)
   \                     ??FindBoundary_0: (+1)
   \   0000005C   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000060   0x7809             LDRB     R1,[R1, #+0]
   \   00000062   0x2900             CMP      R1,#+0
   \   00000064   0xD01C             BEQ.N    ??FindBoundary_1
    173              {
    174                for(FallingEdgeIndex=0;FallingEdgeIndex<FallingEdgeCnt;FallingEdgeIndex++)
   \   00000066   0x2100             MOVS     R1,#+0
   \   00000068   0x.... 0x....      LDR.W    R2,??DataTable7_1
   \   0000006C   0x6011             STR      R1,[R2, #+0]
   \   0000006E   0xE006             B.N      ??FindBoundary_5
   \                     ??FindBoundary_6: (+1)
   \   00000070   0x.... 0x....      LDR.W    R1,??DataTable7_1
   \   00000074   0x6809             LDR      R1,[R1, #+0]
   \   00000076   0x1C49             ADDS     R1,R1,#+1
   \   00000078   0x.... 0x....      LDR.W    R2,??DataTable7_1
   \   0000007C   0x6011             STR      R1,[R2, #+0]
   \                     ??FindBoundary_5: (+1)
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable7_1
   \   00000082   0x6809             LDR      R1,[R1, #+0]
   \   00000084   0x.... 0x....      LDR.W    R2,??DataTable6
   \   00000088   0x7812             LDRB     R2,[R2, #+0]
   \   0000008A   0x4291             CMP      R1,R2
   \   0000008C   0xDA08             BGE.N    ??FindBoundary_1
    175                {
    176                   if(FallingEdge[FallingEdgeIndex]>53)
   \   0000008E   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   00000092   0x.... 0x....      LDR.W    R2,??DataTable7_1
   \   00000096   0x6812             LDR      R2,[R2, #+0]
   \   00000098   0x5C51             LDRB     R1,[R2, R1]
   \   0000009A   0x2936             CMP      R1,#+54
   \   0000009C   0xDBE8             BLT.N    ??FindBoundary_6
    177                   {
    178                      find=1;
   \   0000009E   0x2001             MOVS     R0,#+1
    179                      break;
    180                   }
    181                
    182                }
    183              
    184              }
    185            }
    186            
    187            return find;
   \                     ??FindBoundary_1: (+1)
   \   000000A0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000A2   0x4770             BX       LR               ;; return
    188          
    189          }
    190          /*****
    191          ***根据上次找到的边线寻找新的边线
    192          *****/
    193          

   \                                 In section .text, align 2, keep-with-next
    194          uint8 FindNearest(uint8 mode,uint8 lastegde)
    195          {
   \                     FindNearest: (+1)
   \   00000000   0xB410             PUSH     {R4}
    196            uint8 find=0;
   \   00000002   0x2200             MOVS     R2,#+0
    197            if(mode==LEFT)
   \   00000004   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD138             BNE.N    ??FindNearest_0
    198            {
    199               if(RisingEdgeCnt!=0)  
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   0000000E   0x7800             LDRB     R0,[R0, #+0]
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD06B             BEQ.N    ??FindNearest_1
    200               {
    201                for(RisingEdgeIndex=0;RisingEdgeIndex<RisingEdgeCnt;RisingEdgeIndex++)
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x.... 0x....      LDR.W    R3,??DataTable6_4
   \   0000001A   0x6018             STR      R0,[R3, #+0]
   \   0000001C   0xE006             B.N      ??FindNearest_2
   \                     ??FindNearest_3: (+1)
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0x1C40             ADDS     R0,R0,#+1
   \   00000026   0x.... 0x....      LDR.W    R3,??DataTable6_4
   \   0000002A   0x6018             STR      R0,[R3, #+0]
   \                     ??FindNearest_2: (+1)
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x.... 0x....      LDR.W    R3,??DataTable4_1
   \   00000036   0x781B             LDRB     R3,[R3, #+0]
   \   00000038   0x4298             CMP      R0,R3
   \   0000003A   0xDA57             BGE.N    ??FindNearest_1
    202                {
    203                 if(ABS(lastegde-RisingEdge[RisingEdgeIndex])<=3)//3
   \   0000003C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable5
   \   00000042   0x.... 0x....      LDR.W    R3,??DataTable6_4
   \   00000046   0x681B             LDR      R3,[R3, #+0]
   \   00000048   0x5C18             LDRB     R0,[R3, R0]
   \   0000004A   0x1A08             SUBS     R0,R1,R0
   \   0000004C   0x2801             CMP      R0,#+1
   \   0000004E   0xDB08             BLT.N    ??FindNearest_4
   \   00000050   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable5
   \   00000056   0x.... 0x....      LDR.W    R3,??DataTable6_4
   \   0000005A   0x681B             LDR      R3,[R3, #+0]
   \   0000005C   0x5C18             LDRB     R0,[R3, R0]
   \   0000005E   0x1A08             SUBS     R0,R1,R0
   \   00000060   0xE008             B.N      ??FindNearest_5
   \                     ??FindNearest_4: (+1)
   \   00000062   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000064   0x4248             RSBS     R0,R1,#+0
   \   00000066   0x.... 0x....      LDR.W    R3,??DataTable5
   \   0000006A   0x.... 0x....      LDR.W    R4,??DataTable6_4
   \   0000006E   0x6824             LDR      R4,[R4, #+0]
   \   00000070   0x5CE3             LDRB     R3,[R4, R3]
   \   00000072   0x1AC0             SUBS     R0,R0,R3
   \                     ??FindNearest_5: (+1)
   \   00000074   0x2804             CMP      R0,#+4
   \   00000076   0xDAD2             BGE.N    ??FindNearest_3
    204                 {
    205                   find=1;
   \   00000078   0x2201             MOVS     R2,#+1
    206                   break;
   \   0000007A   0xE037             B.N      ??FindNearest_1
    207                 }
    208                }
    209               }
    210            }
    211            else
    212            {
    213              if(FallingEdgeCnt!=0)  
   \                     ??FindNearest_0: (+1)
   \   0000007C   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000080   0x7800             LDRB     R0,[R0, #+0]
   \   00000082   0x2800             CMP      R0,#+0
   \   00000084   0xD032             BEQ.N    ??FindNearest_1
    214             {
    215               for(FallingEdgeIndex=0;FallingEdgeIndex<FallingEdgeCnt;FallingEdgeIndex++)
   \   00000086   0x2000             MOVS     R0,#+0
   \   00000088   0x.... 0x....      LDR.W    R3,??DataTable7_1
   \   0000008C   0x6018             STR      R0,[R3, #+0]
   \   0000008E   0xE006             B.N      ??FindNearest_6
   \                     ??FindNearest_7: (+1)
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   00000094   0x6800             LDR      R0,[R0, #+0]
   \   00000096   0x1C40             ADDS     R0,R0,#+1
   \   00000098   0x.... 0x....      LDR.W    R3,??DataTable7_1
   \   0000009C   0x6018             STR      R0,[R3, #+0]
   \                     ??FindNearest_6: (+1)
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   000000A2   0x6800             LDR      R0,[R0, #+0]
   \   000000A4   0x.... 0x....      LDR.W    R3,??DataTable6
   \   000000A8   0x781B             LDRB     R3,[R3, #+0]
   \   000000AA   0x4298             CMP      R0,R3
   \   000000AC   0xDA1E             BGE.N    ??FindNearest_1
    216               {
    217                 if(ABS(lastegde-FallingEdge[FallingEdgeIndex])<=3)//3
   \   000000AE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   000000B4   0x.... 0x....      LDR.W    R3,??DataTable7_1
   \   000000B8   0x681B             LDR      R3,[R3, #+0]
   \   000000BA   0x5C18             LDRB     R0,[R3, R0]
   \   000000BC   0x1A08             SUBS     R0,R1,R0
   \   000000BE   0x2801             CMP      R0,#+1
   \   000000C0   0xDB08             BLT.N    ??FindNearest_8
   \   000000C2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000C4   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   000000C8   0x.... 0x....      LDR.W    R3,??DataTable7_1
   \   000000CC   0x681B             LDR      R3,[R3, #+0]
   \   000000CE   0x5C18             LDRB     R0,[R3, R0]
   \   000000D0   0x1A08             SUBS     R0,R1,R0
   \   000000D2   0xE008             B.N      ??FindNearest_9
   \                     ??FindNearest_8: (+1)
   \   000000D4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000D6   0x4248             RSBS     R0,R1,#+0
   \   000000D8   0x.... 0x....      LDR.W    R3,??DataTable5_1
   \   000000DC   0x.... 0x....      LDR.W    R4,??DataTable7_1
   \   000000E0   0x6824             LDR      R4,[R4, #+0]
   \   000000E2   0x5CE3             LDRB     R3,[R4, R3]
   \   000000E4   0x1AC0             SUBS     R0,R0,R3
   \                     ??FindNearest_9: (+1)
   \   000000E6   0x2804             CMP      R0,#+4
   \   000000E8   0xDAD2             BGE.N    ??FindNearest_7
    218                 {
    219                   find=1;
   \   000000EA   0x2201             MOVS     R2,#+1
    220                   break;
    221                 }
    222               }
    223             }
    224            }
    225            return find;
   \                     ??FindNearest_1: (+1)
   \   000000EC   0x0010             MOVS     R0,R2
   \   000000EE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000F0   0xBC10             POP      {R4}
   \   000000F2   0x4770             BX       LR               ;; return
    226          }
    227          
    228          /****
    229          ** 对常规赛道的处理函数
    230          ****/
    231          

   \                                 In section .text, align 2, keep-with-next
    232          void Normal(void)
    233          {
   \                     Normal: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    234           uint8 tempwidth;
    235           if(Leftlastfind==0 && Rightlastfind==0) //上次双线均未找到
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD15E             BNE.N    ??Normal_0
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000010   0x7800             LDRB     R0,[R0, #+0]
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD159             BNE.N    ??Normal_0
    236           {
    237              Find_BothLine();//寻找双线
   \   00000016   0x.... 0x....      BL       Find_BothLine
    238              if(Leftlastfind==0 && Rightlastfind==0)//仍然没有找到双线
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   0000001E   0x7800             LDRB     R0,[R0, #+0]
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xF040 0x82EC      BNE.W    ??Normal_1
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable7
   \   0000002A   0x7800             LDRB     R0,[R0, #+0]
   \   0000002C   0x2800             CMP      R0,#+0
   \   0000002E   0xF040 0x82E6      BNE.W    ??Normal_1
    239              {
    240                 if(FindBoundary(LEFT))
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x.... 0x....      BL       FindBoundary
   \   00000038   0x2800             CMP      R0,#+0
   \   0000003A   0xD00D             BEQ.N    ??Normal_2
    241                 {
    242                  Left=RisingEdge[RisingEdgeIndex];
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable5
   \   00000040   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000044   0x6809             LDR      R1,[R1, #+0]
   \   00000046   0x5C08             LDRB     R0,[R1, R0]
   \   00000048   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   0000004C   0x6008             STR      R0,[R1, #+0]
    243                  Leftlastfind=1; 
   \   0000004E   0x2001             MOVS     R0,#+1
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000054   0x7008             STRB     R0,[R1, #+0]
   \   00000056   0xE003             B.N      ??Normal_3
    244                  //if(Left<34)Leftlastfind=0;
    245                 }
    246                 else  Leftlastfind=0;
   \                     ??Normal_2: (+1)
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   0000005E   0x7008             STRB     R0,[R1, #+0]
    247                 
    248                 if(FindBoundary(RIGHT))
   \                     ??Normal_3: (+1)
   \   00000060   0x2001             MOVS     R0,#+1
   \   00000062   0x.... 0x....      BL       FindBoundary
   \   00000066   0x2800             CMP      R0,#+0
   \   00000068   0xD00D             BEQ.N    ??Normal_4
    249                 {
    250                   Right=FallingEdge[FallingEdgeIndex];
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable7_1
   \   00000072   0x6809             LDR      R1,[R1, #+0]
   \   00000074   0x5C08             LDRB     R0,[R1, R0]
   \   00000076   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   0000007A   0x6008             STR      R0,[R1, #+0]
    251                   Rightlastfind=1;
   \   0000007C   0x2001             MOVS     R0,#+1
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable7
   \   00000082   0x7008             STRB     R0,[R1, #+0]
   \   00000084   0xE003             B.N      ??Normal_5
    252                   //if(Right>84)Rightlastfind=0;
    253                 }
    254                 else  Rightlastfind=0;
   \                     ??Normal_4: (+1)
   \   00000086   0x2000             MOVS     R0,#+0
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable7
   \   0000008C   0x7008             STRB     R0,[R1, #+0]
    255                 if(Leftlastfind&&Rightlastfind) 
   \                     ??Normal_5: (+1)
   \   0000008E   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000092   0x7800             LDRB     R0,[R0, #+0]
   \   00000094   0x2800             CMP      R0,#+0
   \   00000096   0xF000 0x82B2      BEQ.W    ??Normal_1
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable7
   \   0000009E   0x7800             LDRB     R0,[R0, #+0]
   \   000000A0   0x2800             CMP      R0,#+0
   \   000000A2   0xF000 0x82AC      BEQ.W    ??Normal_1
    256                 {
    257                   if(Right<=Left)
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   000000AA   0x6800             LDR      R0,[R0, #+0]
   \   000000AC   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   000000B0   0x6809             LDR      R1,[R1, #+0]
   \   000000B2   0x4288             CMP      R0,R1
   \   000000B4   0xF2C0 0x82A3      BLT.W    ??Normal_1
    258                   {
    259                     Leftlastfind=0;
   \   000000B8   0x2000             MOVS     R0,#+0
   \   000000BA   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   000000BE   0x7008             STRB     R0,[R1, #+0]
    260                     Rightlastfind=0;
   \   000000C0   0x2000             MOVS     R0,#+0
   \   000000C2   0x.... 0x....      LDR.W    R1,??DataTable7
   \   000000C6   0x7008             STRB     R0,[R1, #+0]
   \   000000C8   0xE299             B.N      ??Normal_1
    261                   }
    262                 }
    263                 
    264                 
    265              }//end if(Leftlastfind==0&&Rightlastfind==0)
    266              
    267          
    268          
    269           
    270           } //end if (Leftlastfind==0 && Rightlastfind==0) 
    271           
    272           
    273           ///////////////////////////////////
    274           else //上次至少找到了一边
    275           {
    276              if(Leftlastfind  ) //上次找到了左线
   \                     ??Normal_0: (+1)
   \   000000CA   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   000000CE   0x7800             LDRB     R0,[R0, #+0]
   \   000000D0   0x2800             CMP      R0,#+0
   \   000000D2   0xF000 0x8144      BEQ.W    ??Normal_6
    277              {
    278                if(FindNearest(LEFT,Leftlast))		//这次能找到左线
   \   000000D6   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   000000DA   0x7801             LDRB     R1,[R0, #+0]
   \   000000DC   0x2000             MOVS     R0,#+0
   \   000000DE   0x.... 0x....      BL       FindNearest
   \   000000E2   0x2800             CMP      R0,#+0
   \   000000E4   0xF000 0x80EE      BEQ.W    ??Normal_7
    279                {
    280                  Left=RisingEdge[RisingEdgeIndex];
   \   000000E8   0x.... 0x....      LDR.W    R0,??DataTable5
   \   000000EC   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   000000F0   0x6809             LDR      R1,[R1, #+0]
   \   000000F2   0x5C08             LDRB     R0,[R1, R0]
   \   000000F4   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   000000F8   0x6008             STR      R0,[R1, #+0]
    281                  Leftlastfind=1;	
   \   000000FA   0x2001             MOVS     R0,#+1
   \   000000FC   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000100   0x7008             STRB     R0,[R1, #+0]
    282                  if(Rightlastfind==0)//上次没有找到右线
   \   00000102   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000106   0x7800             LDRB     R0,[R0, #+0]
   \   00000108   0x2800             CMP      R0,#+0
   \   0000010A   0xF040 0x8128      BNE.W    ??Normal_6
    283                  { 
    284                    
    285                   if(FallingEdgeCnt)
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000112   0x7800             LDRB     R0,[R0, #+0]
   \   00000114   0x2800             CMP      R0,#+0
   \   00000116   0xF000 0x80A9      BEQ.W    ??Normal_8
    286                   {
    287                     for(FallingEdgeIndex=0;FallingEdgeIndex<FallingEdgeCnt;FallingEdgeIndex++)
   \   0000011A   0x2000             MOVS     R0,#+0
   \   0000011C   0x.... 0x....      LDR.W    R1,??DataTable7_1
   \   00000120   0x6008             STR      R0,[R1, #+0]
   \   00000122   0xE006             B.N      ??Normal_9
   \                     ??Normal_10: (+1)
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   00000128   0x6800             LDR      R0,[R0, #+0]
   \   0000012A   0x1C40             ADDS     R0,R0,#+1
   \   0000012C   0x.... 0x....      LDR.W    R1,??DataTable7_1
   \   00000130   0x6008             STR      R0,[R1, #+0]
   \                     ??Normal_9: (+1)
   \   00000132   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   00000136   0x6800             LDR      R0,[R0, #+0]
   \   00000138   0x.... 0x....      LDR.W    R1,??DataTable6
   \   0000013C   0x7809             LDRB     R1,[R1, #+0]
   \   0000013E   0x4288             CMP      R0,R1
   \   00000140   0xDA62             BGE.N    ??Normal_11
    288                    {
    289                      rightfind=0;
   \   00000142   0x2000             MOVS     R0,#+0
   \   00000144   0x.... 0x....      LDR.W    R1,??DataTable7_3
   \   00000148   0x7008             STRB     R0,[R1, #+0]
    290                      if(FallingEdge[FallingEdgeIndex]>Left)
   \   0000014A   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   0000014E   0x6800             LDR      R0,[R0, #+0]
   \   00000150   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   00000154   0x.... 0x....      LDR.W    R2,??DataTable7_1
   \   00000158   0x6812             LDR      R2,[R2, #+0]
   \   0000015A   0x5C51             LDRB     R1,[R2, R1]
   \   0000015C   0x4288             CMP      R0,R1
   \   0000015E   0xDAE1             BGE.N    ??Normal_10
    291                      {
    292                        tempwidth = FallingEdge[FallingEdgeIndex]-Left;
   \   00000160   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   00000164   0x.... 0x....      LDR.W    R1,??DataTable7_1
   \   00000168   0x6809             LDR      R1,[R1, #+0]
   \   0000016A   0x5C08             LDRB     R0,[R1, R0]
   \   0000016C   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000170   0x6809             LDR      R1,[R1, #+0]
   \   00000172   0x1A40             SUBS     R0,R0,R1
    293                        if(ABS(tempwidth-Reference_Width)>=2)      
   \   00000174   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000176   0x.... 0x....      LDR.W    R1,??DataTable9
   \   0000017A   0x6809             LDR      R1,[R1, #+0]
   \   0000017C   0x1A41             SUBS     R1,R0,R1
   \   0000017E   0x2901             CMP      R1,#+1
   \   00000180   0xDB05             BLT.N    ??Normal_12
   \   00000182   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000184   0x.... 0x....      LDR.W    R1,??DataTable9
   \   00000188   0x6809             LDR      R1,[R1, #+0]
   \   0000018A   0x1A41             SUBS     R1,R0,R1
   \   0000018C   0xE005             B.N      ??Normal_13
   \                     ??Normal_12: (+1)
   \   0000018E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000190   0x4241             RSBS     R1,R0,#+0
   \   00000192   0x.... 0x....      LDR.W    R2,??DataTable9
   \   00000196   0x6812             LDR      R2,[R2, #+0]
   \   00000198   0x1A89             SUBS     R1,R1,R2
   \                     ??Normal_13: (+1)
   \   0000019A   0x2902             CMP      R1,#+2
   \   0000019C   0xDB23             BLT.N    ??Normal_14
    294                        {
    295                         if(tempwidth>Reference_Width)   Reference_Width=Reference_Width+1;   //潜在的赛道边线比参考宽度宽,更新参考宽度
   \   0000019E   0x.... 0x....      LDR.W    R1,??DataTable9
   \   000001A2   0x6809             LDR      R1,[R1, #+0]
   \   000001A4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001A6   0x4281             CMP      R1,R0
   \   000001A8   0xDA07             BGE.N    ??Normal_15
   \   000001AA   0x.... 0x....      LDR.W    R0,??DataTable9
   \   000001AE   0x6800             LDR      R0,[R0, #+0]
   \   000001B0   0x1C40             ADDS     R0,R0,#+1
   \   000001B2   0x.... 0x....      LDR.W    R1,??DataTable9
   \   000001B6   0x6008             STR      R0,[R1, #+0]
   \   000001B8   0xE006             B.N      ??Normal_16
    296                         else                         
    297                         {
    298                           Reference_Width=Reference_Width-1;   //潜在的赛道边线比参考宽度窄，更新参考宽度
   \                     ??Normal_15: (+1)
   \   000001BA   0x.... 0x....      LDR.W    R0,??DataTable9
   \   000001BE   0x6800             LDR      R0,[R0, #+0]
   \   000001C0   0x1E40             SUBS     R0,R0,#+1
   \   000001C2   0x.... 0x....      LDR.W    R1,??DataTable9
   \   000001C6   0x6008             STR      R0,[R1, #+0]
    299                           //if(RoadType==0)
    300                           //Reference_Width=Reference_Width-1;
    301                         }
    302                         Right=Left+Reference_Width;
   \                     ??Normal_16: (+1)
   \   000001C8   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   000001CC   0x6800             LDR      R0,[R0, #+0]
   \   000001CE   0x.... 0x....      LDR.W    R1,??DataTable9
   \   000001D2   0x6809             LDR      R1,[R1, #+0]
   \   000001D4   0x1808             ADDS     R0,R1,R0
   \   000001D6   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   000001DA   0x6008             STR      R0,[R1, #+0]
    303                         Rightlastfind = 0;
   \   000001DC   0x2000             MOVS     R0,#+0
   \   000001DE   0x.... 0x....      LDR.W    R1,??DataTable7
   \   000001E2   0x7008             STRB     R0,[R1, #+0]
   \   000001E4   0xE00C             B.N      ??Normal_17
    304                       }
    305                       else
    306                       {
    307                          Right=FallingEdge[FallingEdgeIndex];
   \                     ??Normal_14: (+1)
   \   000001E6   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   000001EA   0x.... 0x....      LDR.W    R1,??DataTable7_1
   \   000001EE   0x6809             LDR      R1,[R1, #+0]
   \   000001F0   0x5C08             LDRB     R0,[R1, R0]
   \   000001F2   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   000001F6   0x6008             STR      R0,[R1, #+0]
    308                          Rightlastfind=1;
   \   000001F8   0x2001             MOVS     R0,#+1
   \   000001FA   0x.... 0x....      LDR.W    R1,??DataTable7
   \   000001FE   0x7008             STRB     R0,[R1, #+0]
    309                       }
    310                       rightfind=1;  
   \                     ??Normal_17: (+1)
   \   00000200   0x2001             MOVS     R0,#+1
   \   00000202   0x.... 0x....      LDR.W    R1,??DataTable7_3
   \   00000206   0x7008             STRB     R0,[R1, #+0]
    311                       break;
    312                      }
    313                     
    314                    
    315                    
    316                     }//end for
    317                     
    318                     
    319                    if(rightfind==0)   
   \                     ??Normal_11: (+1)
   \   00000208   0x.... 0x....      LDR.W    R0,??DataTable7_3
   \   0000020C   0x7800             LDRB     R0,[R0, #+0]
   \   0000020E   0x2800             CMP      R0,#+0
   \   00000210   0xF040 0x80A5      BNE.W    ??Normal_6
    320                    {
    321                      if(CarSpeed>2.5)          //在车模的速度足够块的情况下才这样弄
   \   00000214   0x.... 0x....      LDR.W    R0,??DataTable7_4
   \   00000218   0x6800             LDR      R0,[R0, #+0]
   \   0000021A   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x40200001
   \   0000021E   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000222   0xD818             BHI.N    ??Normal_18
    322                      {
    323                       if(Left+Reference_Width<=118)  //虚拟出来的右边线要往外靠，但是不能靠得太狠了
   \   00000224   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   00000228   0x6800             LDR      R0,[R0, #+0]
   \   0000022A   0x.... 0x....      LDR.W    R1,??DataTable9
   \   0000022E   0x6809             LDR      R1,[R1, #+0]
   \   00000230   0x1808             ADDS     R0,R1,R0
   \   00000232   0x2877             CMP      R0,#+119
   \   00000234   0xDA07             BGE.N    ??Normal_19
    324                       {
    325                        Reference_Width++;
   \   00000236   0x.... 0x....      LDR.W    R0,??DataTable9
   \   0000023A   0x6800             LDR      R0,[R0, #+0]
   \   0000023C   0x1C40             ADDS     R0,R0,#+1
   \   0000023E   0x.... 0x....      LDR.W    R1,??DataTable9
   \   00000242   0x6008             STR      R0,[R1, #+0]
   \   00000244   0xE007             B.N      ??Normal_18
    326                       }
    327                       else 
    328                       {
    329                        Reference_Width=118-Left;
   \                     ??Normal_19: (+1)
   \   00000246   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   0000024A   0x6800             LDR      R0,[R0, #+0]
   \   0000024C   0xF1D0 0x0076      RSBS     R0,R0,#+118
   \   00000250   0x.... 0x....      LDR.W    R1,??DataTable9
   \   00000254   0x6008             STR      R0,[R1, #+0]
    330                       }
    331                      }
    332                      Right=Left+Reference_Width;
   \                     ??Normal_18: (+1)
   \   00000256   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   0000025A   0x6800             LDR      R0,[R0, #+0]
   \   0000025C   0x.... 0x....      LDR.W    R1,??DataTable9
   \   00000260   0x6809             LDR      R1,[R1, #+0]
   \   00000262   0x1808             ADDS     R0,R1,R0
   \   00000264   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   00000268   0x6008             STR      R0,[R1, #+0]
   \   0000026A   0xE078             B.N      ??Normal_6
    333                    }
    334                   }
    335                   else
    336                   {
    337                     
    338                     if(CarSpeed>2.5)          //在车模的速度足够块的情况下才这样弄
   \                     ??Normal_8: (+1)
   \   0000026C   0x.... 0x....      LDR.W    R0,??DataTable7_4
   \   00000270   0x6800             LDR      R0,[R0, #+0]
   \   00000272   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x40200001
   \   00000276   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000027A   0xD818             BHI.N    ??Normal_20
    339                      {
    340                       if(Left+Reference_Width<=118)  //虚拟出来的右边线要往外靠，但是不能靠得太狠了
   \   0000027C   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   00000280   0x6800             LDR      R0,[R0, #+0]
   \   00000282   0x.... 0x....      LDR.W    R1,??DataTable9
   \   00000286   0x6809             LDR      R1,[R1, #+0]
   \   00000288   0x1808             ADDS     R0,R1,R0
   \   0000028A   0x2877             CMP      R0,#+119
   \   0000028C   0xDA07             BGE.N    ??Normal_21
    341                       {
    342                        Reference_Width++;
   \   0000028E   0x.... 0x....      LDR.W    R0,??DataTable9
   \   00000292   0x6800             LDR      R0,[R0, #+0]
   \   00000294   0x1C40             ADDS     R0,R0,#+1
   \   00000296   0x.... 0x....      LDR.W    R1,??DataTable9
   \   0000029A   0x6008             STR      R0,[R1, #+0]
   \   0000029C   0xE007             B.N      ??Normal_20
    343                       }
    344                       else 
    345                       {
    346                        Reference_Width=118-Left;
   \                     ??Normal_21: (+1)
   \   0000029E   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   000002A2   0x6800             LDR      R0,[R0, #+0]
   \   000002A4   0xF1D0 0x0076      RSBS     R0,R0,#+118
   \   000002A8   0x.... 0x....      LDR.W    R1,??DataTable9
   \   000002AC   0x6008             STR      R0,[R1, #+0]
    347                       }
    348                      }
    349                      Right=Left+Reference_Width;
   \                     ??Normal_20: (+1)
   \   000002AE   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   000002B2   0x6800             LDR      R0,[R0, #+0]
   \   000002B4   0x.... 0x....      LDR.W    R1,??DataTable9
   \   000002B8   0x6809             LDR      R1,[R1, #+0]
   \   000002BA   0x1808             ADDS     R0,R1,R0
   \   000002BC   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   000002C0   0x6008             STR      R0,[R1, #+0]
   \   000002C2   0xE04C             B.N      ??Normal_6
    350                   }
    351                   
    352                  
    353                  }
    354                
    355                }
    356                else //这次没能找到左线
    357                {
    358                    Leftlastfind=0;
   \                     ??Normal_7: (+1)
   \   000002C4   0x2000             MOVS     R0,#+0
   \   000002C6   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   000002CA   0x7008             STRB     R0,[R1, #+0]
    359                    if(FindBoundary(LEFT))
   \   000002CC   0x2000             MOVS     R0,#+0
   \   000002CE   0x.... 0x....      BL       FindBoundary
   \   000002D2   0x2800             CMP      R0,#+0
   \   000002D4   0xD034             BEQ.N    ??Normal_22
    360                    {
    361                      if((RisingEdge[RisingEdgeIndex]<Leftlast))//左边界比之前更宽
   \   000002D6   0x.... 0x....      LDR.W    R0,??DataTable5
   \   000002DA   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   000002DE   0x6809             LDR      R1,[R1, #+0]
   \   000002E0   0x5C08             LDRB     R0,[R1, R0]
   \   000002E2   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   000002E6   0x7809             LDRB     R1,[R1, #+0]
   \   000002E8   0x4288             CMP      R0,R1
   \   000002EA   0xD20F             BCS.N    ??Normal_23
    362                      {
    363                        if(Rightlastfind==0)
   \   000002EC   0x.... 0x....      LDR.W    R0,??DataTable7
   \   000002F0   0x7800             LDRB     R0,[R0, #+0]
   \   000002F2   0x2800             CMP      R0,#+0
   \   000002F4   0xD133             BNE.N    ??Normal_6
    364                        {
    365                          RoadType=1; 
   \   000002F6   0x2001             MOVS     R0,#+1
   \   000002F8   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   000002FC   0x7008             STRB     R0,[R1, #+0]
    366                          Character_Distance=Distance; 
   \   000002FE   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   00000302   0x6800             LDR      R0,[R0, #+0]
   \   00000304   0x.... 0x....      LDR.W    R1,??DataTable8_3
   \   00000308   0x6008             STR      R0,[R1, #+0]
   \   0000030A   0xE028             B.N      ??Normal_6
    367                        }
    368                      }
    369                      else if(RisingEdge[RisingEdgeIndex]<Leftlast+8)//没有找到与上次相邻的边界，但找到的边界比上次更加靠近中心
   \                     ??Normal_23: (+1)
   \   0000030C   0x.... 0x....      LDR.W    R0,??DataTable5
   \   00000310   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000314   0x6809             LDR      R1,[R1, #+0]
   \   00000316   0x5C08             LDRB     R0,[R1, R0]
   \   00000318   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   0000031C   0x7809             LDRB     R1,[R1, #+0]
   \   0000031E   0x3108             ADDS     R1,R1,#+8
   \   00000320   0x4288             CMP      R0,R1
   \   00000322   0xDA1C             BGE.N    ??Normal_6
    370                      {
    371                        Left=RisingEdge[RisingEdgeIndex];
   \   00000324   0x.... 0x....      LDR.W    R0,??DataTable5
   \   00000328   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   0000032C   0x6809             LDR      R1,[R1, #+0]
   \   0000032E   0x5C08             LDRB     R0,[R1, R0]
   \   00000330   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000334   0x6008             STR      R0,[R1, #+0]
    372                        Leftlastfind=1;   
   \   00000336   0x2001             MOVS     R0,#+1
   \   00000338   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   0000033C   0x7008             STRB     R0,[R1, #+0]
   \   0000033E   0xE00E             B.N      ??Normal_6
    373                      }
    374          
    375          
    376                    }
    377                    else
    378                    {
    379                      if(Rightlastfind==0 )
   \                     ??Normal_22: (+1)
   \   00000340   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000344   0x7800             LDRB     R0,[R0, #+0]
   \   00000346   0x2800             CMP      R0,#+0
   \   00000348   0xD109             BNE.N    ??Normal_6
    380                      {
    381                        RoadType=1; 
   \   0000034A   0x2001             MOVS     R0,#+1
   \   0000034C   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   00000350   0x7008             STRB     R0,[R1, #+0]
    382                        Character_Distance=Distance; 
   \   00000352   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   00000356   0x6800             LDR      R0,[R0, #+0]
   \   00000358   0x.... 0x....      LDR.W    R1,??DataTable8_3
   \   0000035C   0x6008             STR      R0,[R1, #+0]
    383                      }
    384                    }
    385          
    386                }
    387              }
    388              
    389              if(Rightlastfind ) //上次找到了右边线
   \                     ??Normal_6: (+1)
   \   0000035E   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000362   0x7800             LDRB     R0,[R0, #+0]
   \   00000364   0x2800             CMP      R0,#+0
   \   00000366   0xF000 0x8130      BEQ.W    ??Normal_24
    390              {
    391                 if(FindNearest(RIGHT,Rightlast))	//这次能找到右线
   \   0000036A   0x.... 0x....      LDR.W    R0,??DataTable8_4
   \   0000036E   0x7801             LDRB     R1,[R0, #+0]
   \   00000370   0x2001             MOVS     R0,#+1
   \   00000372   0x.... 0x....      BL       FindNearest
   \   00000376   0x2800             CMP      R0,#+0
   \   00000378   0xF000 0x80E0      BEQ.W    ??Normal_25
    392                 {
    393                    Right=FallingEdge[FallingEdgeIndex];
   \   0000037C   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   00000380   0x.... 0x....      LDR.W    R1,??DataTable7_1
   \   00000384   0x6809             LDR      R1,[R1, #+0]
   \   00000386   0x5C08             LDRB     R0,[R1, R0]
   \   00000388   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   0000038C   0x6008             STR      R0,[R1, #+0]
    394                    Rightlastfind=1;
   \   0000038E   0x2001             MOVS     R0,#+1
   \   00000390   0x.... 0x....      LDR.W    R1,??DataTable7
   \   00000394   0x7008             STRB     R0,[R1, #+0]
    395                    if(Leftlastfind==0)  //上次没有找到左线
   \   00000396   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   0000039A   0x7800             LDRB     R0,[R0, #+0]
   \   0000039C   0x2800             CMP      R0,#+0
   \   0000039E   0xF040 0x8114      BNE.W    ??Normal_24
    396                    {
    397                       if(RisingEdgeCnt>0)
   \   000003A2   0x....             LDR.N    R0,??DataTable4_1
   \   000003A4   0x7800             LDRB     R0,[R0, #+0]
   \   000003A6   0x2800             CMP      R0,#+0
   \   000003A8   0xF000 0x80A1      BEQ.W    ??Normal_26
    398                       {  
    399                          for(RisingEdgeIndex=RisingEdgeCnt-1;RisingEdgeIndex>=0;RisingEdgeIndex--)
   \   000003AC   0x....             LDR.N    R0,??DataTable4_1
   \   000003AE   0x7800             LDRB     R0,[R0, #+0]
   \   000003B0   0x1E40             SUBS     R0,R0,#+1
   \   000003B2   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   000003B6   0x6008             STR      R0,[R1, #+0]
   \   000003B8   0xE006             B.N      ??Normal_27
   \                     ??Normal_28: (+1)
   \   000003BA   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   000003BE   0x6800             LDR      R0,[R0, #+0]
   \   000003C0   0x1E40             SUBS     R0,R0,#+1
   \   000003C2   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   000003C6   0x6008             STR      R0,[R1, #+0]
   \                     ??Normal_27: (+1)
   \   000003C8   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   000003CC   0x6800             LDR      R0,[R0, #+0]
   \   000003CE   0x2800             CMP      R0,#+0
   \   000003D0   0xD45F             BMI.N    ??Normal_29
    400                          {
    401                              leftfind=0;
   \   000003D2   0x2000             MOVS     R0,#+0
   \   000003D4   0x.... 0x....      LDR.W    R1,??DataTable8_5
   \   000003D8   0x7008             STRB     R0,[R1, #+0]
    402                              if(RisingEdge[RisingEdgeIndex]<Right) //找到潜在边线
   \   000003DA   0x....             LDR.N    R0,??DataTable5
   \   000003DC   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   000003E0   0x6809             LDR      R1,[R1, #+0]
   \   000003E2   0x5C08             LDRB     R0,[R1, R0]
   \   000003E4   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   000003E8   0x6809             LDR      R1,[R1, #+0]
   \   000003EA   0x4288             CMP      R0,R1
   \   000003EC   0xDAE5             BGE.N    ??Normal_28
    403                              {
    404                                  tempwidth = Right-RisingEdge[RisingEdgeIndex];
   \   000003EE   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   000003F2   0x6800             LDR      R0,[R0, #+0]
   \   000003F4   0x....             LDR.N    R1,??DataTable5
   \   000003F6   0x.... 0x....      LDR.W    R2,??DataTable6_4
   \   000003FA   0x6812             LDR      R2,[R2, #+0]
   \   000003FC   0x5C51             LDRB     R1,[R2, R1]
   \   000003FE   0x1A40             SUBS     R0,R0,R1
    405                                  if (ABS(tempwidth-Reference_Width)>=2)       
   \   00000400   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000402   0x.... 0x....      LDR.W    R1,??DataTable9
   \   00000406   0x6809             LDR      R1,[R1, #+0]
   \   00000408   0x1A41             SUBS     R1,R0,R1
   \   0000040A   0x2901             CMP      R1,#+1
   \   0000040C   0xDB05             BLT.N    ??Normal_30
   \   0000040E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000410   0x.... 0x....      LDR.W    R1,??DataTable9
   \   00000414   0x6809             LDR      R1,[R1, #+0]
   \   00000416   0x1A41             SUBS     R1,R0,R1
   \   00000418   0xE005             B.N      ??Normal_31
   \                     ??Normal_30: (+1)
   \   0000041A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000041C   0x4241             RSBS     R1,R0,#+0
   \   0000041E   0x.... 0x....      LDR.W    R2,??DataTable9
   \   00000422   0x6812             LDR      R2,[R2, #+0]
   \   00000424   0x1A89             SUBS     R1,R1,R2
   \                     ??Normal_31: (+1)
   \   00000426   0x2902             CMP      R1,#+2
   \   00000428   0xDB23             BLT.N    ??Normal_32
    406                                  {
    407                                    if(tempwidth>Reference_Width)   Reference_Width=Reference_Width+1; 
   \   0000042A   0x.... 0x....      LDR.W    R1,??DataTable9
   \   0000042E   0x6809             LDR      R1,[R1, #+0]
   \   00000430   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000432   0x4281             CMP      R1,R0
   \   00000434   0xDA07             BGE.N    ??Normal_33
   \   00000436   0x.... 0x....      LDR.W    R0,??DataTable9
   \   0000043A   0x6800             LDR      R0,[R0, #+0]
   \   0000043C   0x1C40             ADDS     R0,R0,#+1
   \   0000043E   0x.... 0x....      LDR.W    R1,??DataTable9
   \   00000442   0x6008             STR      R0,[R1, #+0]
   \   00000444   0xE006             B.N      ??Normal_34
    408                                    else
    409                                    {
    410                                        Reference_Width=Reference_Width-1;
   \                     ??Normal_33: (+1)
   \   00000446   0x.... 0x....      LDR.W    R0,??DataTable9
   \   0000044A   0x6800             LDR      R0,[R0, #+0]
   \   0000044C   0x1E40             SUBS     R0,R0,#+1
   \   0000044E   0x.... 0x....      LDR.W    R1,??DataTable9
   \   00000452   0x6008             STR      R0,[R1, #+0]
    411                                       
    412                                    }
    413                                    Left=Right-Reference_Width;
   \                     ??Normal_34: (+1)
   \   00000454   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000458   0x6800             LDR      R0,[R0, #+0]
   \   0000045A   0x.... 0x....      LDR.W    R1,??DataTable9
   \   0000045E   0x6809             LDR      R1,[R1, #+0]
   \   00000460   0x1A40             SUBS     R0,R0,R1
   \   00000462   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000466   0x6008             STR      R0,[R1, #+0]
    414                                    Leftlastfind = 0;
   \   00000468   0x2000             MOVS     R0,#+0
   \   0000046A   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   0000046E   0x7008             STRB     R0,[R1, #+0]
   \   00000470   0xE00B             B.N      ??Normal_35
    415                                      
    416                                  }
    417                                  else
    418                                  {
    419                                    Left=RisingEdge[RisingEdgeIndex];
   \                     ??Normal_32: (+1)
   \   00000472   0x....             LDR.N    R0,??DataTable5
   \   00000474   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000478   0x6809             LDR      R1,[R1, #+0]
   \   0000047A   0x5C08             LDRB     R0,[R1, R0]
   \   0000047C   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000480   0x6008             STR      R0,[R1, #+0]
    420                                    Leftlastfind=1;
   \   00000482   0x2001             MOVS     R0,#+1
   \   00000484   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000488   0x7008             STRB     R0,[R1, #+0]
    421                                  }
    422                                  leftfind=1;
   \                     ??Normal_35: (+1)
   \   0000048A   0x2001             MOVS     R0,#+1
   \   0000048C   0x.... 0x....      LDR.W    R1,??DataTable8_5
   \   00000490   0x7008             STRB     R0,[R1, #+0]
    423                                  break;
    424                              
    425                              }
    426                          
    427                          }//end for
    428                          if(leftfind==0)   //虽然说有上升沿，但是该上升沿无效
   \                     ??Normal_29: (+1)
   \   00000492   0x.... 0x....      LDR.W    R0,??DataTable8_5
   \   00000496   0x7800             LDRB     R0,[R0, #+0]
   \   00000498   0x2800             CMP      R0,#+0
   \   0000049A   0xF040 0x8096      BNE.W    ??Normal_24
    429                          {
    430                              if(CarSpeed>2.5)              //速度限制，防止出线
   \   0000049E   0x.... 0x....      LDR.W    R0,??DataTable7_4
   \   000004A2   0x6800             LDR      R0,[R0, #+0]
   \   000004A4   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x40200001
   \   000004A8   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000004AC   0xD816             BHI.N    ??Normal_36
    431                              {
    432                               if(Right-Reference_Width>=10)  //虚拟出来的右边线要往外靠，但是不能靠得太狠了
   \   000004AE   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   000004B2   0x6800             LDR      R0,[R0, #+0]
   \   000004B4   0x.... 0x....      LDR.W    R1,??DataTable9
   \   000004B8   0x6809             LDR      R1,[R1, #+0]
   \   000004BA   0x1A40             SUBS     R0,R0,R1
   \   000004BC   0x280A             CMP      R0,#+10
   \   000004BE   0xDB07             BLT.N    ??Normal_37
    433                               {
    434                                  Reference_Width++;
   \   000004C0   0x.... 0x....      LDR.W    R0,??DataTable9
   \   000004C4   0x6800             LDR      R0,[R0, #+0]
   \   000004C6   0x1C40             ADDS     R0,R0,#+1
   \   000004C8   0x.... 0x....      LDR.W    R1,??DataTable9
   \   000004CC   0x6008             STR      R0,[R1, #+0]
   \   000004CE   0xE005             B.N      ??Normal_36
    435                               }
    436                               else 
    437                               {
    438                                  Reference_Width=Right-10;
   \                     ??Normal_37: (+1)
   \   000004D0   0x....             LDR.N    R0,??DataTable6_2
   \   000004D2   0x6800             LDR      R0,[R0, #+0]
   \   000004D4   0x380A             SUBS     R0,R0,#+10
   \   000004D6   0x.... 0x....      LDR.W    R1,??DataTable9
   \   000004DA   0x6008             STR      R0,[R1, #+0]
    439                               } 
    440                              }
    441                             Left=Right-Reference_Width;
   \                     ??Normal_36: (+1)
   \   000004DC   0x....             LDR.N    R0,??DataTable6_2
   \   000004DE   0x6800             LDR      R0,[R0, #+0]
   \   000004E0   0x.... 0x....      LDR.W    R1,??DataTable9
   \   000004E4   0x6809             LDR      R1,[R1, #+0]
   \   000004E6   0x1A40             SUBS     R0,R0,R1
   \   000004E8   0x....             LDR.N    R1,??DataTable6_1
   \   000004EA   0x6008             STR      R0,[R1, #+0]
   \   000004EC   0xE06D             B.N      ??Normal_24
    442                          }
    443          
    444                       }
    445                       else
    446                       {
    447                         
    448                          if(CarSpeed>2.5)              //速度限制，防止出线
   \                     ??Normal_26: (+1)
   \   000004EE   0x.... 0x....      LDR.W    R0,??DataTable7_4
   \   000004F2   0x6800             LDR      R0,[R0, #+0]
   \   000004F4   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x40200001
   \   000004F8   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000004FC   0xD815             BHI.N    ??Normal_38
    449                          {
    450                           if(Right-Reference_Width>=10)  //虚拟出来的右边线要往外靠，但是不能靠得太狠了
   \   000004FE   0x....             LDR.N    R0,??DataTable6_2
   \   00000500   0x6800             LDR      R0,[R0, #+0]
   \   00000502   0x.... 0x....      LDR.W    R1,??DataTable9
   \   00000506   0x6809             LDR      R1,[R1, #+0]
   \   00000508   0x1A40             SUBS     R0,R0,R1
   \   0000050A   0x280A             CMP      R0,#+10
   \   0000050C   0xDB07             BLT.N    ??Normal_39
    451                           {
    452                              Reference_Width++;
   \   0000050E   0x.... 0x....      LDR.W    R0,??DataTable9
   \   00000512   0x6800             LDR      R0,[R0, #+0]
   \   00000514   0x1C40             ADDS     R0,R0,#+1
   \   00000516   0x.... 0x....      LDR.W    R1,??DataTable9
   \   0000051A   0x6008             STR      R0,[R1, #+0]
   \   0000051C   0xE005             B.N      ??Normal_38
    453                           }
    454                           else 
    455                           {
    456                              Reference_Width=Right-10;
   \                     ??Normal_39: (+1)
   \   0000051E   0x....             LDR.N    R0,??DataTable6_2
   \   00000520   0x6800             LDR      R0,[R0, #+0]
   \   00000522   0x380A             SUBS     R0,R0,#+10
   \   00000524   0x.... 0x....      LDR.W    R1,??DataTable9
   \   00000528   0x6008             STR      R0,[R1, #+0]
    457                           } 
    458                          }
    459                          Left=Right-Reference_Width;
   \                     ??Normal_38: (+1)
   \   0000052A   0x....             LDR.N    R0,??DataTable6_2
   \   0000052C   0x6800             LDR      R0,[R0, #+0]
   \   0000052E   0x.... 0x....      LDR.W    R1,??DataTable9
   \   00000532   0x6809             LDR      R1,[R1, #+0]
   \   00000534   0x1A40             SUBS     R0,R0,R1
   \   00000536   0x....             LDR.N    R1,??DataTable6_1
   \   00000538   0x6008             STR      R0,[R1, #+0]
   \   0000053A   0xE046             B.N      ??Normal_24
    460                       }
    461                    
    462                    }
    463                 
    464                 }
    465                 else//未能找到邻近的边线
    466                 {
    467                     Rightlastfind=0; 
   \                     ??Normal_25: (+1)
   \   0000053C   0x2000             MOVS     R0,#+0
   \   0000053E   0x.... 0x....      LDR.W    R1,??DataTable7
   \   00000542   0x7008             STRB     R0,[R1, #+0]
    468                     if(FindBoundary(RIGHT)) 
   \   00000544   0x2001             MOVS     R0,#+1
   \   00000546   0x.... 0x....      BL       FindBoundary
   \   0000054A   0x2800             CMP      R0,#+0
   \   0000054C   0xD02F             BEQ.N    ??Normal_40
    469                     {
    470                       
    471                       if(FallingEdge[FallingEdgeIndex]>Rightlast)
   \   0000054E   0x.... 0x....      LDR.W    R0,??DataTable8_4
   \   00000552   0x7800             LDRB     R0,[R0, #+0]
   \   00000554   0x....             LDR.N    R1,??DataTable5_1
   \   00000556   0x.... 0x....      LDR.W    R2,??DataTable7_1
   \   0000055A   0x6812             LDR      R2,[R2, #+0]
   \   0000055C   0x5C51             LDRB     R1,[R2, R1]
   \   0000055E   0x4288             CMP      R0,R1
   \   00000560   0xD20E             BCS.N    ??Normal_41
    472                       {
    473                         if(Leftlastfind==0)
   \   00000562   0x....             LDR.N    R0,??DataTable6_3
   \   00000564   0x7800             LDRB     R0,[R0, #+0]
   \   00000566   0x2800             CMP      R0,#+0
   \   00000568   0xD12F             BNE.N    ??Normal_24
    474                         {
    475                            RoadType=1; 
   \   0000056A   0x2001             MOVS     R0,#+1
   \   0000056C   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   00000570   0x7008             STRB     R0,[R1, #+0]
    476                            Character_Distance=Distance;
   \   00000572   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   00000576   0x6800             LDR      R0,[R0, #+0]
   \   00000578   0x.... 0x....      LDR.W    R1,??DataTable8_3
   \   0000057C   0x6008             STR      R0,[R1, #+0]
   \   0000057E   0xE024             B.N      ??Normal_24
    477                         }
    478                       
    479                       }
    480                       else if(FallingEdge[FallingEdgeIndex]>Rightlast-8)
   \                     ??Normal_41: (+1)
   \   00000580   0x.... 0x....      LDR.W    R0,??DataTable8_4
   \   00000584   0x7800             LDRB     R0,[R0, #+0]
   \   00000586   0x3808             SUBS     R0,R0,#+8
   \   00000588   0x....             LDR.N    R1,??DataTable5_1
   \   0000058A   0x.... 0x....      LDR.W    R2,??DataTable7_1
   \   0000058E   0x6812             LDR      R2,[R2, #+0]
   \   00000590   0x5C51             LDRB     R1,[R2, R1]
   \   00000592   0x4288             CMP      R0,R1
   \   00000594   0xDA19             BGE.N    ??Normal_24
    481                       {
    482                          Right=FallingEdge[FallingEdgeIndex];
   \   00000596   0x....             LDR.N    R0,??DataTable5_1
   \   00000598   0x.... 0x....      LDR.W    R1,??DataTable7_1
   \   0000059C   0x6809             LDR      R1,[R1, #+0]
   \   0000059E   0x5C08             LDRB     R0,[R1, R0]
   \   000005A0   0x....             LDR.N    R1,??DataTable6_2
   \   000005A2   0x6008             STR      R0,[R1, #+0]
    483                          Rightlastfind=1;
   \   000005A4   0x2001             MOVS     R0,#+1
   \   000005A6   0x.... 0x....      LDR.W    R1,??DataTable7
   \   000005AA   0x7008             STRB     R0,[R1, #+0]
   \   000005AC   0xE00D             B.N      ??Normal_24
    484                       }
    485          
    486                     
    487                     }
    488                     
    489                     else
    490                     {
    491                       if(Leftlastfind==0)
   \                     ??Normal_40: (+1)
   \   000005AE   0x....             LDR.N    R0,??DataTable6_3
   \   000005B0   0x7800             LDRB     R0,[R0, #+0]
   \   000005B2   0x2800             CMP      R0,#+0
   \   000005B4   0xD109             BNE.N    ??Normal_24
    492                       {
    493                          RoadType=1; 
   \   000005B6   0x2001             MOVS     R0,#+1
   \   000005B8   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   000005BC   0x7008             STRB     R0,[R1, #+0]
    494                          Character_Distance=Distance;
   \   000005BE   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   000005C2   0x6800             LDR      R0,[R0, #+0]
   \   000005C4   0x.... 0x....      LDR.W    R1,??DataTable8_3
   \   000005C8   0x6008             STR      R0,[R1, #+0]
    495                       }
    496                     
    497                     }
    498                    
    499                 }
    500              
    501              
    502              }
    503              if(Rightlastfind&&Leftlastfind)
   \                     ??Normal_24: (+1)
   \   000005CA   0x.... 0x....      LDR.W    R0,??DataTable7
   \   000005CE   0x7800             LDRB     R0,[R0, #+0]
   \   000005D0   0x2800             CMP      R0,#+0
   \   000005D2   0xD014             BEQ.N    ??Normal_1
   \   000005D4   0x....             LDR.N    R0,??DataTable6_3
   \   000005D6   0x7800             LDRB     R0,[R0, #+0]
   \   000005D8   0x2800             CMP      R0,#+0
   \   000005DA   0xD010             BEQ.N    ??Normal_1
    504              {
    505          
    506               Reference_Width=Right-Left; 
   \   000005DC   0x....             LDR.N    R0,??DataTable6_2
   \   000005DE   0x6800             LDR      R0,[R0, #+0]
   \   000005E0   0x....             LDR.N    R1,??DataTable6_1
   \   000005E2   0x6809             LDR      R1,[R1, #+0]
   \   000005E4   0x1A40             SUBS     R0,R0,R1
   \   000005E6   0x.... 0x....      LDR.W    R1,??DataTable9
   \   000005EA   0x6008             STR      R0,[R1, #+0]
    507               if(Reference_Width<35)Reference_Width=35;
   \   000005EC   0x.... 0x....      LDR.W    R0,??DataTable9
   \   000005F0   0x6800             LDR      R0,[R0, #+0]
   \   000005F2   0x2823             CMP      R0,#+35
   \   000005F4   0xDA03             BGE.N    ??Normal_1
   \   000005F6   0x2023             MOVS     R0,#+35
   \   000005F8   0x.... 0x....      LDR.W    R1,??DataTable9
   \   000005FC   0x6008             STR      R0,[R1, #+0]
    508              }
    509           
    510           }
    511          
    512          }
   \                     ??Normal_1: (+1)
   \   000005FE   0xBD01             POP      {R0,PC}          ;; return
    513          
    514          
    515          /*****
    516          * 计算赛道的亮度
    517          ****/

   \                                 In section .text, align 2, keep-with-next
    518          void Brightness_Calculate(void)
    519          {
   \                     Brightness_Calculate: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    520          
    521            uint8 i;
    522            uint32 tempi=0;
   \   00000002   0x2000             MOVS     R0,#+0
    523            float tempf=0;
   \   00000004   0x2600             MOVS     R6,#+0
    524            for(i=Left;i<=Right;i++)
   \   00000006   0x....             LDR.N    R1,??DataTable6_1
   \   00000008   0x6809             LDR      R1,[R1, #+0]
   \   0000000A   0xE006             B.N      ??Brightness_Calculate_0
    525            {
    526              tempi+=CCD_Buff[i];
   \                     ??Brightness_Calculate_1: (+1)
   \   0000000C   0x....             LDR.N    R2,??DataTable5_3
   \   0000000E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000010   0xF832 0x2011      LDRH     R2,[R2, R1, LSL #+1]
   \   00000014   0xFA10 0xF082      UXTAH    R0,R0,R2
    527            }
   \   00000018   0x1C49             ADDS     R1,R1,#+1
   \                     ??Brightness_Calculate_0: (+1)
   \   0000001A   0x....             LDR.N    R2,??DataTable6_2
   \   0000001C   0x6812             LDR      R2,[R2, #+0]
   \   0000001E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000020   0x428A             CMP      R2,R1
   \   00000022   0xDAF3             BGE.N    ??Brightness_Calculate_1
    528            tempf=tempi*1.0/(Right-Left);
   \   00000024   0x.... 0x....      BL       __aeabi_ui2d
   \   00000028   0x2200             MOVS     R2,#+0
   \   0000002A   0x.... 0x....      LDR.W    R3,??DataTable9_1  ;; 0x3ff00000
   \   0000002E   0x.... 0x....      BL       __aeabi_dmul
   \   00000032   0x0004             MOVS     R4,R0
   \   00000034   0x000D             MOVS     R5,R1
   \   00000036   0x....             LDR.N    R0,??DataTable6_2
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x....             LDR.N    R1,??DataTable6_1
   \   0000003C   0x6809             LDR      R1,[R1, #+0]
   \   0000003E   0x1A40             SUBS     R0,R0,R1
   \   00000040   0x.... 0x....      BL       __aeabi_i2d
   \   00000044   0x0002             MOVS     R2,R0
   \   00000046   0x000B             MOVS     R3,R1
   \   00000048   0x0020             MOVS     R0,R4
   \   0000004A   0x0029             MOVS     R1,R5
   \   0000004C   0x.... 0x....      BL       __aeabi_ddiv
   \   00000050   0x.... 0x....      BL       __aeabi_d2f
   \   00000054   0x0006             MOVS     R6,R0
    529            
    530            tempf=tempf*(Max_Value-CCD_Offset)/127.0+CCD_Offset;
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable9_2
   \   0000005A   0x8800             LDRH     R0,[R0, #+0]
   \   0000005C   0x.... 0x....      LDR.W    R1,??DataTable9_3
   \   00000060   0x7809             LDRB     R1,[R1, #+0]
   \   00000062   0x1A40             SUBS     R0,R0,R1
   \   00000064   0x.... 0x....      BL       __aeabi_i2f
   \   00000068   0x0031             MOVS     R1,R6
   \   0000006A   0x.... 0x....      BL       __aeabi_fmul
   \   0000006E   0x.... 0x....      BL       __aeabi_f2d
   \   00000072   0x2200             MOVS     R2,#+0
   \   00000074   0x.... 0x....      LDR.W    R3,??DataTable9_4  ;; 0x405fc000
   \   00000078   0x.... 0x....      BL       __aeabi_ddiv
   \   0000007C   0x0004             MOVS     R4,R0
   \   0000007E   0x000D             MOVS     R5,R1
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable9_3
   \   00000084   0x7800             LDRB     R0,[R0, #+0]
   \   00000086   0x.... 0x....      BL       __aeabi_ui2d
   \   0000008A   0x0022             MOVS     R2,R4
   \   0000008C   0x002B             MOVS     R3,R5
   \   0000008E   0x.... 0x....      BL       __aeabi_dadd
   \   00000092   0x.... 0x....      BL       __aeabi_d2f
   \   00000096   0x0006             MOVS     R6,R0
    531            Brightness=(int)(Brightness*0.95+tempf*0.05);
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable9_5
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0x.... 0x....      BL       __aeabi_f2d
   \   000000A2   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   000000A6   0x.... 0x....      LDR.W    R3,??DataTable9_6  ;; 0x3fee6666
   \   000000AA   0x.... 0x....      BL       __aeabi_dmul
   \   000000AE   0x0004             MOVS     R4,R0
   \   000000B0   0x000D             MOVS     R5,R1
   \   000000B2   0x0030             MOVS     R0,R6
   \   000000B4   0x.... 0x....      BL       __aeabi_f2d
   \   000000B8   0x.... 0x....      LDR.W    R2,??DataTable9_7  ;; 0x9999999a
   \   000000BC   0x.... 0x....      LDR.W    R3,??DataTable10  ;; 0x3fa99999
   \   000000C0   0x.... 0x....      BL       __aeabi_dmul
   \   000000C4   0x0022             MOVS     R2,R4
   \   000000C6   0x002B             MOVS     R3,R5
   \   000000C8   0x.... 0x....      BL       __aeabi_dadd
   \   000000CC   0x.... 0x....      BL       __aeabi_d2iz
   \   000000D0   0x.... 0x....      BL       __aeabi_i2f
   \   000000D4   0x.... 0x....      LDR.W    R1,??DataTable9_5
   \   000000D8   0x6008             STR      R0,[R1, #+0]
    532            CCD_Draw_Buff[140]=BYTE0(Brightness);
   \   000000DA   0x.... 0x....      LDR.W    R0,??DataTable9_5
   \   000000DE   0x7800             LDRB     R0,[R0, #+0]
   \   000000E0   0x.... 0x....      LDR.W    R1,??DataTable12
   \   000000E4   0xF881 0x008C      STRB     R0,[R1, #+140]
    533            CCD_Draw_Buff[141]=BYTE1(Brightness);
   \   000000E8   0x.... 0x....      LDR.W    R0,??DataTable9_5
   \   000000EC   0x7840             LDRB     R0,[R0, #+1]
   \   000000EE   0x.... 0x....      LDR.W    R1,??DataTable12
   \   000000F2   0xF881 0x008D      STRB     R0,[R1, #+141]
    534          
    535            
    536          
    537          }
   \   000000F6   0xBD70             POP      {R4-R6,PC}       ;; return
    538          /****
    539          **斜入十字处理
    540          ****/
    541          

   \                                 In section .text, align 2, keep-with-next
    542          void Is_CrossRoad(void)
    543          {
    544             static int Width_Change_Cnt_L;
    545             static int Pre_Width_Out_L,Pre_Width_All_L;
    546             int Width_Out_L,Line_Out_L,Width_All_L;
    547            
    548             static int Width_Change_Cnt_R;
    549             static int Pre_Width_Out_R,Pre_Width_All_R;        
    550             int Width_Out_R,Line_Out_R,Width_All_R;
    551             
    552             static uint8 All_Find=0;
    553            
    554            /*if(Leftlastfind && Rightlastfind) // 两条边线均找到
    555            {
    556              if(RisingEdgeIndex<RisingEdgeCnt-1)
    557              {
    558                Line_Out_R=RisingEdge[RisingEdgeIndex+1];
    559                Width_Out_R=Line_Out_R-Right;
    560                Width_All_R=Line_Out_R-Left;
    561                if(Width_Out_R<6)
    562                {
    563                  if(RisingEdgeIndex<RisingEdgeCnt-2)
    564                  {
    565                    Line_Out_R=RisingEdge[RisingEdgeIndex+2];
    566                    Width_Out_R=Line_Out_R-Right;
    567                    Width_All_R=Line_Out_R-Left;
    568                  }
    569                
    570                }
    571                if(Width_Out_R>8)
    572                {
    573                  if((Pre_Width_Out_R>Width_Out_R)&&(Width_All_R<=Pre_Width_All_R))
    574                  {
    575                    Width_Change_Cnt_R++;
    576                  }
    577                  else Width_Change_Cnt_R=0;
    578                
    579                }
    580                Pre_Width_Out_R=Width_Out_R;
    581                Pre_Width_All_R=Width_All_R;
    582              
    583              }
    584              else
    585              {
    586                  Width_Change_Cnt_R=0;
    587              
    588              }
    589              
    590              
    591              
    592              if(FallingEdgeIndex>=1)
    593              {
    594                Line_Out_L=FallingEdge[FallingEdgeIndex-1];
    595                Width_Out_L=Left-Line_Out_L;
    596                Width_All_L=Right-Line_Out_L;
    597                if(Width_Out_L<6)
    598                {
    599                  if(FallingEdgeIndex>=2)
    600                  {
    601                    Line_Out_L=FallingEdge[FallingEdgeIndex-2];
    602                    Width_Out_L=Left-Line_Out_L;
    603                    Width_All_L=Right-Line_Out_L;     
    604                  }
    605          
    606                }
    607                if(Width_Out_L>8)
    608                {
    609                  if((Pre_Width_Out_L>Width_Out_L)&&(Pre_Width_All_L>=Width_All_L))
    610                  {
    611                    Width_Change_Cnt_L++;
    612          
    613                  }
    614                  else Width_Change_Cnt_L=0;
    615          
    616                }
    617                Pre_Width_Out_L=Width_Out_L;
    618                Pre_Width_All_L=Width_All_L;
    619          
    620              }
    621              else 
    622              {
    623                Width_Change_Cnt_L=0;
    624              
    625              }
    626              All_Find=1;
    627            
    628            }
    629            else
    630            {
    631            
    632              if(Width_Change_Cnt_R>=4 || Width_Change_Cnt_L>=4)
    633              {
    634                curve_to_cross=1;
    635                RoadType=1;
    636                Character_Distance =Distance;
    637              
    638              
    639              
    640              }
    641              if(All_Find==1)
    642              {
    643                Width_Change_Cnt_R=0;
    644                Width_Change_Cnt_L=0;
    645              
    646              
    647              }
    648              else
    649              {
    650                if(Leftlastfind&&(Left<60))
    651                {
    652                   if((FallingEdgeCnt==0)||FallingEdge[FallingEdgeCnt-1]<Left) 
    653                  {
    654                    if(Left<Leftlast) Width_Change_Cnt_L++;         
    655                    else  Width_Change_Cnt_L=0;
    656                  }
    657                  else Width_Change_Cnt_L=0;
    658                }
    659                if(Rightlastfind&&(Right>70))
    660                {
    661                  if((RisingEdgeCnt==0)||RisingEdge[0]>Right)  //左边没有多的线了
    662                  {
    663                    if(Right>Rightlast)    Width_Change_Cnt_R++;
    664                    else  Width_Change_Cnt_R=0;
    665                  }
    666                  else Width_Change_Cnt_R=0;
    667                }
    668              
    669              
    670              }
    671              All_Find=0;
    672            
    673            
    674            
    675            
    676            
    677            
    678            
    679            
    680            }*/
    681             
    682             
    683              if(Width_Change_Cnt_R>=4 || Width_Change_Cnt_L>=4)
   \                     Is_CrossRoad: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x2804             CMP      R0,#+4
   \   00000008   0xDA04             BGE.N    ??Is_CrossRoad_0
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x2804             CMP      R0,#+4
   \   00000012   0xDB20             BLT.N    ??Is_CrossRoad_1
    684              {
    685                if(Width_Change_Cnt_R>=4)
   \                     ??Is_CrossRoad_0: (+1)
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x2804             CMP      R0,#+4
   \   0000001C   0xDB04             BLT.N    ??Is_CrossRoad_2
    686                  flag_curve_to_cross=1;
   \   0000001E   0x2001             MOVS     R0,#+1
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable11
   \   00000024   0x7008             STRB     R0,[R1, #+0]
   \   00000026   0xE008             B.N      ??Is_CrossRoad_3
    687                else if(Width_Change_Cnt_L>=4) flag_curve_to_cross=0;
   \                     ??Is_CrossRoad_2: (+1)
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0x2804             CMP      R0,#+4
   \   00000030   0xDB03             BLT.N    ??Is_CrossRoad_3
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable11
   \   00000038   0x7008             STRB     R0,[R1, #+0]
    688                curve_to_cross=1;
   \                     ??Is_CrossRoad_3: (+1)
   \   0000003A   0x2001             MOVS     R0,#+1
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable12_3
   \   00000040   0x7008             STRB     R0,[R1, #+0]
    689                RoadType=1;
   \   00000042   0x2001             MOVS     R0,#+1
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   00000048   0x7008             STRB     R0,[R1, #+0]
    690                Character_Distance =Distance;
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable8_3
   \   00000054   0x6008             STR      R0,[R1, #+0]
    691              
    692              
    693              
    694              }
    695          
    696            
    697                if(Leftlastfind&&(Left<60))
   \                     ??Is_CrossRoad_1: (+1)
   \   00000056   0x....             LDR.N    R0,??DataTable6_3
   \   00000058   0x7800             LDRB     R0,[R0, #+0]
   \   0000005A   0x2800             CMP      R0,#+0
   \   0000005C   0xD029             BEQ.N    ??Is_CrossRoad_4
   \   0000005E   0x....             LDR.N    R0,??DataTable6_1
   \   00000060   0x6800             LDR      R0,[R0, #+0]
   \   00000062   0x283C             CMP      R0,#+60
   \   00000064   0xDA25             BGE.N    ??Is_CrossRoad_4
    698                {
    699                   if((FallingEdgeCnt==0)||FallingEdge[FallingEdgeCnt-1]<Left) 
   \   00000066   0x....             LDR.N    R0,??DataTable6
   \   00000068   0x7800             LDRB     R0,[R0, #+0]
   \   0000006A   0x2800             CMP      R0,#+0
   \   0000006C   0xD00A             BEQ.N    ??Is_CrossRoad_5
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   00000072   0x....             LDR.N    R1,??DataTable6
   \   00000074   0x7809             LDRB     R1,[R1, #+0]
   \   00000076   0x1808             ADDS     R0,R1,R0
   \   00000078   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   0000007C   0x....             LDR.N    R1,??DataTable6_1
   \   0000007E   0x6809             LDR      R1,[R1, #+0]
   \   00000080   0x4288             CMP      R0,R1
   \   00000082   0xDA12             BGE.N    ??Is_CrossRoad_6
    700                  {
    701                    if(Left<Leftlast) Width_Change_Cnt_L++;         
   \                     ??Is_CrossRoad_5: (+1)
   \   00000084   0x....             LDR.N    R0,??DataTable6_1
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0x....             LDR.N    R1,??DataTable7_2
   \   0000008A   0x7809             LDRB     R1,[R1, #+0]
   \   0000008C   0x4288             CMP      R0,R1
   \   0000008E   0xDA07             BGE.N    ??Is_CrossRoad_7
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   00000094   0x6800             LDR      R0,[R0, #+0]
   \   00000096   0x1C40             ADDS     R0,R0,#+1
   \   00000098   0x.... 0x....      LDR.W    R1,??DataTable12_2
   \   0000009C   0x6008             STR      R0,[R1, #+0]
   \   0000009E   0xE008             B.N      ??Is_CrossRoad_4
    702                    else  Width_Change_Cnt_L=0;
   \                     ??Is_CrossRoad_7: (+1)
   \   000000A0   0x2000             MOVS     R0,#+0
   \   000000A2   0x.... 0x....      LDR.W    R1,??DataTable12_2
   \   000000A6   0x6008             STR      R0,[R1, #+0]
   \   000000A8   0xE003             B.N      ??Is_CrossRoad_4
    703                  }
    704                  else Width_Change_Cnt_L=0;
   \                     ??Is_CrossRoad_6: (+1)
   \   000000AA   0x2000             MOVS     R0,#+0
   \   000000AC   0x.... 0x....      LDR.W    R1,??DataTable12_2
   \   000000B0   0x6008             STR      R0,[R1, #+0]
    705                }
    706                if(Rightlastfind&&(Right>70))
   \                     ??Is_CrossRoad_4: (+1)
   \   000000B2   0x....             LDR.N    R0,??DataTable7
   \   000000B4   0x7800             LDRB     R0,[R0, #+0]
   \   000000B6   0x2800             CMP      R0,#+0
   \   000000B8   0xD027             BEQ.N    ??Is_CrossRoad_8
   \   000000BA   0x....             LDR.N    R0,??DataTable6_2
   \   000000BC   0x6800             LDR      R0,[R0, #+0]
   \   000000BE   0x2847             CMP      R0,#+71
   \   000000C0   0xDB23             BLT.N    ??Is_CrossRoad_8
    707                {
    708                  if((RisingEdgeCnt==0)||RisingEdge[0]>Right)  //左边没有多的线了
   \   000000C2   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   000000C6   0x7800             LDRB     R0,[R0, #+0]
   \   000000C8   0x2800             CMP      R0,#+0
   \   000000CA   0xD006             BEQ.N    ??Is_CrossRoad_9
   \   000000CC   0x....             LDR.N    R0,??DataTable6_2
   \   000000CE   0x6800             LDR      R0,[R0, #+0]
   \   000000D0   0x.... 0x....      LDR.W    R1,??DataTable12_6
   \   000000D4   0x7809             LDRB     R1,[R1, #+0]
   \   000000D6   0x4288             CMP      R0,R1
   \   000000D8   0xDA13             BGE.N    ??Is_CrossRoad_10
    709                  {
    710                    if(Right>Rightlast)    Width_Change_Cnt_R++;
   \                     ??Is_CrossRoad_9: (+1)
   \   000000DA   0x.... 0x....      LDR.W    R0,??DataTable8_4
   \   000000DE   0x7800             LDRB     R0,[R0, #+0]
   \   000000E0   0x....             LDR.N    R1,??DataTable6_2
   \   000000E2   0x6809             LDR      R1,[R1, #+0]
   \   000000E4   0x4288             CMP      R0,R1
   \   000000E6   0xDA07             BGE.N    ??Is_CrossRoad_11
   \   000000E8   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   000000EC   0x6800             LDR      R0,[R0, #+0]
   \   000000EE   0x1C40             ADDS     R0,R0,#+1
   \   000000F0   0x.... 0x....      LDR.W    R1,??DataTable12_1
   \   000000F4   0x6008             STR      R0,[R1, #+0]
   \   000000F6   0xE008             B.N      ??Is_CrossRoad_8
    711                    else  Width_Change_Cnt_R=0;
   \                     ??Is_CrossRoad_11: (+1)
   \   000000F8   0x2000             MOVS     R0,#+0
   \   000000FA   0x.... 0x....      LDR.W    R1,??DataTable12_1
   \   000000FE   0x6008             STR      R0,[R1, #+0]
   \   00000100   0xE003             B.N      ??Is_CrossRoad_8
    712                  }
    713                  else Width_Change_Cnt_R=0;
   \                     ??Is_CrossRoad_10: (+1)
   \   00000102   0x2000             MOVS     R0,#+0
   \   00000104   0x.... 0x....      LDR.W    R1,??DataTable12_1
   \   00000108   0x6008             STR      R0,[R1, #+0]
    714                }
    715              
    716              
    717          
    718              
    719          }
   \                     ??Is_CrossRoad_8: (+1)
   \   0000010A   0x4770             BX       LR               ;; return

   \                                 In section .bss, align 4
   \                     ??Width_Change_Cnt_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??Width_Change_Cnt_R:
   \   00000000                      DS8 4
    720              
    721          
    722          

   \                                 In section .text, align 2, keep-with-next
    723          void CrossRoad()
    724          {
   \                     CrossRoad: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    725             static uint8 Normal_Cnt;
    726             static uint8 Cross_Road_Cnt=0;
    727            
    728              //缓慢归零，车子回正  
    729            if(curve_to_cross==0)
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD108             BNE.N    ??CrossRoad_0
    730            {  
    731              Rightlastfind=0;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable12_7
   \   00000012   0x7008             STRB     R0,[R1, #+0]
    732              Leftlastfind=0; 
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable12_8
   \   0000001A   0x7008             STRB     R0,[R1, #+0]
   \   0000001C   0xE03B             B.N      ??CrossRoad_1
    733            }
    734            else
    735            {/*  
    736              if(Rightlastfind)
    737              {
    738                  if(FindNearest(Right,Rightlast))
    739                 {
    740                  Right=FallingEdge[FallingEdgeIndex]-5;
    741                  Rightlastfind=1;
    742                  Left=Right-Reference_Width;
    743                 }
    744                 else 
    745                 {
    746                   Rightlastfind=0;
    747                   Right=Rightlast-5;
    748                   Left=Right-Reference_Width;
    749                   //curve_to_cross=0;
    750                 }
    751              }
    752              else if(Leftlastfind)
    753              {
    754                if(FindNearest(Left,Leftlast))		//这次能找到左线
    755               {
    756                Left=RisingEdge[RisingEdgeIndex]+5;    
    757                Leftlastfind=1;
    758                Right=Reference_Width+Left;
    759               }
    760               else 
    761               {
    762                 Leftlastfind=0;
    763                 Left=Leftlast+5; 
    764                 Right=Reference_Width+Left;
    765                // curve_to_cross=0;
    766               }
    767              }*/
    768              
    769              if(flag_curve_to_cross==1) //右斜入十字
   \                     ??CrossRoad_0: (+1)
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable11
   \   00000022   0x7800             LDRB     R0,[R0, #+0]
   \   00000024   0x2801             CMP      R0,#+1
   \   00000026   0xD119             BNE.N    ??CrossRoad_2
    770              {
    771                Right=Rightlast-Correct_Err;
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable8_4
   \   0000002C   0x7800             LDRB     R0,[R0, #+0]
   \   0000002E   0x.... 0x....      BL       __aeabi_ui2f
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable12_9
   \   00000036   0x6809             LDR      R1,[R1, #+0]
   \   00000038   0x.... 0x....      BL       __aeabi_fsub
   \   0000003C   0x.... 0x....      BL       __aeabi_f2iz
   \   00000040   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   00000044   0x6008             STR      R0,[R1, #+0]
    772                Left=Right-Reference_Width;
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable9
   \   00000050   0x6809             LDR      R1,[R1, #+0]
   \   00000052   0x1A40             SUBS     R0,R0,R1
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable12_11
   \   00000058   0x6008             STR      R0,[R1, #+0]
   \   0000005A   0xE01C             B.N      ??CrossRoad_1
    773          
    774              }
    775              else if(flag_curve_to_cross==0)
   \                     ??CrossRoad_2: (+1)
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable11
   \   00000060   0x7800             LDRB     R0,[R0, #+0]
   \   00000062   0x2800             CMP      R0,#+0
   \   00000064   0xD117             BNE.N    ??CrossRoad_1
    776              {
    777                 Left=Leftlast+Correct_Err; 
   \   00000066   0x....             LDR.N    R0,??DataTable7_2
   \   00000068   0x7800             LDRB     R0,[R0, #+0]
   \   0000006A   0x.... 0x....      BL       __aeabi_ui2f
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable12_9
   \   00000072   0x6809             LDR      R1,[R1, #+0]
   \   00000074   0x.... 0x....      BL       __aeabi_fadd
   \   00000078   0x.... 0x....      BL       __aeabi_f2iz
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable12_11
   \   00000080   0x6008             STR      R0,[R1, #+0]
    778                 Right=Reference_Width+Left;
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable9
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable12_11
   \   0000008C   0x6809             LDR      R1,[R1, #+0]
   \   0000008E   0x1808             ADDS     R0,R1,R0
   \   00000090   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   00000094   0x6008             STR      R0,[R1, #+0]
    779              
    780              }
    781            }
    782            
    783             /* if(ABS(Middle_Err)>1)
    784              {
    785                
    786                if(curve_to_cross==0)
    787                {
    788          
    789                 if(Middle_Err>0)Middle_Err=Middle_Err-1.2;     
    790                 if(Middle_Err<0)Middle_Err=Middle_Err+1.2;
    791                }
    792                // if(Middle_Err>0)Middle_Err=Middle_Err-Correct_Err;     
    793                 //if(Middle_Err<0)Middle_Err=Middle_Err+Correct_Err;      
    794          
    795                  
    796              }*/
    797          
    798              
    799          
    800              
    801          
    802              
    803          
    804              
    805            
    806              
    807              
    808              
    809              if(curve_to_cross==0||(curve_to_cross==1&&Distance-Character_Distance>0.4)) Find_BothLine();
   \                     ??CrossRoad_1: (+1)
   \   00000096   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   0000009A   0x7800             LDRB     R0,[R0, #+0]
   \   0000009C   0x2800             CMP      R0,#+0
   \   0000009E   0xD011             BEQ.N    ??CrossRoad_3
   \   000000A0   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   000000A4   0x7800             LDRB     R0,[R0, #+0]
   \   000000A6   0x2801             CMP      R0,#+1
   \   000000A8   0xD10E             BNE.N    ??CrossRoad_4
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   000000AE   0x6800             LDR      R0,[R0, #+0]
   \   000000B0   0x.... 0x....      LDR.W    R1,??DataTable8_3
   \   000000B4   0x6809             LDR      R1,[R1, #+0]
   \   000000B6   0x.... 0x....      BL       __aeabi_fsub
   \   000000BA   0x.... 0x....      LDR.W    R1,??DataTable12_12  ;; 0x3ecccccd
   \   000000BE   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000C2   0xD801             BHI.N    ??CrossRoad_4
   \                     ??CrossRoad_3: (+1)
   \   000000C4   0x.... 0x....      BL       Find_BothLine
    810              
    811              if(Rightlastfind&&Leftlastfind)//能够找到两边边界
   \                     ??CrossRoad_4: (+1)
   \   000000C8   0x.... 0x....      LDR.W    R0,??DataTable12_7
   \   000000CC   0x7800             LDRB     R0,[R0, #+0]
   \   000000CE   0x2800             CMP      R0,#+0
   \   000000D0   0xD049             BEQ.N    ??CrossRoad_5
   \   000000D2   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   000000D6   0x7800             LDRB     R0,[R0, #+0]
   \   000000D8   0x2800             CMP      R0,#+0
   \   000000DA   0xD044             BEQ.N    ??CrossRoad_5
    812              {
    813               if(Right-Left<65&&Cross_Road_Cnt>3)     //宽度有效
   \   000000DC   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   000000E0   0x6800             LDR      R0,[R0, #+0]
   \   000000E2   0x.... 0x....      LDR.W    R1,??DataTable12_11
   \   000000E6   0x6809             LDR      R1,[R1, #+0]
   \   000000E8   0x1A40             SUBS     R0,R0,R1
   \   000000EA   0x2841             CMP      R0,#+65
   \   000000EC   0xDA2E             BGE.N    ??CrossRoad_6
   \   000000EE   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   000000F2   0x7800             LDRB     R0,[R0, #+0]
   \   000000F4   0x2804             CMP      R0,#+4
   \   000000F6   0xDB29             BLT.N    ??CrossRoad_6
    814               {
    815                  /*                跳转到直角弯                 */
    816                  if(Distance>1&&(Distance-Character_Distance<0.15))
   \   000000F8   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   000000FC   0x6800             LDR      R0,[R0, #+0]
   \   000000FE   0x.... 0x....      LDR.W    R1,??DataTable12_14  ;; 0x3f800001
   \   00000102   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000106   0xD80C             BHI.N    ??CrossRoad_7
   \   00000108   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   0000010C   0x6800             LDR      R0,[R0, #+0]
   \   0000010E   0x.... 0x....      LDR.W    R1,??DataTable8_3
   \   00000112   0x6809             LDR      R1,[R1, #+0]
   \   00000114   0x.... 0x....      BL       __aeabi_fsub
   \   00000118   0x.... 0x....      LDR.W    R1,??DataTable12_15  ;; 0x3e19999a
   \   0000011C   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000120   0xD325             BCC.N    ??CrossRoad_8
    817                  {
    818                                
    819                  }
    820                  else
    821                  { 
    822                    Normal_Cnt++;
   \                     ??CrossRoad_7: (+1)
   \   00000122   0x.... 0x....      LDR.W    R0,??DataTable12_16
   \   00000126   0x7800             LDRB     R0,[R0, #+0]
   \   00000128   0x1C40             ADDS     R0,R0,#+1
   \   0000012A   0x.... 0x....      LDR.W    R1,??DataTable12_16
   \   0000012E   0x7008             STRB     R0,[R1, #+0]
    823                    if(Normal_Cnt>=3)
   \   00000130   0x.... 0x....      LDR.W    R0,??DataTable12_16
   \   00000134   0x7800             LDRB     R0,[R0, #+0]
   \   00000136   0x2803             CMP      R0,#+3
   \   00000138   0xDB19             BLT.N    ??CrossRoad_8
    824                    {
    825                     RoadType=0;
   \   0000013A   0x2000             MOVS     R0,#+0
   \   0000013C   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   00000140   0x7008             STRB     R0,[R1, #+0]
    826                     curve_to_cross=0;
   \   00000142   0x2000             MOVS     R0,#+0
   \   00000144   0x.... 0x....      LDR.W    R1,??DataTable12_3
   \   00000148   0x7008             STRB     R0,[R1, #+0]
   \   0000014A   0xE010             B.N      ??CrossRoad_8
    827                    /*            跳回正常道路            */
    828                    }
    829                   
    830                  }
    831               }
    832               else 
    833               {
    834                Rightlastfind=0;
   \                     ??CrossRoad_6: (+1)
   \   0000014C   0x2000             MOVS     R0,#+0
   \   0000014E   0x.... 0x....      LDR.W    R1,??DataTable12_7
   \   00000152   0x7008             STRB     R0,[R1, #+0]
    835                Leftlastfind=0;
   \   00000154   0x2000             MOVS     R0,#+0
   \   00000156   0x.... 0x....      LDR.W    R1,??DataTable12_8
   \   0000015A   0x7008             STRB     R0,[R1, #+0]
    836                Normal_Cnt=0;
   \   0000015C   0x2000             MOVS     R0,#+0
   \   0000015E   0x.... 0x....      LDR.W    R1,??DataTable12_16
   \   00000162   0x7008             STRB     R0,[R1, #+0]
   \   00000164   0xE003             B.N      ??CrossRoad_8
    837               }
    838              }
    839              else Normal_Cnt=0;
   \                     ??CrossRoad_5: (+1)
   \   00000166   0x2000             MOVS     R0,#+0
   \   00000168   0x.... 0x....      LDR.W    R1,??DataTable12_16
   \   0000016C   0x7008             STRB     R0,[R1, #+0]
    840              
    841          
    842          
    843              if(RoadType!=1)
   \                     ??CrossRoad_8: (+1)
   \   0000016E   0x.... 0x....      LDR.W    R0,??DataTable8_1
   \   00000172   0x7800             LDRB     R0,[R0, #+0]
   \   00000174   0x2801             CMP      R0,#+1
   \   00000176   0xD004             BEQ.N    ??CrossRoad_9
    844              {
    845                Cross_Road_Cnt=0;
   \   00000178   0x2000             MOVS     R0,#+0
   \   0000017A   0x.... 0x....      LDR.W    R1,??DataTable12_13
   \   0000017E   0x7008             STRB     R0,[R1, #+0]
   \   00000180   0xE01E             B.N      ??CrossRoad_10
    846              }
    847              else
    848              {
    849                if(Cross_Road_Cnt<10)Cross_Road_Cnt++; 
   \                     ??CrossRoad_9: (+1)
   \   00000182   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   00000186   0x7800             LDRB     R0,[R0, #+0]
   \   00000188   0x280A             CMP      R0,#+10
   \   0000018A   0xDA06             BGE.N    ??CrossRoad_11
   \   0000018C   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   00000190   0x7800             LDRB     R0,[R0, #+0]
   \   00000192   0x1C40             ADDS     R0,R0,#+1
   \   00000194   0x.... 0x....      LDR.W    R1,??DataTable12_13
   \   00000198   0x7008             STRB     R0,[R1, #+0]
    850                
    851                if(Cross_Road_Cnt>3&&Cross_Road_Cnt<8&&curve_to_cross==0)/////////////////////////////////改
   \                     ??CrossRoad_11: (+1)
   \   0000019A   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   0000019E   0x7800             LDRB     R0,[R0, #+0]
   \   000001A0   0x1F00             SUBS     R0,R0,#+4
   \   000001A2   0x2804             CMP      R0,#+4
   \   000001A4   0xD20C             BCS.N    ??CrossRoad_10
   \   000001A6   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   000001AA   0x7800             LDRB     R0,[R0, #+0]
   \   000001AC   0x2800             CMP      R0,#+0
   \   000001AE   0xD107             BNE.N    ??CrossRoad_10
    852                {
    853                  Leftlastfind=0;
   \   000001B0   0x2000             MOVS     R0,#+0
   \   000001B2   0x.... 0x....      LDR.W    R1,??DataTable12_8
   \   000001B6   0x7008             STRB     R0,[R1, #+0]
    854                  Rightlastfind=0;
   \   000001B8   0x2000             MOVS     R0,#+0
   \   000001BA   0x.... 0x....      LDR.W    R1,??DataTable12_7
   \   000001BE   0x7008             STRB     R0,[R1, #+0]
    855          
    856                }
    857                
    858              }
    859          }
   \                     ??CrossRoad_10: (+1)
   \   000001C0   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 1
   \                     ??Normal_Cnt:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??Cross_Road_Cnt:
   \   00000000                      DS8 1
    860          
    861          /****
    862          ** 更新数组
    863          *****/
    864          

   \                                 In section .text, align 2, keep-with-next
    865          void Push_And_Pull(float *buff,int len,float newdata)
    866          {
    867           int i;
    868           for(i=len-1;i>0;i--)
   \                     Push_And_Pull: (+1)
   \   00000000   0x1E49             SUBS     R1,R1,#+1
   \   00000002   0xE006             B.N      ??Push_And_Pull_0
    869           {
    870             *(buff+i)=*(buff+i-1);
   \                     ??Push_And_Pull_1: (+1)
   \   00000004   0xEB10 0x0381      ADDS     R3,R0,R1, LSL #+2
   \   00000008   0xF853 0x3C04      LDR      R3,[R3, #-4]
   \   0000000C   0xF840 0x3021      STR      R3,[R0, R1, LSL #+2]
    871           }
   \   00000010   0x1E49             SUBS     R1,R1,#+1
   \                     ??Push_And_Pull_0: (+1)
   \   00000012   0x2901             CMP      R1,#+1
   \   00000014   0xDAF6             BGE.N    ??Push_And_Pull_1
    872             *buff=newdata; 
   \   00000016   0x6002             STR      R2,[R0, #+0]
    873          }
   \   00000018   0x4770             BX       LR               ;; return
    874          
    875          
    876          
    877          /****
    878          **识别赛道类型
    879          ****/

   \                                 In section .text, align 2, keep-with-next
    880          void RoadType_Distinguish(void)
    881          {
   \                     RoadType_Distinguish: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    882            EdgeFind();
   \   00000002   0x.... 0x....      BL       EdgeFind
    883          
    884            if(RoadType==0 )  Prejudge();//道路预判
   \   00000006   0x....             LDR.N    R0,??DataTable8_1
   \   00000008   0x7800             LDRB     R0,[R0, #+0]
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD101             BNE.N    ??RoadType_Distinguish_0
   \   0000000E   0x.... 0x....      BL       Prejudge
    885          
    886            switch(RoadType)
   \                     ??RoadType_Distinguish_0: (+1)
   \   00000012   0x....             LDR.N    R0,??DataTable8_1
   \   00000014   0x7800             LDRB     R0,[R0, #+0]
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD003             BEQ.N    ??RoadType_Distinguish_1
   \   0000001A   0x2802             CMP      R0,#+2
   \   0000001C   0xD041             BEQ.N    ??RoadType_Distinguish_2
   \   0000001E   0xD325             BCC.N    ??RoadType_Distinguish_3
   \   00000020   0xE042             B.N      ??RoadType_Distinguish_4
    887            {
    888              case 0: //表示常规赛道
    889                Character_Distance=0;//普通赛道无特征距离
   \                     ??RoadType_Distinguish_1: (+1)
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x....             LDR.N    R1,??DataTable8_3
   \   00000026   0x6008             STR      R0,[R1, #+0]
    890                Normal();//如果赛道类型是0，进行常规处理
   \   00000028   0x.... 0x....      BL       Normal
    891                Is_Barraicade();
   \   0000002C   0x.... 0x....      BL       Is_Barraicade
    892                if(RoadType==1)
   \   00000030   0x....             LDR.N    R0,??DataTable8_1
   \   00000032   0x7800             LDRB     R0,[R0, #+0]
   \   00000034   0x2801             CMP      R0,#+1
   \   00000036   0xD104             BNE.N    ??RoadType_Distinguish_5
    893                {
    894                  curve_to_cross=0;
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x.... 0x....      LDR.W    R1,??DataTable12_3
   \   0000003E   0x7008             STRB     R0,[R1, #+0]
   \   00000040   0xE001             B.N      ??RoadType_Distinguish_6
    895                }
    896                else Is_CrossRoad();
   \                     ??RoadType_Distinguish_5: (+1)
   \   00000042   0x.... 0x....      BL       Is_CrossRoad
    897                
    898                LPLD_GPIO_Output_b(PTE, 10, 0);
   \                     ??RoadType_Distinguish_6: (+1)
   \   00000046   0x2200             MOVS     R2,#+0
   \   00000048   0x210A             MOVS     R1,#+10
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable12_17  ;; 0x400ff100
   \   0000004E   0x.... 0x....      BL       LPLD_GPIO_Output_b
    899                LPLD_GPIO_Output_b(PTE, 11, 1);      
   \   00000052   0x2201             MOVS     R2,#+1
   \   00000054   0x210B             MOVS     R1,#+11
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable12_17  ;; 0x400ff100
   \   0000005A   0x.... 0x....      BL       LPLD_GPIO_Output_b
    900                LPLD_GPIO_Output_b(PTE, 12, 1);
   \   0000005E   0x2201             MOVS     R2,#+1
   \   00000060   0x210C             MOVS     R1,#+12
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable12_17  ;; 0x400ff100
   \   00000066   0x.... 0x....      BL       LPLD_GPIO_Output_b
    901          
    902                break;
   \   0000006A   0xE01F             B.N      ??RoadType_Distinguish_7
    903              case 1://表示十字弯
    904          
    905                CrossRoad();
   \                     ??RoadType_Distinguish_3: (+1)
   \   0000006C   0x.... 0x....      BL       CrossRoad
    906                LPLD_GPIO_Output_b(PTE, 10, 1);
   \   00000070   0x2201             MOVS     R2,#+1
   \   00000072   0x210A             MOVS     R1,#+10
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable12_17  ;; 0x400ff100
   \   00000078   0x.... 0x....      BL       LPLD_GPIO_Output_b
    907                LPLD_GPIO_Output_b(PTE, 11, 0);
   \   0000007C   0x2200             MOVS     R2,#+0
   \   0000007E   0x210B             MOVS     R1,#+11
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable12_17  ;; 0x400ff100
   \   00000084   0x.... 0x....      BL       LPLD_GPIO_Output_b
    908                LPLD_GPIO_Output_b(PTE, 12, 1);
   \   00000088   0x2201             MOVS     R2,#+1
   \   0000008A   0x210C             MOVS     R1,#+12
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable12_17  ;; 0x400ff100
   \   00000090   0x.... 0x....      BL       LPLD_GPIO_Output_b
    909                Middle_Last=Middle_Err;
   \   00000094   0x.... 0x....      LDR.W    R0,??DataTable12_18
   \   00000098   0x6800             LDR      R0,[R0, #+0]
   \   0000009A   0x.... 0x....      LDR.W    R1,??DataTable12_19
   \   0000009E   0x6008             STR      R0,[R1, #+0]
    910                break;
   \   000000A0   0xE004             B.N      ??RoadType_Distinguish_7
    911              case 2:
    912                Barraicade();
   \                     ??RoadType_Distinguish_2: (+1)
   \   000000A2   0x.... 0x....      BL       Barraicade
    913          
    914                break;
   \   000000A6   0xE001             B.N      ??RoadType_Distinguish_7
    915              
    916              default:
    917                Normal();
   \                     ??RoadType_Distinguish_4: (+1)
   \   000000A8   0x.... 0x....      BL       Normal
    918                break;
    919          
    920            }
    921            
    922            if(Distance<0.4)  //刚进入赛道,将赛道类型设置为1
   \                     ??RoadType_Distinguish_7: (+1)
   \   000000AC   0x....             LDR.N    R0,??DataTable8_2
   \   000000AE   0x6800             LDR      R0,[R0, #+0]
   \   000000B0   0x.... 0x....      LDR.W    R1,??DataTable12_12  ;; 0x3ecccccd
   \   000000B4   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000B8   0xD202             BCS.N    ??RoadType_Distinguish_8
    923            {
    924              RoadType=0;
   \   000000BA   0x2000             MOVS     R0,#+0
   \   000000BC   0x....             LDR.N    R1,??DataTable8_1
   \   000000BE   0x7008             STRB     R0,[R1, #+0]
    925              
    926            }
    927            
    928            //将赛道信息写入发送数组
    929            CCD_Draw_Buff[128]=Left-1;
   \                     ??RoadType_Distinguish_8: (+1)
   \   000000C0   0x.... 0x....      LDR.W    R0,??DataTable12_11
   \   000000C4   0x6800             LDR      R0,[R0, #+0]
   \   000000C6   0x1E40             SUBS     R0,R0,#+1
   \   000000C8   0x.... 0x....      LDR.W    R1,??DataTable12
   \   000000CC   0xF881 0x0080      STRB     R0,[R1, #+128]
    930            CCD_Draw_Buff[129]=Right; 
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   000000D4   0x6800             LDR      R0,[R0, #+0]
   \   000000D6   0x.... 0x....      LDR.W    R1,??DataTable12
   \   000000DA   0xF881 0x0081      STRB     R0,[R1, #+129]
    931            CCD_Draw_Buff[132]=BYTE0(Max_Peak);
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable12_20
   \   000000E2   0x7800             LDRB     R0,[R0, #+0]
   \   000000E4   0x.... 0x....      LDR.W    R1,??DataTable12
   \   000000E8   0xF881 0x0084      STRB     R0,[R1, #+132]
    932            CCD_Draw_Buff[133]=BYTE1(Max_Peak);
   \   000000EC   0x.... 0x....      LDR.W    R0,??DataTable12_20
   \   000000F0   0x7840             LDRB     R0,[R0, #+1]
   \   000000F2   0x.... 0x....      LDR.W    R1,??DataTable12
   \   000000F6   0xF881 0x0085      STRB     R0,[R1, #+133]
    933            CCD_Draw_Buff[134]=Leftlastfind;
   \   000000FA   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   000000FE   0x7800             LDRB     R0,[R0, #+0]
   \   00000100   0x.... 0x....      LDR.W    R1,??DataTable12
   \   00000104   0xF881 0x0086      STRB     R0,[R1, #+134]
    934            CCD_Draw_Buff[135]=Rightlastfind;
   \   00000108   0x.... 0x....      LDR.W    R0,??DataTable12_7
   \   0000010C   0x7800             LDRB     R0,[R0, #+0]
   \   0000010E   0x.... 0x....      LDR.W    R1,??DataTable12
   \   00000112   0xF881 0x0087      STRB     R0,[R1, #+135]
    935            CCD_Draw_Buff[136]=RoadType; 
   \   00000116   0x....             LDR.N    R0,??DataTable8_1
   \   00000118   0x7800             LDRB     R0,[R0, #+0]
   \   0000011A   0x.... 0x....      LDR.W    R1,??DataTable12
   \   0000011E   0xF881 0x0088      STRB     R0,[R1, #+136]
    936            Leftlast=Left;              // 更新边界线
   \   00000122   0x.... 0x....      LDR.W    R0,??DataTable12_11
   \   00000126   0x6800             LDR      R0,[R0, #+0]
   \   00000128   0x.... 0x....      LDR.W    R1,??DataTable12_21
   \   0000012C   0x7008             STRB     R0,[R1, #+0]
    937            Rightlast=Right;            //更新边界线
   \   0000012E   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   00000132   0x6800             LDR      R0,[R0, #+0]
   \   00000134   0x....             LDR.N    R1,??DataTable8_4
   \   00000136   0x7008             STRB     R0,[R1, #+0]
    938            
    939            
    940            
    941            if(Rightlastfind||Leftlastfind)//当左线右线能找到其中一个
   \   00000138   0x.... 0x....      LDR.W    R0,??DataTable12_7
   \   0000013C   0x7800             LDRB     R0,[R0, #+0]
   \   0000013E   0x2800             CMP      R0,#+0
   \   00000140   0xD105             BNE.N    ??RoadType_Distinguish_9
   \   00000142   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   00000146   0x7800             LDRB     R0,[R0, #+0]
   \   00000148   0x2800             CMP      R0,#+0
   \   0000014A   0xF000 0x80AD      BEQ.W    ??RoadType_Distinguish_10
    942            {
    943              Middle_Err=64-(Leftlast+Rightlast)/2.0+1;//计算得到中线偏移量
   \                     ??RoadType_Distinguish_9: (+1)
   \   0000014E   0x.... 0x....      LDR.W    R0,??DataTable12_21
   \   00000152   0x7800             LDRB     R0,[R0, #+0]
   \   00000154   0x....             LDR.N    R1,??DataTable8_4
   \   00000156   0x7809             LDRB     R1,[R1, #+0]
   \   00000158   0x1808             ADDS     R0,R1,R0
   \   0000015A   0x.... 0x....      BL       __aeabi_i2d
   \   0000015E   0x2200             MOVS     R2,#+0
   \   00000160   0xF05F 0x4380      MOVS     R3,#+1073741824
   \   00000164   0x.... 0x....      BL       __aeabi_ddiv
   \   00000168   0x0002             MOVS     R2,R0
   \   0000016A   0x000B             MOVS     R3,R1
   \   0000016C   0x2000             MOVS     R0,#+0
   \   0000016E   0x.... 0x....      LDR.W    R1,??DataTable12_22  ;; 0x40500000
   \   00000172   0x.... 0x....      BL       __aeabi_dsub
   \   00000176   0x2200             MOVS     R2,#+0
   \   00000178   0x....             LDR.N    R3,??DataTable9_1  ;; 0x3ff00000
   \   0000017A   0x.... 0x....      BL       __aeabi_dadd
   \   0000017E   0x.... 0x....      BL       __aeabi_d2f
   \   00000182   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   00000186   0x6008             STR      R0,[R1, #+0]
    944              if(ABS(Middle_Err-Middle_Last)>2&&(curve_to_cross==0)) //十字内对中心线进行修正
   \   00000188   0x.... 0x....      LDR.W    R0,??DataTable12_18
   \   0000018C   0x6800             LDR      R0,[R0, #+0]
   \   0000018E   0x.... 0x....      LDR.W    R1,??DataTable12_19
   \   00000192   0x6809             LDR      R1,[R1, #+0]
   \   00000194   0x.... 0x....      BL       __aeabi_fsub
   \   00000198   0x2100             MOVS     R1,#+0
   \   0000019A   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000019E   0xD208             BCS.N    ??RoadType_Distinguish_11
   \   000001A0   0x.... 0x....      LDR.W    R0,??DataTable12_18
   \   000001A4   0x6800             LDR      R0,[R0, #+0]
   \   000001A6   0x.... 0x....      LDR.W    R1,??DataTable12_19
   \   000001AA   0x6809             LDR      R1,[R1, #+0]
   \   000001AC   0x.... 0x....      BL       __aeabi_fsub
   \   000001B0   0xE009             B.N      ??RoadType_Distinguish_12
   \                     ??RoadType_Distinguish_11: (+1)
   \   000001B2   0x.... 0x....      LDR.W    R0,??DataTable12_18
   \   000001B6   0x6800             LDR      R0,[R0, #+0]
   \   000001B8   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   000001BC   0x.... 0x....      LDR.W    R1,??DataTable12_19
   \   000001C0   0x6809             LDR      R1,[R1, #+0]
   \   000001C2   0x.... 0x....      BL       __aeabi_fsub
   \                     ??RoadType_Distinguish_12: (+1)
   \   000001C6   0x.... 0x....      LDR.W    R1,??DataTable12_23  ;; 0x40000001
   \   000001CA   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000001CE   0xD865             BHI.N    ??RoadType_Distinguish_13
   \   000001D0   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   000001D4   0x7800             LDRB     R0,[R0, #+0]
   \   000001D6   0x2800             CMP      R0,#+0
   \   000001D8   0xD160             BNE.N    ??RoadType_Distinguish_13
    945              {
    946                if(ABS(Middle_Err-Middle_Last)>3)  //可能出现错误采集，对中心偏移量进行微调
   \   000001DA   0x.... 0x....      LDR.W    R0,??DataTable12_18
   \   000001DE   0x6800             LDR      R0,[R0, #+0]
   \   000001E0   0x.... 0x....      LDR.W    R1,??DataTable12_19
   \   000001E4   0x6809             LDR      R1,[R1, #+0]
   \   000001E6   0x.... 0x....      BL       __aeabi_fsub
   \   000001EA   0x2100             MOVS     R1,#+0
   \   000001EC   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000001F0   0xD208             BCS.N    ??RoadType_Distinguish_14
   \   000001F2   0x.... 0x....      LDR.W    R0,??DataTable12_18
   \   000001F6   0x6800             LDR      R0,[R0, #+0]
   \   000001F8   0x.... 0x....      LDR.W    R1,??DataTable12_19
   \   000001FC   0x6809             LDR      R1,[R1, #+0]
   \   000001FE   0x.... 0x....      BL       __aeabi_fsub
   \   00000202   0xE009             B.N      ??RoadType_Distinguish_15
   \                     ??RoadType_Distinguish_14: (+1)
   \   00000204   0x.... 0x....      LDR.W    R0,??DataTable12_18
   \   00000208   0x6800             LDR      R0,[R0, #+0]
   \   0000020A   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   0000020E   0x.... 0x....      LDR.W    R1,??DataTable12_19
   \   00000212   0x6809             LDR      R1,[R1, #+0]
   \   00000214   0x.... 0x....      BL       __aeabi_fsub
   \                     ??RoadType_Distinguish_15: (+1)
   \   00000218   0x.... 0x....      LDR.W    R1,??DataTable12_24  ;; 0x40400001
   \   0000021C   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000220   0xD81E             BHI.N    ??RoadType_Distinguish_16
    947                {
    948                  if(Middle_Err>Middle_Last) Middle_Err=Middle_Last+1;
   \   00000222   0x.... 0x....      LDR.W    R0,??DataTable12_19
   \   00000226   0x6800             LDR      R0,[R0, #+0]
   \   00000228   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   0000022C   0x6809             LDR      R1,[R1, #+0]
   \   0000022E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000232   0xD20A             BCS.N    ??RoadType_Distinguish_17
   \   00000234   0x.... 0x....      LDR.W    R0,??DataTable12_19
   \   00000238   0x6801             LDR      R1,[R0, #+0]
   \   0000023A   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   0000023E   0x.... 0x....      BL       __aeabi_fadd
   \   00000242   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   00000246   0x6008             STR      R0,[R1, #+0]
   \   00000248   0xE028             B.N      ??RoadType_Distinguish_13
    949                  else Middle_Err=Middle_Last-1;
   \                     ??RoadType_Distinguish_17: (+1)
   \   0000024A   0x.... 0x....      LDR.W    R0,??DataTable12_19
   \   0000024E   0x6801             LDR      R1,[R0, #+0]
   \   00000250   0x.... 0x....      LDR.W    R0,??DataTable12_25  ;; 0xbf800000
   \   00000254   0x.... 0x....      BL       __aeabi_fadd
   \   00000258   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   0000025C   0x6008             STR      R0,[R1, #+0]
   \   0000025E   0xE01D             B.N      ??RoadType_Distinguish_13
    950                }
    951                else  //在合理采集范围内，对中心偏移量进行更新
    952                {
    953                  if(Middle_Err>Middle_Last) Middle_Err=Middle_Last+2;
   \                     ??RoadType_Distinguish_16: (+1)
   \   00000260   0x.... 0x....      LDR.W    R0,??DataTable12_19
   \   00000264   0x6800             LDR      R0,[R0, #+0]
   \   00000266   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   0000026A   0x6809             LDR      R1,[R1, #+0]
   \   0000026C   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000270   0xD20A             BCS.N    ??RoadType_Distinguish_18
   \   00000272   0x.... 0x....      LDR.W    R0,??DataTable12_19
   \   00000276   0x6801             LDR      R1,[R0, #+0]
   \   00000278   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   0000027C   0x.... 0x....      BL       __aeabi_fadd
   \   00000280   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   00000284   0x6008             STR      R0,[R1, #+0]
   \   00000286   0xE009             B.N      ??RoadType_Distinguish_13
    954                  else Middle_Err=Middle_Last-2;
   \                     ??RoadType_Distinguish_18: (+1)
   \   00000288   0x.... 0x....      LDR.W    R0,??DataTable12_19
   \   0000028C   0x6801             LDR      R1,[R0, #+0]
   \   0000028E   0xF05F 0x4040      MOVS     R0,#-1073741824
   \   00000292   0x.... 0x....      BL       __aeabi_fadd
   \   00000296   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   0000029A   0x6008             STR      R0,[R1, #+0]
    955                }
    956              
    957              }
    958              Middle_Last=Middle_Err;
   \                     ??RoadType_Distinguish_13: (+1)
   \   0000029C   0x.... 0x....      LDR.W    R0,??DataTable12_18
   \   000002A0   0x6800             LDR      R0,[R0, #+0]
   \   000002A2   0x.... 0x....      LDR.W    R1,??DataTable12_19
   \   000002A6   0x6008             STR      R0,[R1, #+0]
    959            }
    960            
    961            
    962            Push_And_Pull(Pre_Width,5,(float)(Right-Left));
   \                     ??RoadType_Distinguish_10: (+1)
   \   000002A8   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   000002AC   0x6800             LDR      R0,[R0, #+0]
   \   000002AE   0x.... 0x....      LDR.W    R1,??DataTable12_11
   \   000002B2   0x6809             LDR      R1,[R1, #+0]
   \   000002B4   0x1A40             SUBS     R0,R0,R1
   \   000002B6   0x.... 0x....      BL       __aeabi_i2f
   \   000002BA   0x0002             MOVS     R2,R0
   \   000002BC   0x2105             MOVS     R1,#+5
   \   000002BE   0x.... 0x....      LDR.W    R0,??DataTable12_26
   \   000002C2   0x.... 0x....      BL       Push_And_Pull
    963            Push_And_Pull(Pre_Right,5,Right);
   \   000002C6   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   000002CA   0x6800             LDR      R0,[R0, #+0]
   \   000002CC   0x.... 0x....      BL       __aeabi_i2f
   \   000002D0   0x0002             MOVS     R2,R0
   \   000002D2   0x2105             MOVS     R1,#+5
   \   000002D4   0x.... 0x....      LDR.W    R0,??DataTable12_27
   \   000002D8   0x.... 0x....      BL       Push_And_Pull
    964            Push_And_Pull(Pre_Left,5,Left);
   \   000002DC   0x.... 0x....      LDR.W    R0,??DataTable12_11
   \   000002E0   0x6800             LDR      R0,[R0, #+0]
   \   000002E2   0x.... 0x....      BL       __aeabi_i2f
   \   000002E6   0x0002             MOVS     R2,R0
   \   000002E8   0x2105             MOVS     R1,#+5
   \   000002EA   0x.... 0x....      LDR.W    R0,??DataTable12_28
   \   000002EE   0x.... 0x....      BL       Push_And_Pull
    965            if(Rightlastfind&&Leftlastfind&&(Right-Left>20))   //两边边线都能够找到，计算赛道的平均亮度
   \   000002F2   0x.... 0x....      LDR.W    R0,??DataTable12_7
   \   000002F6   0x7800             LDRB     R0,[R0, #+0]
   \   000002F8   0x2800             CMP      R0,#+0
   \   000002FA   0xD00F             BEQ.N    ??RoadType_Distinguish_19
   \   000002FC   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   00000300   0x7800             LDRB     R0,[R0, #+0]
   \   00000302   0x2800             CMP      R0,#+0
   \   00000304   0xD00A             BEQ.N    ??RoadType_Distinguish_19
   \   00000306   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   0000030A   0x6800             LDR      R0,[R0, #+0]
   \   0000030C   0x.... 0x....      LDR.W    R1,??DataTable12_11
   \   00000310   0x6809             LDR      R1,[R1, #+0]
   \   00000312   0x1A40             SUBS     R0,R0,R1
   \   00000314   0x2815             CMP      R0,#+21
   \   00000316   0xDB01             BLT.N    ??RoadType_Distinguish_19
    966            {
    967             Brightness_Calculate();
   \   00000318   0x.... 0x....      BL       Brightness_Calculate
    968            }
    969            //Brightness_Calculate();
    970          
    971          
    972          
    973          }
   \                     ??RoadType_Distinguish_19: (+1)
   \   0000031C   0xBD01             POP      {R0,PC}          ;; return
    974          
    975          
    976          
    977          ///////////////////////////////////////////障碍处理

   \                                 In section .text, align 2, keep-with-next
    978          void Is_Barraicade(void)
    979          {
   \                     Is_Barraicade: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    980            int left_edge,right_edge,left_edge_find,right_edge_find;
    981            int i;
    982            float half_width=0;
   \   00000002   0x2600             MOVS     R6,#+0
    983            
    984            half_width=Pre_Width[0]/2;
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable12_26
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000000E   0x.... 0x....      BL       __aeabi_fdiv
   \   00000012   0x0006             MOVS     R6,R0
    985            
    986            if(Leftlastfind && Rightlastfind)
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   00000018   0x7800             LDRB     R0,[R0, #+0]
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xF000 0x808E      BEQ.W    ??Is_Barraicade_0
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable12_7
   \   00000024   0x7800             LDRB     R0,[R0, #+0]
   \   00000026   0x2800             CMP      R0,#+0
   \   00000028   0xF000 0x8088      BEQ.W    ??Is_Barraicade_0
    987            {
    988              right_edge_find=0;
   \   0000002C   0x2000             MOVS     R0,#+0
    989              left_edge_find=0;
   \   0000002E   0x2100             MOVS     R1,#+0
    990              if(FallingEdgeCnt>0)
   \   00000030   0x.... 0x....      LDR.W    R2,??DataTable12_29
   \   00000034   0x7812             LDRB     R2,[R2, #+0]
   \   00000036   0x2A00             CMP      R2,#+0
   \   00000038   0xD01C             BEQ.N    ??Is_Barraicade_1
    991              {
    992                for(i=0;i<FallingEdgeCnt;i++)
   \   0000003A   0x2200             MOVS     R2,#+0
   \   0000003C   0xE000             B.N      ??Is_Barraicade_2
   \                     ??Is_Barraicade_3: (+1)
   \   0000003E   0x1C52             ADDS     R2,R2,#+1
   \                     ??Is_Barraicade_2: (+1)
   \   00000040   0x.... 0x....      LDR.W    R3,??DataTable12_29
   \   00000044   0x781B             LDRB     R3,[R3, #+0]
   \   00000046   0x429A             CMP      R2,R3
   \   00000048   0xDA14             BGE.N    ??Is_Barraicade_1
    993                {
    994                  if((FallingEdge[i]>Leftlast)&&(FallingEdge[i]+7<Rightlast))
   \   0000004A   0x.... 0x....      LDR.W    R3,??DataTable12_21
   \   0000004E   0x781B             LDRB     R3,[R3, #+0]
   \   00000050   0x.... 0x....      LDR.W    R7,??DataTable12_4
   \   00000054   0x5DD7             LDRB     R7,[R2, R7]
   \   00000056   0x42BB             CMP      R3,R7
   \   00000058   0xD2F1             BCS.N    ??Is_Barraicade_3
   \   0000005A   0x.... 0x....      LDR.W    R3,??DataTable12_4
   \   0000005E   0x5CD3             LDRB     R3,[R2, R3]
   \   00000060   0x1DDB             ADDS     R3,R3,#+7
   \   00000062   0x.... 0x....      LDR.W    R7,??DataTable12_30
   \   00000066   0x783F             LDRB     R7,[R7, #+0]
   \   00000068   0x42BB             CMP      R3,R7
   \   0000006A   0xDAE8             BGE.N    ??Is_Barraicade_3
    995                  {
    996                    left_edge=FallingEdge[i];
   \   0000006C   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   00000070   0x5C54             LDRB     R4,[R2, R1]
    997                    left_edge_find=1;
   \   00000072   0x2101             MOVS     R1,#+1
    998                    break;        
    999                  }
   1000          
   1001                }
   1002              }
   1003              if(RisingEdgeCnt>0)
   \                     ??Is_Barraicade_1: (+1)
   \   00000074   0x.... 0x....      LDR.W    R2,??DataTable12_5
   \   00000078   0x7812             LDRB     R2,[R2, #+0]
   \   0000007A   0x2A00             CMP      R2,#+0
   \   0000007C   0xD01B             BEQ.N    ??Is_Barraicade_4
   1004              {
   1005                for(i=RisingEdgeCnt;i>=0;i--)
   \   0000007E   0x.... 0x....      LDR.W    R2,??DataTable12_5
   \   00000082   0x7812             LDRB     R2,[R2, #+0]
   \   00000084   0xE000             B.N      ??Is_Barraicade_5
   \                     ??Is_Barraicade_6: (+1)
   \   00000086   0x1E52             SUBS     R2,R2,#+1
   \                     ??Is_Barraicade_5: (+1)
   \   00000088   0x2A00             CMP      R2,#+0
   \   0000008A   0xD414             BMI.N    ??Is_Barraicade_4
   1006                {
   1007                  if((RisingEdge[i]<Rightlast)&&(RisingEdge[i]-7>Leftlast))
   \   0000008C   0x.... 0x....      LDR.W    R3,??DataTable12_6
   \   00000090   0x5CD3             LDRB     R3,[R2, R3]
   \   00000092   0x.... 0x....      LDR.W    R7,??DataTable12_30
   \   00000096   0x783F             LDRB     R7,[R7, #+0]
   \   00000098   0x42BB             CMP      R3,R7
   \   0000009A   0xD2F4             BCS.N    ??Is_Barraicade_6
   \   0000009C   0x.... 0x....      LDR.W    R3,??DataTable12_21
   \   000000A0   0x781B             LDRB     R3,[R3, #+0]
   \   000000A2   0x.... 0x....      LDR.W    R7,??DataTable12_6
   \   000000A6   0x5DD7             LDRB     R7,[R2, R7]
   \   000000A8   0x1FFF             SUBS     R7,R7,#+7
   \   000000AA   0x42BB             CMP      R3,R7
   \   000000AC   0xDAEB             BGE.N    ??Is_Barraicade_6
   1008                  {
   1009                    right_edge=RisingEdge[i];
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   000000B2   0x5C15             LDRB     R5,[R2, R0]
   1010                    right_edge_find=1;
   \   000000B4   0x2001             MOVS     R0,#+1
   1011                    break;
   1012          
   1013                  }
   1014                }
   1015              }
   1016              
   1017              if(right_edge_find && left_edge_find)
   \                     ??Is_Barraicade_4: (+1)
   \   000000B6   0x2800             CMP      R0,#+0
   \   000000B8   0xD040             BEQ.N    ??Is_Barraicade_0
   \   000000BA   0x2900             CMP      R1,#+0
   \   000000BC   0xD03E             BEQ.N    ??Is_Barraicade_0
   1018              {
   1019                if(ABS(right_edge-left_edge)/Pre_Width[0]>0.2)
   \   000000BE   0x1B28             SUBS     R0,R5,R4
   \   000000C0   0x2801             CMP      R0,#+1
   \   000000C2   0xDB01             BLT.N    ??Is_Barraicade_7
   \   000000C4   0x1B28             SUBS     R0,R5,R4
   \   000000C6   0xE001             B.N      ??Is_Barraicade_8
   \                     ??Is_Barraicade_7: (+1)
   \   000000C8   0x4268             RSBS     R0,R5,#+0
   \   000000CA   0x1B00             SUBS     R0,R0,R4
   \                     ??Is_Barraicade_8: (+1)
   \   000000CC   0x.... 0x....      BL       __aeabi_i2f
   \   000000D0   0x.... 0x....      LDR.W    R1,??DataTable12_26
   \   000000D4   0x6809             LDR      R1,[R1, #+0]
   \   000000D6   0x.... 0x....      BL       __aeabi_fdiv
   \   000000DA   0x.... 0x....      LDR.W    R1,??DataTable12_31  ;; 0x3e4ccccd
   \   000000DE   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000E2   0xD82B             BHI.N    ??Is_Barraicade_0
   1020                {
   1021                  RoadType=2;//表示障碍
   \   000000E4   0x2002             MOVS     R0,#+2
   \   000000E6   0x.... 0x....      LDR.W    R1,??DataTable12_32
   \   000000EA   0x7008             STRB     R0,[R1, #+0]
   1022                  flag_barraicade=1;
   \   000000EC   0x2001             MOVS     R0,#+1
   \   000000EE   0x.... 0x....      LDR.W    R1,??DataTable12_33
   \   000000F2   0x7008             STRB     R0,[R1, #+0]
   1023                  Character_Distance=Distance;
   \   000000F4   0x.... 0x....      LDR.W    R0,??DataTable12_34
   \   000000F8   0x6800             LDR      R0,[R0, #+0]
   \   000000FA   0x.... 0x....      LDR.W    R1,??DataTable12_35
   \   000000FE   0x6008             STR      R0,[R1, #+0]
   1024                
   1025          
   1026                  if(Rightlast-right_edge>half_width) B_RightOrLeft=LEFT; //左边出现了障碍
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable12_30
   \   00000104   0x7800             LDRB     R0,[R0, #+0]
   \   00000106   0x1B40             SUBS     R0,R0,R5
   \   00000108   0x.... 0x....      BL       __aeabi_i2f
   \   0000010C   0x0001             MOVS     R1,R0
   \   0000010E   0x0030             MOVS     R0,R6
   \   00000110   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000114   0xD203             BCS.N    ??Is_Barraicade_9
   \   00000116   0x2000             MOVS     R0,#+0
   \   00000118   0x.... 0x....      LDR.W    R1,??DataTable12_36
   \   0000011C   0x6008             STR      R0,[R1, #+0]
   1027                  if(left_edge-Leftlast>half_width)   B_RightOrLeft=RIGHT;  //右边出现了障碍 
   \                     ??Is_Barraicade_9: (+1)
   \   0000011E   0x.... 0x....      LDR.W    R0,??DataTable12_21
   \   00000122   0x7800             LDRB     R0,[R0, #+0]
   \   00000124   0x1A20             SUBS     R0,R4,R0
   \   00000126   0x.... 0x....      BL       __aeabi_i2f
   \   0000012A   0x0001             MOVS     R1,R0
   \   0000012C   0x0030             MOVS     R0,R6
   \   0000012E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000132   0xD203             BCS.N    ??Is_Barraicade_0
   \   00000134   0x2001             MOVS     R0,#+1
   \   00000136   0x.... 0x....      LDR.W    R1,??DataTable12_36
   \   0000013A   0x6008             STR      R0,[R1, #+0]
   1028                }
   1029          
   1030              }
   1031          
   1032            }
   1033          
   1034          }
   \                     ??Is_Barraicade_0: (+1)
   \   0000013C   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
   1035          
   1036          
   1037          

   \                                 In section .text, align 2, keep-with-next
   1038          void Barraicade(void)
   1039          {
   \                     Barraicade: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1040            int i;
   1041            LPLD_GPIO_Output_b(PTE, 12, 0);
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0x210C             MOVS     R1,#+12
   \   00000006   0x....             LDR.N    R0,??DataTable12_17  ;; 0x400ff100
   \   00000008   0x.... 0x....      BL       LPLD_GPIO_Output_b
   1042            if(Barraicade_Cnt<Barraicade_Num)
   \   0000000C   0x....             LDR.N    R0,??DataTable12_37
   \   0000000E   0x7800             LDRB     R0,[R0, #+0]
   \   00000010   0x.... 0x....      BL       __aeabi_ui2f
   \   00000014   0x....             LDR.N    R1,??DataTable12_38
   \   00000016   0x6809             LDR      R1,[R1, #+0]
   \   00000018   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000001C   0xF080 0x80E4      BCS.W    ??Barraicade_0
   1043            {
   1044              if(B_RightOrLeft==LEFT)//障碍在左边,右线是对的
   \   00000020   0x....             LDR.N    R0,??DataTable12_36
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD163             BNE.N    ??Barraicade_1
   1045              {
   1046                 
   1047                if(FindNearest(RIGHT,Rightlast))
   \   00000028   0x....             LDR.N    R0,??DataTable12_30
   \   0000002A   0x7801             LDRB     R1,[R0, #+0]
   \   0000002C   0x2001             MOVS     R0,#+1
   \   0000002E   0x.... 0x....      BL       FindNearest
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xD009             BEQ.N    ??Barraicade_2
   1048                {
   1049                  Right=FallingEdge[FallingEdgeIndex];
   \   00000036   0x....             LDR.N    R0,??DataTable12_4
   \   00000038   0x....             LDR.N    R1,??DataTable12_39
   \   0000003A   0x6809             LDR      R1,[R1, #+0]
   \   0000003C   0x5C08             LDRB     R0,[R1, R0]
   \   0000003E   0x....             LDR.N    R1,??DataTable12_10
   \   00000040   0x6008             STR      R0,[R1, #+0]
   1050                  Rightlastfind=1;
   \   00000042   0x2001             MOVS     R0,#+1
   \   00000044   0x....             LDR.N    R1,??DataTable12_7
   \   00000046   0x7008             STRB     R0,[R1, #+0]
   \   00000048   0xE002             B.N      ??Barraicade_3
   1051                }
   1052                else Rightlastfind=0;
   \                     ??Barraicade_2: (+1)
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0x....             LDR.N    R1,??DataTable12_7
   \   0000004E   0x7008             STRB     R0,[R1, #+0]
   1053                if(Distance-Character_Distance<0.3) //在障碍区内
   \                     ??Barraicade_3: (+1)
   \   00000050   0x....             LDR.N    R0,??DataTable12_34
   \   00000052   0x6800             LDR      R0,[R0, #+0]
   \   00000054   0x....             LDR.N    R1,??DataTable12_35
   \   00000056   0x6809             LDR      R1,[R1, #+0]
   \   00000058   0x.... 0x....      BL       __aeabi_fsub
   \   0000005C   0x....             LDR.N    R1,??DataTable12_40  ;; 0x3e99999a
   \   0000005E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000062   0xD219             BCS.N    ??Barraicade_4
   1054                {
   1055                  /*Leftlastfind=0;
   1056                  if(RisingEdgeCnt>0)
   1057                  {
   1058                    for(i=RisingEdgeCnt-1;i>=0;i--)
   1059                    {
   1060                      if(RisingEdge[i]+10<Right)
   1061                      {
   1062                        Left=RisingEdge[i];
   1063                        Leftlastfind=1;
   1064                        break;
   1065                      
   1066                      }
   1067          
   1068                    }
   1069          
   1070                  }*/
   1071                  if(flag_barraicade==1)
   \   00000064   0x....             LDR.N    R0,??DataTable12_33
   \   00000066   0x7800             LDRB     R0,[R0, #+0]
   \   00000068   0x2801             CMP      R0,#+1
   \   0000006A   0xD106             BNE.N    ??Barraicade_5
   1072                  {
   1073                    Barraicade_width=Pre_Width[0];
   \   0000006C   0x....             LDR.N    R0,??DataTable12_26
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0x....             LDR.N    R1,??DataTable12_41
   \   00000072   0x6008             STR      R0,[R1, #+0]
   1074                    flag_barraicade=0;
   \   00000074   0x2000             MOVS     R0,#+0
   \   00000076   0x....             LDR.N    R1,??DataTable12_33
   \   00000078   0x7008             STRB     R0,[R1, #+0]
   1075                  
   1076                  }
   1077                  Left=Right-(uint8)(Barraicade_width*K_Barraicade); 
   \                     ??Barraicade_5: (+1)
   \   0000007A   0x....             LDR.N    R0,??DataTable12_10
   \   0000007C   0x6804             LDR      R4,[R0, #+0]
   \   0000007E   0x....             LDR.N    R0,??DataTable12_41
   \   00000080   0x6800             LDR      R0,[R0, #+0]
   \   00000082   0x....             LDR.N    R1,??DataTable12_42
   \   00000084   0x6809             LDR      R1,[R1, #+0]
   \   00000086   0x.... 0x....      BL       __aeabi_fmul
   \   0000008A   0x.... 0x....      BL       __aeabi_f2iz
   \   0000008E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000090   0x1A20             SUBS     R0,R4,R0
   \   00000092   0x....             LDR.N    R1,??DataTable12_11
   \   00000094   0x6008             STR      R0,[R1, #+0]
   \   00000096   0xE013             B.N      ??Barraicade_6
   1078          
   1079                }
   1080                else
   1081                {
   1082                  if(FindNearest(LEFT,Leftlast))
   \                     ??Barraicade_4: (+1)
   \   00000098   0x....             LDR.N    R0,??DataTable12_21
   \   0000009A   0x7801             LDRB     R1,[R0, #+0]
   \   0000009C   0x2000             MOVS     R0,#+0
   \   0000009E   0x.... 0x....      BL       FindNearest
   \   000000A2   0x2800             CMP      R0,#+0
   \   000000A4   0xD009             BEQ.N    ??Barraicade_7
   1083                  {
   1084                    Left=RisingEdge[RisingEdgeIndex];
   \   000000A6   0x....             LDR.N    R0,??DataTable12_6
   \   000000A8   0x....             LDR.N    R1,??DataTable12_43
   \   000000AA   0x6809             LDR      R1,[R1, #+0]
   \   000000AC   0x5C08             LDRB     R0,[R1, R0]
   \   000000AE   0x....             LDR.N    R1,??DataTable12_11
   \   000000B0   0x6008             STR      R0,[R1, #+0]
   1085                    Leftlastfind=1;
   \   000000B2   0x2001             MOVS     R0,#+1
   \   000000B4   0x....             LDR.N    R1,??DataTable12_8
   \   000000B6   0x7008             STRB     R0,[R1, #+0]
   \   000000B8   0xE002             B.N      ??Barraicade_6
   1086                  
   1087                  }
   1088                  else Leftlastfind=0;
   \                     ??Barraicade_7: (+1)
   \   000000BA   0x2000             MOVS     R0,#+0
   \   000000BC   0x....             LDR.N    R1,??DataTable12_8
   \   000000BE   0x7008             STRB     R0,[R1, #+0]
   1089                
   1090                
   1091                
   1092                }
   1093                
   1094                
   1095                if(Leftlastfind && Rightlastfind) Reference_Width=Right-Left;
   \                     ??Barraicade_6: (+1)
   \   000000C0   0x....             LDR.N    R0,??DataTable12_8
   \   000000C2   0x7800             LDRB     R0,[R0, #+0]
   \   000000C4   0x2800             CMP      R0,#+0
   \   000000C6   0xD00B             BEQ.N    ??Barraicade_8
   \   000000C8   0x....             LDR.N    R0,??DataTable12_7
   \   000000CA   0x7800             LDRB     R0,[R0, #+0]
   \   000000CC   0x2800             CMP      R0,#+0
   \   000000CE   0xD007             BEQ.N    ??Barraicade_8
   \   000000D0   0x....             LDR.N    R0,??DataTable12_10
   \   000000D2   0x6800             LDR      R0,[R0, #+0]
   \   000000D4   0x....             LDR.N    R1,??DataTable12_11
   \   000000D6   0x6809             LDR      R1,[R1, #+0]
   \   000000D8   0x1A40             SUBS     R0,R0,R1
   \   000000DA   0x....             LDR.N    R1,??DataTable12_44
   \   000000DC   0x6008             STR      R0,[R1, #+0]
   \   000000DE   0xE070             B.N      ??Barraicade_9
   1096                else
   1097                {
   1098                
   1099                  Left=Right-Reference_Width;
   \                     ??Barraicade_8: (+1)
   \   000000E0   0x....             LDR.N    R0,??DataTable12_10
   \   000000E2   0x6800             LDR      R0,[R0, #+0]
   \   000000E4   0x....             LDR.N    R1,??DataTable12_44
   \   000000E6   0x6809             LDR      R1,[R1, #+0]
   \   000000E8   0x1A40             SUBS     R0,R0,R1
   \   000000EA   0x....             LDR.N    R1,??DataTable12_11
   \   000000EC   0x6008             STR      R0,[R1, #+0]
   \   000000EE   0xE068             B.N      ??Barraicade_9
   1100                }
   1101          
   1102          
   1103          
   1104          
   1105          
   1106          
   1107              }
   1108              else if(B_RightOrLeft==RIGHT) // 障碍在右边，左线正确
   \                     ??Barraicade_1: (+1)
   \   000000F0   0x....             LDR.N    R0,??DataTable12_36
   \   000000F2   0x6800             LDR      R0,[R0, #+0]
   \   000000F4   0x2801             CMP      R0,#+1
   \   000000F6   0xD164             BNE.N    ??Barraicade_9
   1109              {
   1110                if(FindNearest(LEFT,Leftlast))
   \   000000F8   0x....             LDR.N    R0,??DataTable12_21
   \   000000FA   0x7801             LDRB     R1,[R0, #+0]
   \   000000FC   0x2000             MOVS     R0,#+0
   \   000000FE   0x.... 0x....      BL       FindNearest
   \   00000102   0x2800             CMP      R0,#+0
   \   00000104   0xD009             BEQ.N    ??Barraicade_10
   1111                {
   1112                  Left=RisingEdge[RisingEdgeIndex];
   \   00000106   0x....             LDR.N    R0,??DataTable12_6
   \   00000108   0x....             LDR.N    R1,??DataTable12_43
   \   0000010A   0x6809             LDR      R1,[R1, #+0]
   \   0000010C   0x5C08             LDRB     R0,[R1, R0]
   \   0000010E   0x....             LDR.N    R1,??DataTable12_11
   \   00000110   0x6008             STR      R0,[R1, #+0]
   1113                  Leftlastfind=1;
   \   00000112   0x2001             MOVS     R0,#+1
   \   00000114   0x....             LDR.N    R1,??DataTable12_8
   \   00000116   0x7008             STRB     R0,[R1, #+0]
   \   00000118   0xE002             B.N      ??Barraicade_11
   1114                
   1115                }
   1116                else Leftlastfind=0;
   \                     ??Barraicade_10: (+1)
   \   0000011A   0x2000             MOVS     R0,#+0
   \   0000011C   0x....             LDR.N    R1,??DataTable12_8
   \   0000011E   0x7008             STRB     R0,[R1, #+0]
   1117                
   1118                if(Distance - Character_Distance<0.3)//在障碍区域内
   \                     ??Barraicade_11: (+1)
   \   00000120   0x....             LDR.N    R0,??DataTable12_34
   \   00000122   0x6800             LDR      R0,[R0, #+0]
   \   00000124   0x....             LDR.N    R1,??DataTable12_35
   \   00000126   0x6809             LDR      R1,[R1, #+0]
   \   00000128   0x.... 0x....      BL       __aeabi_fsub
   \   0000012C   0x....             LDR.N    R1,??DataTable12_40  ;; 0x3e99999a
   \   0000012E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000132   0xD219             BCS.N    ??Barraicade_12
   1119                {
   1120                  /*Rightlastfind=0;
   1121                  if(FallingEdgeCnt>0)
   1122                  {
   1123                    for(i=0;i<FallingEdgeCnt;i++)
   1124                    {
   1125                      if(FallingEdge[i]>Left+10)
   1126                      {
   1127                        Right=FallingEdge[i];
   1128                        Rightlastfind=1;
   1129                        break;
   1130                      
   1131                      }
   1132          
   1133                    }
   1134          
   1135                  }*/
   1136                  
   1137                  if(flag_barraicade==1)
   \   00000134   0x....             LDR.N    R0,??DataTable12_33
   \   00000136   0x7800             LDRB     R0,[R0, #+0]
   \   00000138   0x2801             CMP      R0,#+1
   \   0000013A   0xD106             BNE.N    ??Barraicade_13
   1138                  {
   1139                    Barraicade_width=Pre_Width[0];
   \   0000013C   0x....             LDR.N    R0,??DataTable12_26
   \   0000013E   0x6800             LDR      R0,[R0, #+0]
   \   00000140   0x....             LDR.N    R1,??DataTable12_41
   \   00000142   0x6008             STR      R0,[R1, #+0]
   1140                    flag_barraicade=0;
   \   00000144   0x2000             MOVS     R0,#+0
   \   00000146   0x....             LDR.N    R1,??DataTable12_33
   \   00000148   0x7008             STRB     R0,[R1, #+0]
   1141                  
   1142                  }
   1143                  Right=Left-(uint8)(Barraicade_width*K_Barraicade); 
   \                     ??Barraicade_13: (+1)
   \   0000014A   0x....             LDR.N    R0,??DataTable12_11
   \   0000014C   0x6804             LDR      R4,[R0, #+0]
   \   0000014E   0x....             LDR.N    R0,??DataTable12_41
   \   00000150   0x6800             LDR      R0,[R0, #+0]
   \   00000152   0x....             LDR.N    R1,??DataTable12_42
   \   00000154   0x6809             LDR      R1,[R1, #+0]
   \   00000156   0x.... 0x....      BL       __aeabi_fmul
   \   0000015A   0x.... 0x....      BL       __aeabi_f2iz
   \   0000015E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000160   0x1A20             SUBS     R0,R4,R0
   \   00000162   0x....             LDR.N    R1,??DataTable12_10
   \   00000164   0x6008             STR      R0,[R1, #+0]
   \   00000166   0xE015             B.N      ??Barraicade_14
   1144          
   1145                }
   1146                else  //出障碍
   1147                {
   1148                  if(FindNearest(Right,Rightlastfind))
   \                     ??Barraicade_12: (+1)
   \   00000168   0x....             LDR.N    R0,??DataTable12_7
   \   0000016A   0x7801             LDRB     R1,[R0, #+0]
   \   0000016C   0x....             LDR.N    R0,??DataTable12_10
   \   0000016E   0x6800             LDR      R0,[R0, #+0]
   \   00000170   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000172   0x.... 0x....      BL       FindNearest
   \   00000176   0x2800             CMP      R0,#+0
   \   00000178   0xD009             BEQ.N    ??Barraicade_15
   1149                  {
   1150                    Right=FallingEdge[FallingEdgeIndex];
   \   0000017A   0x....             LDR.N    R0,??DataTable12_4
   \   0000017C   0x....             LDR.N    R1,??DataTable12_39
   \   0000017E   0x6809             LDR      R1,[R1, #+0]
   \   00000180   0x5C08             LDRB     R0,[R1, R0]
   \   00000182   0x....             LDR.N    R1,??DataTable12_10
   \   00000184   0x6008             STR      R0,[R1, #+0]
   1151                    Rightlastfind=1;
   \   00000186   0x2001             MOVS     R0,#+1
   \   00000188   0x....             LDR.N    R1,??DataTable12_7
   \   0000018A   0x7008             STRB     R0,[R1, #+0]
   \   0000018C   0xE002             B.N      ??Barraicade_14
   1152          
   1153                  }
   1154                  else Rightlastfind=0;
   \                     ??Barraicade_15: (+1)
   \   0000018E   0x2000             MOVS     R0,#+0
   \   00000190   0x....             LDR.N    R1,??DataTable12_7
   \   00000192   0x7008             STRB     R0,[R1, #+0]
   1155          
   1156                }
   1157                if(Leftlastfind && Rightlastfind) Reference_Width=Right-Left;
   \                     ??Barraicade_14: (+1)
   \   00000194   0x....             LDR.N    R0,??DataTable12_8
   \   00000196   0x7800             LDRB     R0,[R0, #+0]
   \   00000198   0x2800             CMP      R0,#+0
   \   0000019A   0xD00B             BEQ.N    ??Barraicade_16
   \   0000019C   0x....             LDR.N    R0,??DataTable12_7
   \   0000019E   0x7800             LDRB     R0,[R0, #+0]
   \   000001A0   0x2800             CMP      R0,#+0
   \   000001A2   0xD007             BEQ.N    ??Barraicade_16
   \   000001A4   0x....             LDR.N    R0,??DataTable12_10
   \   000001A6   0x6800             LDR      R0,[R0, #+0]
   \   000001A8   0x....             LDR.N    R1,??DataTable12_11
   \   000001AA   0x6809             LDR      R1,[R1, #+0]
   \   000001AC   0x1A40             SUBS     R0,R0,R1
   \   000001AE   0x....             LDR.N    R1,??DataTable12_44
   \   000001B0   0x6008             STR      R0,[R1, #+0]
   \   000001B2   0xE006             B.N      ??Barraicade_9
   1158                else 
   1159                {
   1160                  Right=Left+Reference_Width;
   \                     ??Barraicade_16: (+1)
   \   000001B4   0x....             LDR.N    R0,??DataTable12_11
   \   000001B6   0x6800             LDR      R0,[R0, #+0]
   \   000001B8   0x....             LDR.N    R1,??DataTable12_44
   \   000001BA   0x6809             LDR      R1,[R1, #+0]
   \   000001BC   0x1808             ADDS     R0,R1,R0
   \   000001BE   0x....             LDR.N    R1,??DataTable12_10
   \   000001C0   0x6008             STR      R0,[R1, #+0]
   1161                
   1162                }
   1163          
   1164              }
   1165              
   1166              if(Distance-Character_Distance>0.5)
   \                     ??Barraicade_9: (+1)
   \   000001C2   0x....             LDR.N    R0,??DataTable12_34
   \   000001C4   0x6800             LDR      R0,[R0, #+0]
   \   000001C6   0x....             LDR.N    R1,??DataTable12_35
   \   000001C8   0x6809             LDR      R1,[R1, #+0]
   \   000001CA   0x.... 0x....      BL       __aeabi_fsub
   \   000001CE   0x....             LDR.N    R1,??DataTable12_45  ;; 0x3f000001
   \   000001D0   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000001D4   0xD826             BHI.N    ??Barraicade_17
   1167              {
   1168                RoadType=0;
   \   000001D6   0x2000             MOVS     R0,#+0
   \   000001D8   0x....             LDR.N    R1,??DataTable12_32
   \   000001DA   0x7008             STRB     R0,[R1, #+0]
   1169                Barraicade_Cnt+=1;
   \   000001DC   0x....             LDR.N    R0,??DataTable12_37
   \   000001DE   0x7800             LDRB     R0,[R0, #+0]
   \   000001E0   0x1C40             ADDS     R0,R0,#+1
   \   000001E2   0x....             LDR.N    R1,??DataTable12_37
   \   000001E4   0x7008             STRB     R0,[R1, #+0]
   \   000001E6   0xE01D             B.N      ??Barraicade_17
   1170              }
   1171             
   1172              
   1173            }
   1174            else 
   1175            {
   1176              Right=80;
   \                     ??Barraicade_0: (+1)
   \   000001E8   0x2050             MOVS     R0,#+80
   \   000001EA   0x....             LDR.N    R1,??DataTable12_10
   \   000001EC   0x6008             STR      R0,[R1, #+0]
   1177              Left=52;
   \   000001EE   0x2034             MOVS     R0,#+52
   \   000001F0   0x....             LDR.N    R1,??DataTable12_11
   \   000001F2   0x6008             STR      R0,[R1, #+0]
   1178              if(Distance-Character_Distance>0.3)
   \   000001F4   0x....             LDR.N    R0,??DataTable12_34
   \   000001F6   0x6800             LDR      R0,[R0, #+0]
   \   000001F8   0x....             LDR.N    R1,??DataTable12_35
   \   000001FA   0x6809             LDR      R1,[R1, #+0]
   \   000001FC   0x.... 0x....      BL       __aeabi_fsub
   \   00000200   0x....             LDR.N    R1,??DataTable12_40  ;; 0x3e99999a
   \   00000202   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000206   0xD803             BHI.N    ??Barraicade_18
   1179              {
   1180                
   1181                RoadType=0;
   \   00000208   0x2000             MOVS     R0,#+0
   \   0000020A   0x....             LDR.N    R1,??DataTable12_32
   \   0000020C   0x7008             STRB     R0,[R1, #+0]
   \   0000020E   0xE009             B.N      ??Barraicade_17
   1182              
   1183              }
   1184              else
   1185              {
   1186                
   1187                LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch7,50);
   \                     ??Barraicade_18: (+1)
   \   00000210   0x2232             MOVS     R2,#+50
   \   00000212   0x2107             MOVS     R1,#+7
   \   00000214   0x....             LDR.N    R0,??DataTable12_46  ;; 0x40038000
   \   00000216   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
   1188                  
   1189                LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch5,50);
   \   0000021A   0x2232             MOVS     R2,#+50
   \   0000021C   0x2105             MOVS     R1,#+5
   \   0000021E   0x....             LDR.N    R0,??DataTable12_46  ;; 0x40038000
   \   00000220   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
   1190              
   1191              }
   1192            
   1193            }
   1194            
   1195          
   1196          }
   \                     ??Barraicade_17: (+1)
   \   00000224   0xBD10             POP      {R4,PC}          ;; return
   1197          
   1198          
   1199          
   1200          
   1201          
   1202          
   1203          
   1204          
   1205          
   1206          
   1207          
   1208          
   1209          
   1210          
   1211          
   1212          
   1213          
   1214          

   \                                 In section .text, align 2, keep-with-next
   1215          void Prejudge()//预判函数
   1216          {
   1217            if(RisingEdgeCnt==0 && FallingEdgeCnt==0)
   \                     Prejudge: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable12_5
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD10D             BNE.N    ??Prejudge_0
   \   00000008   0x....             LDR.N    R0,??DataTable12_29
   \   0000000A   0x7800             LDRB     R0,[R0, #+0]
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD109             BNE.N    ??Prejudge_0
   1218            {
   1219              RoadType=1;
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x....             LDR.N    R1,??DataTable12_32
   \   00000014   0x7008             STRB     R0,[R1, #+0]
   1220              curve_to_cross=0;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x....             LDR.N    R1,??DataTable12_3
   \   0000001A   0x7008             STRB     R0,[R1, #+0]
   1221              Character_Distance=Distance;//进入十字后记录特征距离
   \   0000001C   0x....             LDR.N    R0,??DataTable12_34
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0x....             LDR.N    R1,??DataTable12_35
   \   00000022   0x6008             STR      R0,[R1, #+0]
   1222            }
   1223          
   1224          }
   \                     ??Prejudge_0: (+1)
   \   00000024   0x4770             BX       LR               ;; return
   1225          
   1226          /***
   1227          **填充发送到上位机的信息
   1228          ***/
   1229          

   \                                 In section .text, align 2, keep-with-next
   1230          void Fill_CCD_Info(void)
   1231          {
   1232          
   1233            CCD_Draw_Buff[128]=Leftlast;
   \                     Fill_CCD_Info: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable12_21
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x....             LDR.N    R1,??DataTable12
   \   00000006   0xF881 0x0080      STRB     R0,[R1, #+128]
   1234            CCD_Draw_Buff[129]=Rightlast;  
   \   0000000A   0x....             LDR.N    R0,??DataTable12_30
   \   0000000C   0x7800             LDRB     R0,[R0, #+0]
   \   0000000E   0x....             LDR.N    R1,??DataTable12
   \   00000010   0xF881 0x0081      STRB     R0,[R1, #+129]
   1235          }
   \   00000014   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     Max_Peak

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     RisingEdgeCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     RisingEdge

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     FallingEdge

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     CCD_Diff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     CCD_Buff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x........         DC32     Threshold

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x........         DC32     FallingEdgeCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     Left

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x........         DC32     Right

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x........         DC32     Leftlastfind

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x........         DC32     RisingEdgeIndex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x........         DC32     Rightlastfind

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x........         DC32     FallingEdgeIndex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x........         DC32     Leftlast

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x........         DC32     rightfind

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x........         DC32     CarSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x40200001         DC32     0x40200001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x........         DC32     RoadType

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x........         DC32     Distance

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   0x........         DC32     Character_Distance

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \   00000000   0x........         DC32     Rightlast

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_5:
   \   00000000   0x........         DC32     leftfind

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x........         DC32     Reference_Width

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x3FF00000         DC32     0x3ff00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   0x........         DC32     Max_Value

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \   00000000   0x........         DC32     CCD_Offset

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_4:
   \   00000000   0x405FC000         DC32     0x405fc000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_5:
   \   00000000   0x........         DC32     Brightness

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_6:
   \   00000000   0x3FEE6666         DC32     0x3fee6666

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_7:
   \   00000000   0x9999999A         DC32     0x9999999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x3FA99999         DC32     0x3fa99999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x........         DC32     flag_curve_to_cross

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x........         DC32     CCD_Draw_Buff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \   00000000   0x........         DC32     ??Width_Change_Cnt_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \   00000000   0x........         DC32     ??Width_Change_Cnt_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_3:
   \   00000000   0x........         DC32     curve_to_cross

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_4:
   \   00000000   0x........         DC32     FallingEdge

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_5:
   \   00000000   0x........         DC32     RisingEdgeCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_6:
   \   00000000   0x........         DC32     RisingEdge

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_7:
   \   00000000   0x........         DC32     Rightlastfind

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_8:
   \   00000000   0x........         DC32     Leftlastfind

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_9:
   \   00000000   0x........         DC32     Correct_Err

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_10:
   \   00000000   0x........         DC32     Right

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_11:
   \   00000000   0x........         DC32     Left

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_12:
   \   00000000   0x3ECCCCCD         DC32     0x3ecccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_13:
   \   00000000   0x........         DC32     ??Cross_Road_Cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_14:
   \   00000000   0x3F800001         DC32     0x3f800001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_15:
   \   00000000   0x3E19999A         DC32     0x3e19999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_16:
   \   00000000   0x........         DC32     ??Normal_Cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_17:
   \   00000000   0x400FF100         DC32     0x400ff100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_18:
   \   00000000   0x........         DC32     Middle_Err

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_19:
   \   00000000   0x........         DC32     Middle_Last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_20:
   \   00000000   0x........         DC32     Max_Peak

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_21:
   \   00000000   0x........         DC32     Leftlast

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_22:
   \   00000000   0x40500000         DC32     0x40500000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_23:
   \   00000000   0x40000001         DC32     0x40000001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_24:
   \   00000000   0x40400001         DC32     0x40400001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_25:
   \   00000000   0xBF800000         DC32     0xbf800000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_26:
   \   00000000   0x........         DC32     Pre_Width

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_27:
   \   00000000   0x........         DC32     Pre_Right

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_28:
   \   00000000   0x........         DC32     Pre_Left

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_29:
   \   00000000   0x........         DC32     FallingEdgeCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_30:
   \   00000000   0x........         DC32     Rightlast

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_31:
   \   00000000   0x3E4CCCCD         DC32     0x3e4ccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_32:
   \   00000000   0x........         DC32     RoadType

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_33:
   \   00000000   0x........         DC32     flag_barraicade

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_34:
   \   00000000   0x........         DC32     Distance

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_35:
   \   00000000   0x........         DC32     Character_Distance

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_36:
   \   00000000   0x........         DC32     B_RightOrLeft

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_37:
   \   00000000   0x........         DC32     Barraicade_Cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_38:
   \   00000000   0x........         DC32     Barraicade_Num

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_39:
   \   00000000   0x........         DC32     FallingEdgeIndex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_40:
   \   00000000   0x3E99999A         DC32     0x3e99999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_41:
   \   00000000   0x........         DC32     Barraicade_width

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_42:
   \   00000000   0x........         DC32     K_Barraicade

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_43:
   \   00000000   0x........         DC32     RisingEdgeIndex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_44:
   \   00000000   0x........         DC32     Reference_Width

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_45:
   \   00000000   0x3F000001         DC32     0x3f000001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_46:
   \   00000000   0x40038000         DC32     0x40038000
   1236          
   1237          
   1238          
   1239          
   1240          
   1241          
   1242          
   1243          
   1244          
   1245          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Barraicade
         8   -> FindNearest
         8   -> LPLD_FTM_PWM_ChangeDuty
         8   -> LPLD_GPIO_Output_b
         8   -> __aeabi_f2iz
         8   -> __aeabi_fmul
         8   -> __aeabi_fsub
         8   -> __aeabi_ui2f
         8 __aeabi_cfcmple
         8 __aeabi_cfrcmple
      16   Brightness_Calculate
        16   -> __aeabi_d2f
        16   -> __aeabi_d2iz
        16   -> __aeabi_dadd
        16   -> __aeabi_ddiv
        16   -> __aeabi_dmul
        16   -> __aeabi_f2d
        16   -> __aeabi_fmul
        16   -> __aeabi_i2d
        16   -> __aeabi_i2f
        16   -> __aeabi_ui2d
       8   CrossRoad
         8   -> Find_BothLine
         8   -> __aeabi_f2iz
         8   -> __aeabi_fadd
         8   -> __aeabi_fsub
         8   -> __aeabi_ui2f
         8 __aeabi_cfcmple
         8 __aeabi_cfrcmple
       8   EdgeFind
         8   -> __aeabi_i2f
         8 __aeabi_cfcmple
       0   Fill_CCD_Info
       0   FindBoundary
       4   FindNearest
      16   Find_BothLine
        16   -> __aeabi_i2f
        16 __aeabi_cfcmple
      24   Is_Barraicade
        24   -> __aeabi_fdiv
        24   -> __aeabi_i2f
        24 __aeabi_cfcmple
        24 __aeabi_cfrcmple
       0   Is_CrossRoad
       8   Normal
         8   -> FindBoundary
         8   -> FindNearest
         8   -> Find_BothLine
         8 __aeabi_cfrcmple
       0   Prejudge
       0   Push_And_Pull
       8   RoadType_Distinguish
         8   -> Barraicade
         8   -> Brightness_Calculate
         8   -> CrossRoad
         8   -> EdgeFind
         8   -> Is_Barraicade
         8   -> Is_CrossRoad
         8   -> LPLD_GPIO_Output_b
         8   -> Normal
         8   -> Prejudge
         8   -> Push_And_Pull
         8   -> __aeabi_d2f
         8   -> __aeabi_dadd
         8   -> __aeabi_ddiv
         8   -> __aeabi_dsub
         8   -> __aeabi_fadd
         8   -> __aeabi_fsub
         8   -> __aeabi_i2d
         8   -> __aeabi_i2f
         8 __aeabi_cfcmple
         8 __aeabi_cfrcmple


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable11
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_10
       4  ??DataTable12_11
       4  ??DataTable12_12
       4  ??DataTable12_13
       4  ??DataTable12_14
       4  ??DataTable12_15
       4  ??DataTable12_16
       4  ??DataTable12_17
       4  ??DataTable12_18
       4  ??DataTable12_19
       4  ??DataTable12_2
       4  ??DataTable12_20
       4  ??DataTable12_21
       4  ??DataTable12_22
       4  ??DataTable12_23
       4  ??DataTable12_24
       4  ??DataTable12_25
       4  ??DataTable12_26
       4  ??DataTable12_27
       4  ??DataTable12_28
       4  ??DataTable12_29
       4  ??DataTable12_3
       4  ??DataTable12_30
       4  ??DataTable12_31
       4  ??DataTable12_32
       4  ??DataTable12_33
       4  ??DataTable12_34
       4  ??DataTable12_35
       4  ??DataTable12_36
       4  ??DataTable12_37
       4  ??DataTable12_38
       4  ??DataTable12_39
       4  ??DataTable12_4
       4  ??DataTable12_40
       4  ??DataTable12_41
       4  ??DataTable12_42
       4  ??DataTable12_43
       4  ??DataTable12_44
       4  ??DataTable12_45
       4  ??DataTable12_46
       4  ??DataTable12_5
       4  ??DataTable12_6
       4  ??DataTable12_7
       4  ??DataTable12_8
       4  ??DataTable12_9
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_2
       4  ??DataTable8_3
       4  ??DataTable8_4
       4  ??DataTable8_5
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_2
       4  ??DataTable9_3
       4  ??DataTable9_4
       4  ??DataTable9_5
       4  ??DataTable9_6
       4  ??DataTable9_7
       4  B_RightOrLeft
     550  Barraicade
       1  Barraicade_Cnt
       4  Barraicade_Num
       4  Barraicade_width
     248  Brightness_Calculate
     512  CCD_Diff
       4  Character_Distance
       4  Correct_Err
     450  CrossRoad
       1  Cross_Road_Cnt
     410  EdgeFind
       8  FallingEdge
       1  FallingEdgeCnt
       4  FallingEdgeIndex
      22  Fill_CCD_Info
     164  FindBoundary
     244  FindNearest
     510  Find_BothLine
     318  Is_Barraicade
     268  Is_CrossRoad
       4  K_Barraicade
       4  Left
       1  Leftlast
       1  Leftlastfind
       4  Max_Peak
       4  Middle_Err
       4  Middle_Last
       1  Nor_Cnt
    1536  Normal
       1  Normal_Cnt
      20  Pre_Left
      20  Pre_Right
      20  Pre_Width
      38  Prejudge
      26  Push_And_Pull
       4  Reference_Width
       4  Right
       1  Rightlast
       1  Rightlastfind
       8  RisingEdge
       1  RisingEdgeCnt
       4  RisingEdgeIndex
       1  RoadType
     798  RoadType_Distinguish
       1  STATE
       4  Threshold
       4  Width_Change_Cnt_L
       4  Width_Change_Cnt_R
       1  curve_to_cross
       1  flag_barraicade
       1  flag_curve_to_cross
       1  leftfind
       1  rightfind
       4  temp_s_p

 
   657 bytes in section .bss
    20 bytes in section .data
 5 902 bytes in section .text
 
 5 902 bytes of CODE memory
   677 bytes of DATA memory

Errors: none
Warnings: 14
