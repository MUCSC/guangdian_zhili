###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        14/Jul/2016  23:45:57
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\app\roadSearch.c
#    Command line =  
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\app\roadSearch.c
#        -D LPLD_K60 -D USE_K60DZ10 -lCN
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\RAM\List\
#        -lB
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\RAM\List\
#        -o
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\RAM\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        E:\IAR\anzhuang\arm\INC\c\DLib_Config_Normal.h -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\app\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\CPU\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\common\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\LPLD\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\LPLD\HW\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\FatFs\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\FatFs\option\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\USB\common\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\USB\driver\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\USB\descriptor\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\USB\class\
#        -Ol -I E:\IAR\anzhuang\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\RAM\List\roadSearch.lst
#    Object file  =  
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\RAM\Obj\roadSearch.o
#
###############################################################################

F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\app\roadSearch.c
      1          #include "roadSearch.h"
      2          
      3          #define ABS(x) ((x>0)?(x):(-x))
      4          

   \                                 In section .data, align 4
      5          int Reference_Width=50;//赛道参考宽度
   \                     Reference_Width:
   \   00000000   0x00000032         DC32 50

   \                                 In section .bss, align 1
      6          uint8 rightfind=0,leftfind=0;
   \                     rightfind:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     leftfind:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
      7          uint8 Leftlastfind=0,Rightlastfind=0;
   \                     Leftlastfind:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     Rightlastfind:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
      8          uint8 Leftlast=0,Rightlast=0;//最终确定的边界线
   \                     Leftlast:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     Rightlast:
   \   00000000                      DS8 1

   \                                 In section .data, align 4
      9          int Right=127,Left=0;
   \                     Right:
   \   00000000   0x0000007F         DC32 127

   \                                 In section .bss, align 4
   \                     Left:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     10          int CCD_Diff[128];//差分值数组
   \                     CCD_Diff:
   \   00000000                      DS8 512

   \                                 In section .bss, align 4
     11          int RisingEdgeIndex,FallingEdgeIndex;//寻找到的跳变沿index
   \                     RisingEdgeIndex:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     FallingEdgeIndex:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
     12          uint8 RisingEdgeCnt,FallingEdgeCnt,RisingEdge[5],FallingEdge[5];
   \                     RisingEdgeCnt:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     FallingEdgeCnt:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
   \                     RisingEdge:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
   \                     FallingEdge:
   \   00000000                      DS8 8

   \                                 In section .bss, align 1
     13          uint8 Threshold;
   \                     Threshold:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     14          uint8 RoadType=0;//定义赛道类型
   \                     RoadType:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     15          int Max_Peak;
   \                     Max_Peak:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     16          int B_RightOrLeft;
   \                     B_RightOrLeft:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     17          float Middle_Err=0;//中线偏移量
   \                     Middle_Err:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     18          float Character_Distance=0; //特征距离
   \                     Character_Distance:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     19          static float Middle_Last=0;//最终的中线偏移量
   \                     Middle_Last:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     20          float temp_s_p,Correct_Err=1.2;
   \                     temp_s_p:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
   \                     Correct_Err:
   \   00000000   0x3F99999A         DC32 3F99999AH

   \                                 In section .bss, align 4
     21          float Pre_Width[5]={0};
   \                     Pre_Width:
   \   00000000                      DS8 20

   \                                 In section .bss, align 1
     22          uint8 Nor_Cnt=0;
   \                     Nor_Cnt:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     23          uint8 STATE=0;
   \                     STATE:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     24          uint8 curve_to_cross=0;
   \                     curve_to_cross:
   \   00000000                      DS8 1
     25          /****
     26          *寻找跳变沿和峰值
     27          ****/
     28          

   \                                 In section .text, align 2, keep-with-next
     29          void EdgeFind(void) 
     30          {
     31            int i = 0;//for 的下标
   \                     EdgeFind: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
     32            //对各值进行初始化
     33            Max_Peak=0;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      LDR.W    R1,??DataTable5
   \   00000008   0x6008             STR      R0,[R1, #+0]
     34            RisingEdgeCnt=0;
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   00000010   0x7008             STRB     R0,[R1, #+0]
     35            FallingEdgeCnt=0;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   00000018   0x7008             STRB     R0,[R1, #+0]
     36            for(i=0;i<5;i++)
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0xE008             B.N      ??EdgeFind_0
     37            {
     38              RisingEdge[i]=0;
   \                     ??EdgeFind_1: (+1)
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x.... 0x....      LDR.W    R2,??DataTable5_3
   \   00000024   0x5481             STRB     R1,[R0, R2]
     39              FallingEdge[i]=0;
   \   00000026   0x2100             MOVS     R1,#+0
   \   00000028   0x.... 0x....      LDR.W    R2,??DataTable5_4
   \   0000002C   0x5481             STRB     R1,[R0, R2]
     40            }
   \   0000002E   0x1C40             ADDS     R0,R0,#+1
   \                     ??EdgeFind_0: (+1)
   \   00000030   0x2805             CMP      R0,#+5
   \   00000032   0xDBF4             BLT.N    ??EdgeFind_1
     41            for(i=3;i<128;i++)
   \   00000034   0x2003             MOVS     R0,#+3
   \   00000036   0xE008             B.N      ??EdgeFind_2
     42            {
     43              CCD_Diff[i]=CCD_Buff[i]-CCD_Buff[i-3];
     44              if(ABS(CCD_Diff[i])>Max_Peak) Max_Peak=ABS(CCD_Diff[i]);//寻找差分值的峰值 
   \                     ??EdgeFind_3: (+1)
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   0000003C   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   00000040   0x4249             RSBS     R1,R1,#+0
   \   00000042   0x.... 0x....      LDR.W    R2,??DataTable5
   \   00000046   0x6011             STR      R1,[R2, #+0]
   \                     ??EdgeFind_4: (+1)
   \   00000048   0x1C40             ADDS     R0,R0,#+1
   \                     ??EdgeFind_2: (+1)
   \   0000004A   0x2880             CMP      R0,#+128
   \   0000004C   0xDA31             BGE.N    ??EdgeFind_5
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable5_6
   \   00000052   0xF831 0x1010      LDRH     R1,[R1, R0, LSL #+1]
   \   00000056   0x.... 0x....      LDR.W    R2,??DataTable5_6
   \   0000005A   0xEB12 0x0240      ADDS     R2,R2,R0, LSL #+1
   \   0000005E   0xF832 0x2C06      LDRH     R2,[R2, #-6]
   \   00000062   0x1A89             SUBS     R1,R1,R2
   \   00000064   0x.... 0x....      LDR.W    R2,??DataTable5_5
   \   00000068   0xF842 0x1020      STR      R1,[R2, R0, LSL #+2]
   \   0000006C   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   00000070   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   00000074   0x2901             CMP      R1,#+1
   \   00000076   0xDB04             BLT.N    ??EdgeFind_6
   \   00000078   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   0000007C   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   00000080   0xE004             B.N      ??EdgeFind_7
   \                     ??EdgeFind_6: (+1)
   \   00000082   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   00000086   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   0000008A   0x4249             RSBS     R1,R1,#+0
   \                     ??EdgeFind_7: (+1)
   \   0000008C   0x.... 0x....      LDR.W    R2,??DataTable5
   \   00000090   0x6812             LDR      R2,[R2, #+0]
   \   00000092   0x428A             CMP      R2,R1
   \   00000094   0xDAD8             BGE.N    ??EdgeFind_4
   \   00000096   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   0000009A   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   0000009E   0x2901             CMP      R1,#+1
   \   000000A0   0xDBCA             BLT.N    ??EdgeFind_3
   \   000000A2   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   000000A6   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   000000AA   0x.... 0x....      LDR.W    R2,??DataTable5
   \   000000AE   0x6011             STR      R1,[R2, #+0]
   \   000000B0   0xE7CA             B.N      ??EdgeFind_4
     45            }
     46            for(i=4;i<127;i++)
   \                     ??EdgeFind_5: (+1)
   \   000000B2   0x2004             MOVS     R0,#+4
   \   000000B4   0xE064             B.N      ??EdgeFind_8
     47            {
     48              if((CCD_Diff[i]>=CCD_Diff[i-1])&&(CCD_Diff[i]>CCD_Diff[i+1])&&(CCD_Diff[i]>Threshold)) //寻找正的峰值，左边线
   \                     ??EdgeFind_9: (+1)
   \   000000B6   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   000000BA   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   000000BE   0x.... 0x....      LDR.W    R2,??DataTable5_5
   \   000000C2   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   000000C6   0xF852 0x2C04      LDR      R2,[R2, #-4]
   \   000000CA   0x4291             CMP      R1,R2
   \   000000CC   0xDB25             BLT.N    ??EdgeFind_10
   \   000000CE   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   000000D2   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000000D6   0x6849             LDR      R1,[R1, #+4]
   \   000000D8   0x.... 0x....      LDR.W    R2,??DataTable5_5
   \   000000DC   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   000000E0   0x4291             CMP      R1,R2
   \   000000E2   0xDA1A             BGE.N    ??EdgeFind_10
   \   000000E4   0x.... 0x....      LDR.W    R1,??DataTable5_7
   \   000000E8   0x7809             LDRB     R1,[R1, #+0]
   \   000000EA   0x.... 0x....      LDR.W    R2,??DataTable5_5
   \   000000EE   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   000000F2   0x4291             CMP      R1,R2
   \   000000F4   0xDA11             BGE.N    ??EdgeFind_10
     49              {
     50                if(RisingEdgeCnt<5)    
   \   000000F6   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   000000FA   0x7809             LDRB     R1,[R1, #+0]
   \   000000FC   0x2905             CMP      R1,#+5
   \   000000FE   0xDA0C             BGE.N    ??EdgeFind_10
     51                { 
     52                 RisingEdge[RisingEdgeCnt]=i;
   \   00000100   0x.... 0x....      LDR.W    R1,??DataTable5_3
   \   00000104   0x.... 0x....      LDR.W    R2,??DataTable5_1
   \   00000108   0x7812             LDRB     R2,[R2, #+0]
   \   0000010A   0x5450             STRB     R0,[R2, R1]
     53                 RisingEdgeCnt++;  
   \   0000010C   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   00000110   0x7809             LDRB     R1,[R1, #+0]
   \   00000112   0x1C49             ADDS     R1,R1,#+1
   \   00000114   0x.... 0x....      LDR.W    R2,??DataTable5_1
   \   00000118   0x7011             STRB     R1,[R2, #+0]
     54                }
     55              } 
     56              if((CCD_Diff[i]<CCD_Diff[i-1])&&(CCD_Diff[i]<=CCD_Diff[i+1])&&(CCD_Diff[i]<-Threshold))  //寻找负的峰值，右边线
   \                     ??EdgeFind_10: (+1)
   \   0000011A   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   0000011E   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   00000122   0x.... 0x....      LDR.W    R2,??DataTable5_5
   \   00000126   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   0000012A   0xF852 0x2C04      LDR      R2,[R2, #-4]
   \   0000012E   0x4291             CMP      R1,R2
   \   00000130   0xDA25             BGE.N    ??EdgeFind_11
   \   00000132   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   00000136   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000013A   0x6849             LDR      R1,[R1, #+4]
   \   0000013C   0x.... 0x....      LDR.W    R2,??DataTable5_5
   \   00000140   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   00000144   0x4291             CMP      R1,R2
   \   00000146   0xDB1A             BLT.N    ??EdgeFind_11
   \   00000148   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   0000014C   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   00000150   0x.... 0x....      LDR.W    R2,??DataTable5_7
   \   00000154   0x7812             LDRB     R2,[R2, #+0]
   \   00000156   0x42D1             CMN      R1,R2
   \   00000158   0xDA11             BGE.N    ??EdgeFind_11
     57              {
     58                if(FallingEdgeCnt<5)    
   \   0000015A   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   0000015E   0x7809             LDRB     R1,[R1, #+0]
   \   00000160   0x2905             CMP      R1,#+5
   \   00000162   0xDA0C             BGE.N    ??EdgeFind_11
     59                {
     60                 FallingEdge[FallingEdgeCnt]=i;
   \   00000164   0x.... 0x....      LDR.W    R1,??DataTable5_4
   \   00000168   0x.... 0x....      LDR.W    R2,??DataTable5_2
   \   0000016C   0x7812             LDRB     R2,[R2, #+0]
   \   0000016E   0x5450             STRB     R0,[R2, R1]
     61                 FallingEdgeCnt++;
   \   00000170   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   00000174   0x7809             LDRB     R1,[R1, #+0]
   \   00000176   0x1C49             ADDS     R1,R1,#+1
   \   00000178   0x.... 0x....      LDR.W    R2,??DataTable5_2
   \   0000017C   0x7011             STRB     R1,[R2, #+0]
     62                }
     63              }
     64            }
   \                     ??EdgeFind_11: (+1)
   \   0000017E   0x1C40             ADDS     R0,R0,#+1
   \                     ??EdgeFind_8: (+1)
   \   00000180   0x287F             CMP      R0,#+127
   \   00000182   0xDB98             BLT.N    ??EdgeFind_9
     65            
     66            
     67          
     68          }
   \   00000184   0x4770             BX       LR               ;; return
     69          
     70          /*****
     71          ** 寻找两条边线  仅能够处理直道，弯道无法识别
     72          *****/

   \                                 In section .text, align 2, keep-with-next
     73          void Find_BothLine(void)
     74          {
   \                     Find_BothLine: (+1)
   \   00000000   0xB410             PUSH     {R4}
     75            uint8 i=0, j=0, find=0;
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0x2000             MOVS     R0,#+0
     76            for(i=60;i>20;i--)
   \   00000008   0x213C             MOVS     R1,#+60
   \   0000000A   0xE000             B.N      ??Find_BothLine_0
   \                     ??Find_BothLine_1: (+1)
   \   0000000C   0x1E49             SUBS     R1,R1,#+1
   \                     ??Find_BothLine_0: (+1)
   \   0000000E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000010   0x2915             CMP      R1,#+21
   \   00000012   0xDB24             BLT.N    ??Find_BothLine_2
     77            {
     78              if((CCD_Diff[i]>=CCD_Diff[i-1])&&(CCD_Diff[i]>CCD_Diff[i+1])&&(CCD_Diff[i]>Threshold)) //寻找左边线
   \   00000014   0x.... 0x....      LDR.W    R2,??DataTable5_5
   \   00000018   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000001A   0xF852 0x2021      LDR      R2,[R2, R1, LSL #+2]
   \   0000001E   0x.... 0x....      LDR.W    R3,??DataTable5_5
   \   00000022   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000024   0xEB13 0x0381      ADDS     R3,R3,R1, LSL #+2
   \   00000028   0xF853 0x3C04      LDR      R3,[R3, #-4]
   \   0000002C   0x429A             CMP      R2,R3
   \   0000002E   0xDBED             BLT.N    ??Find_BothLine_1
   \   00000030   0x.... 0x....      LDR.W    R2,??DataTable5_5
   \   00000034   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000036   0xEB12 0x0281      ADDS     R2,R2,R1, LSL #+2
   \   0000003A   0x6852             LDR      R2,[R2, #+4]
   \   0000003C   0x.... 0x....      LDR.W    R3,??DataTable5_5
   \   00000040   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000042   0xF853 0x3021      LDR      R3,[R3, R1, LSL #+2]
   \   00000046   0x429A             CMP      R2,R3
   \   00000048   0xDAE0             BGE.N    ??Find_BothLine_1
   \   0000004A   0x.... 0x....      LDR.W    R2,??DataTable5_7
   \   0000004E   0x7812             LDRB     R2,[R2, #+0]
   \   00000050   0x.... 0x....      LDR.W    R3,??DataTable5_5
   \   00000054   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000056   0xF853 0x3021      LDR      R3,[R3, R1, LSL #+2]
   \   0000005A   0x429A             CMP      R2,R3
   \   0000005C   0xDAD6             BGE.N    ??Find_BothLine_1
     79              {
     80                  break;
     81              }
     82            }
     83            for(j=70;j<110;j++)
   \                     ??Find_BothLine_2: (+1)
   \   0000005E   0x2246             MOVS     R2,#+70
   \   00000060   0xE000             B.N      ??Find_BothLine_3
   \                     ??Find_BothLine_4: (+1)
   \   00000062   0x1C52             ADDS     R2,R2,#+1
   \                     ??Find_BothLine_3: (+1)
   \   00000064   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000066   0x2A6E             CMP      R2,#+110
   \   00000068   0xDA24             BGE.N    ??Find_BothLine_5
     84            {
     85              if((CCD_Diff[j]<CCD_Diff[j-1])&&(CCD_Diff[j]<=CCD_Diff[j+1])&&(CCD_Diff[j]<-Threshold))//寻找右边线
   \   0000006A   0x.... 0x....      LDR.W    R3,??DataTable5_5
   \   0000006E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000070   0xF853 0x3022      LDR      R3,[R3, R2, LSL #+2]
   \   00000074   0x.... 0x....      LDR.W    R4,??DataTable5_5
   \   00000078   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000007A   0xEB14 0x0482      ADDS     R4,R4,R2, LSL #+2
   \   0000007E   0xF854 0x4C04      LDR      R4,[R4, #-4]
   \   00000082   0x42A3             CMP      R3,R4
   \   00000084   0xDAED             BGE.N    ??Find_BothLine_4
   \   00000086   0x.... 0x....      LDR.W    R3,??DataTable5_5
   \   0000008A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000008C   0xEB13 0x0382      ADDS     R3,R3,R2, LSL #+2
   \   00000090   0x685B             LDR      R3,[R3, #+4]
   \   00000092   0x.... 0x....      LDR.W    R4,??DataTable5_5
   \   00000096   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000098   0xF854 0x4022      LDR      R4,[R4, R2, LSL #+2]
   \   0000009C   0x42A3             CMP      R3,R4
   \   0000009E   0xDBE0             BLT.N    ??Find_BothLine_4
   \   000000A0   0x.... 0x....      LDR.W    R3,??DataTable5_5
   \   000000A4   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000A6   0xF853 0x3022      LDR      R3,[R3, R2, LSL #+2]
   \   000000AA   0x.... 0x....      LDR.W    R4,??DataTable5_7
   \   000000AE   0x7824             LDRB     R4,[R4, #+0]
   \   000000B0   0x42E3             CMN      R3,R4
   \   000000B2   0xDAD6             BGE.N    ??Find_BothLine_4
     86              {
     87                break;
     88              }
     89            }
     90            
     91            if(i>25 && j<105) //如果左右边线满足条件
   \                     ??Find_BothLine_5: (+1)
   \   000000B4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000B6   0x291A             CMP      R1,#+26
   \   000000B8   0xDB14             BLT.N    ??Find_BothLine_6
   \   000000BA   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000BC   0x2A69             CMP      R2,#+105
   \   000000BE   0xDA11             BGE.N    ??Find_BothLine_6
     92            {
     93              find=1;
   \   000000C0   0x2001             MOVS     R0,#+1
     94              Left=i;
   \   000000C2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000C4   0x.... 0x....      LDR.W    R3,??DataTable5_8
   \   000000C8   0x6019             STR      R1,[R3, #+0]
     95              Right=j;
   \   000000CA   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000CC   0x.... 0x....      LDR.W    R1,??DataTable5_9
   \   000000D0   0x600A             STR      R2,[R1, #+0]
     96              Leftlastfind=1;
   \   000000D2   0x2101             MOVS     R1,#+1
   \   000000D4   0x.... 0x....      LDR.W    R2,??DataTable5_10
   \   000000D8   0x7011             STRB     R1,[R2, #+0]
     97              Rightlastfind=1;
   \   000000DA   0x2101             MOVS     R1,#+1
   \   000000DC   0x.... 0x....      LDR.W    R2,??DataTable6
   \   000000E0   0x7011             STRB     R1,[R2, #+0]
   \   000000E2   0xE06E             B.N      ??Find_BothLine_7
     98            }
     99            else  //放宽左右边线条件
    100            {
    101              for(i=10;i<80;i++)
   \                     ??Find_BothLine_6: (+1)
   \   000000E4   0x210A             MOVS     R1,#+10
   \   000000E6   0xE000             B.N      ??Find_BothLine_8
   \                     ??Find_BothLine_9: (+1)
   \   000000E8   0x1C49             ADDS     R1,R1,#+1
   \                     ??Find_BothLine_8: (+1)
   \   000000EA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000EC   0x2950             CMP      R1,#+80
   \   000000EE   0xDA68             BGE.N    ??Find_BothLine_7
    102              {
    103                if((CCD_Diff[i]>=CCD_Diff[i-1])&&(CCD_Diff[i]>CCD_Diff[i+1])&&(CCD_Diff[i]>Threshold))
   \   000000F0   0x.... 0x....      LDR.W    R2,??DataTable5_5
   \   000000F4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000F6   0xF852 0x2021      LDR      R2,[R2, R1, LSL #+2]
   \   000000FA   0x.... 0x....      LDR.W    R3,??DataTable5_5
   \   000000FE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000100   0xEB13 0x0381      ADDS     R3,R3,R1, LSL #+2
   \   00000104   0xF853 0x3C04      LDR      R3,[R3, #-4]
   \   00000108   0x429A             CMP      R2,R3
   \   0000010A   0xDB57             BLT.N    ??Find_BothLine_10
   \   0000010C   0x.... 0x....      LDR.W    R2,??DataTable5_5
   \   00000110   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000112   0xEB12 0x0281      ADDS     R2,R2,R1, LSL #+2
   \   00000116   0x6852             LDR      R2,[R2, #+4]
   \   00000118   0x.... 0x....      LDR.W    R3,??DataTable5_5
   \   0000011C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000011E   0xF853 0x3021      LDR      R3,[R3, R1, LSL #+2]
   \   00000122   0x429A             CMP      R2,R3
   \   00000124   0xDA4A             BGE.N    ??Find_BothLine_10
   \   00000126   0x.... 0x....      LDR.W    R2,??DataTable5_7
   \   0000012A   0x7812             LDRB     R2,[R2, #+0]
   \   0000012C   0x.... 0x....      LDR.W    R3,??DataTable5_5
   \   00000130   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000132   0xF853 0x3021      LDR      R3,[R3, R1, LSL #+2]
   \   00000136   0x429A             CMP      R2,R3
   \   00000138   0xDA40             BGE.N    ??Find_BothLine_10
    104                {
    105                  for(j=64;j<=120;j++)
   \   0000013A   0x2240             MOVS     R2,#+64
   \   0000013C   0xE000             B.N      ??Find_BothLine_11
   \                     ??Find_BothLine_12: (+1)
   \   0000013E   0x1C52             ADDS     R2,R2,#+1
   \                     ??Find_BothLine_11: (+1)
   \   00000140   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000142   0x2A79             CMP      R2,#+121
   \   00000144   0xDA3A             BGE.N    ??Find_BothLine_10
    106                  {
    107                    if((CCD_Diff[j]<CCD_Diff[j-1])&&(CCD_Diff[j]<=CCD_Diff[j+1])&&(CCD_Diff[j]<-Threshold))
   \   00000146   0x.... 0x....      LDR.W    R3,??DataTable5_5
   \   0000014A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000014C   0xF853 0x3022      LDR      R3,[R3, R2, LSL #+2]
   \   00000150   0x.... 0x....      LDR.W    R4,??DataTable5_5
   \   00000154   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000156   0xEB14 0x0482      ADDS     R4,R4,R2, LSL #+2
   \   0000015A   0xF854 0x4C04      LDR      R4,[R4, #-4]
   \   0000015E   0x42A3             CMP      R3,R4
   \   00000160   0xDAED             BGE.N    ??Find_BothLine_12
   \   00000162   0x.... 0x....      LDR.W    R3,??DataTable5_5
   \   00000166   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000168   0xEB13 0x0382      ADDS     R3,R3,R2, LSL #+2
   \   0000016C   0x685B             LDR      R3,[R3, #+4]
   \   0000016E   0x.... 0x....      LDR.W    R4,??DataTable5_5
   \   00000172   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000174   0xF854 0x4022      LDR      R4,[R4, R2, LSL #+2]
   \   00000178   0x42A3             CMP      R3,R4
   \   0000017A   0xDBE0             BLT.N    ??Find_BothLine_12
   \   0000017C   0x.... 0x....      LDR.W    R3,??DataTable5_5
   \   00000180   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000182   0xF853 0x3022      LDR      R3,[R3, R2, LSL #+2]
   \   00000186   0x.... 0x....      LDR.W    R4,??DataTable5_7
   \   0000018A   0x7824             LDRB     R4,[R4, #+0]
   \   0000018C   0x42E3             CMN      R3,R4
   \   0000018E   0xDAD6             BGE.N    ??Find_BothLine_12
    108                    {
    109                      if(j-i>25)
   \   00000190   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000192   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000194   0x1A53             SUBS     R3,R2,R1
   \   00000196   0x2B1A             CMP      R3,#+26
   \   00000198   0xDB10             BLT.N    ??Find_BothLine_13
    110                      {
    111                        find=1;
   \   0000019A   0x2001             MOVS     R0,#+1
    112                        Left=i;
   \   0000019C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000019E   0x.... 0x....      LDR.W    R3,??DataTable5_8
   \   000001A2   0x6019             STR      R1,[R3, #+0]
    113                        Right=j;
   \   000001A4   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000001A6   0x.... 0x....      LDR.W    R3,??DataTable5_9
   \   000001AA   0x601A             STR      R2,[R3, #+0]
    114                        Leftlastfind=1;
   \   000001AC   0x2201             MOVS     R2,#+1
   \   000001AE   0x.... 0x....      LDR.W    R3,??DataTable5_10
   \   000001B2   0x701A             STRB     R2,[R3, #+0]
    115                        Rightlastfind=1;
   \   000001B4   0x2201             MOVS     R2,#+1
   \   000001B6   0x.... 0x....      LDR.W    R3,??DataTable6
   \   000001BA   0x701A             STRB     R2,[R3, #+0]
    116                      }
    117                      break;
    118                    }
    119                    
    120                  }
    121                
    122                }
    123                if(find)  break;
   \                     ??Find_BothLine_13: (+1)
   \                     ??Find_BothLine_10: (+1)
   \   000001BC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001BE   0x2800             CMP      R0,#+0
   \   000001C0   0xD092             BEQ.N    ??Find_BothLine_9
    124               
    125              
    126              }
    127          
    128            }
    129            
    130            if(find==0)
   \                     ??Find_BothLine_7: (+1)
   \   000001C2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001C4   0x2800             CMP      R0,#+0
   \   000001C6   0xD107             BNE.N    ??Find_BothLine_14
    131            {
    132              Leftlastfind=0;
   \   000001C8   0x2000             MOVS     R0,#+0
   \   000001CA   0x.... 0x....      LDR.W    R1,??DataTable5_10
   \   000001CE   0x7008             STRB     R0,[R1, #+0]
    133              Rightlastfind=0;
   \   000001D0   0x2000             MOVS     R0,#+0
   \   000001D2   0x.... 0x....      LDR.W    R1,??DataTable6
   \   000001D6   0x7008             STRB     R0,[R1, #+0]
    134            }
    135           
    136          }
   \                     ??Find_BothLine_14: (+1)
   \   000001D8   0xBC10             POP      {R4}
   \   000001DA   0x4770             BX       LR               ;; return
    137          
    138          /****
    139          * 根据参数寻找靠近中心线的边界
    140          * 参数;mode ,两种：LEFT和RIGHT
    141          ****/

   \                                 In section .text, align 2, keep-with-next
    142          uint8 FindBoundary(uint8 mode)
    143          {
   \                     FindBoundary: (+1)
   \   00000000   0x0001             MOVS     R1,R0
    144            uint8 find=0;
   \   00000002   0x2000             MOVS     R0,#+0
    145            if(mode==LEFT)
   \   00000004   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000006   0x2900             CMP      R1,#+0
   \   00000008   0xD128             BNE.N    ??FindBoundary_0
    146            {
    147              if(RisingEdgeCnt!=0)
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   0000000E   0x7809             LDRB     R1,[R1, #+0]
   \   00000010   0x2900             CMP      R1,#+0
   \   00000012   0xD045             BEQ.N    ??FindBoundary_1
    148              {
    149                for(RisingEdgeIndex=RisingEdgeCnt-1;RisingEdgeIndex>=0;RisingEdgeIndex--)//RisingEdgeIndex=RisingEdgeCnt-1？？？？？
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   00000018   0x7809             LDRB     R1,[R1, #+0]
   \   0000001A   0x1E49             SUBS     R1,R1,#+1
   \   0000001C   0x.... 0x....      LDR.W    R2,??DataTable6_1
   \   00000020   0x6011             STR      R1,[R2, #+0]
   \   00000022   0xE006             B.N      ??FindBoundary_2
   \                     ??FindBoundary_3: (+1)
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000028   0x6809             LDR      R1,[R1, #+0]
   \   0000002A   0x1E49             SUBS     R1,R1,#+1
   \   0000002C   0x.... 0x....      LDR.W    R2,??DataTable6_1
   \   00000030   0x6011             STR      R1,[R2, #+0]
   \                     ??FindBoundary_2: (+1)
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000036   0x6809             LDR      R1,[R1, #+0]
   \   00000038   0x2900             CMP      R1,#+0
   \   0000003A   0xD431             BMI.N    ??FindBoundary_1
    150                {
    151                  if(RisingEdge[RisingEdgeIndex]<75)   //参数为什么设置为75
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable5_3
   \   00000040   0x.... 0x....      LDR.W    R2,??DataTable6_1
   \   00000044   0x6812             LDR      R2,[R2, #+0]
   \   00000046   0x5C51             LDRB     R1,[R2, R1]
   \   00000048   0x294B             CMP      R1,#+75
   \   0000004A   0xDA01             BGE.N    ??FindBoundary_4
    152                  {
    153                    find=1;
   \   0000004C   0x2001             MOVS     R0,#+1
    154                    
    155                    break;
   \   0000004E   0xE027             B.N      ??FindBoundary_1
    156                  }
    157                  if(RisingEdgeIndex==0) break;
   \                     ??FindBoundary_4: (+1)
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000054   0x6809             LDR      R1,[R1, #+0]
   \   00000056   0x2900             CMP      R1,#+0
   \   00000058   0xD1E4             BNE.N    ??FindBoundary_3
   \   0000005A   0xE021             B.N      ??FindBoundary_1
    158                
    159                }
    160              }
    161            }
    162            else
    163            {
    164              if(FallingEdgeCnt!=0)
   \                     ??FindBoundary_0: (+1)
   \   0000005C   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   00000060   0x7809             LDRB     R1,[R1, #+0]
   \   00000062   0x2900             CMP      R1,#+0
   \   00000064   0xD01C             BEQ.N    ??FindBoundary_1
    165              {
    166                for(FallingEdgeIndex=0;FallingEdgeIndex<FallingEdgeCnt;FallingEdgeIndex++)
   \   00000066   0x2100             MOVS     R1,#+0
   \   00000068   0x.... 0x....      LDR.W    R2,??DataTable6_2
   \   0000006C   0x6011             STR      R1,[R2, #+0]
   \   0000006E   0xE006             B.N      ??FindBoundary_5
   \                     ??FindBoundary_6: (+1)
   \   00000070   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   00000074   0x6809             LDR      R1,[R1, #+0]
   \   00000076   0x1C49             ADDS     R1,R1,#+1
   \   00000078   0x.... 0x....      LDR.W    R2,??DataTable6_2
   \   0000007C   0x6011             STR      R1,[R2, #+0]
   \                     ??FindBoundary_5: (+1)
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   00000082   0x6809             LDR      R1,[R1, #+0]
   \   00000084   0x.... 0x....      LDR.W    R2,??DataTable5_2
   \   00000088   0x7812             LDRB     R2,[R2, #+0]
   \   0000008A   0x4291             CMP      R1,R2
   \   0000008C   0xDA08             BGE.N    ??FindBoundary_1
    167                {
    168                   if(FallingEdge[FallingEdgeIndex]>53)
   \   0000008E   0x.... 0x....      LDR.W    R1,??DataTable5_4
   \   00000092   0x.... 0x....      LDR.W    R2,??DataTable6_2
   \   00000096   0x6812             LDR      R2,[R2, #+0]
   \   00000098   0x5C51             LDRB     R1,[R2, R1]
   \   0000009A   0x2936             CMP      R1,#+54
   \   0000009C   0xDBE8             BLT.N    ??FindBoundary_6
    169                   {
    170                      find=1;
   \   0000009E   0x2001             MOVS     R0,#+1
    171                      break;
    172                   }
    173                
    174                }
    175              
    176              }
    177            }
    178            
    179            return find;
   \                     ??FindBoundary_1: (+1)
   \   000000A0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000A2   0x4770             BX       LR               ;; return
    180          
    181          }
    182          /*****
    183          ***根据上次找到的边线寻找新的边线
    184          *****/
    185          

   \                                 In section .text, align 2, keep-with-next
    186          uint8 FindNearest(uint8 mode,uint8 lastegde)
    187          {
   \                     FindNearest: (+1)
   \   00000000   0xB410             PUSH     {R4}
    188            uint8 find=0;
   \   00000002   0x2200             MOVS     R2,#+0
    189            if(mode==LEFT)
   \   00000004   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD138             BNE.N    ??FindNearest_0
    190            {
    191               if(RisingEdgeCnt!=0)  
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   0000000E   0x7800             LDRB     R0,[R0, #+0]
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD06B             BEQ.N    ??FindNearest_1
    192               {
    193                for(RisingEdgeIndex=0;RisingEdgeIndex<RisingEdgeCnt;RisingEdgeIndex++)
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x.... 0x....      LDR.W    R3,??DataTable6_1
   \   0000001A   0x6018             STR      R0,[R3, #+0]
   \   0000001C   0xE006             B.N      ??FindNearest_2
   \                     ??FindNearest_3: (+1)
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0x1C40             ADDS     R0,R0,#+1
   \   00000026   0x.... 0x....      LDR.W    R3,??DataTable6_1
   \   0000002A   0x6018             STR      R0,[R3, #+0]
   \                     ??FindNearest_2: (+1)
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x.... 0x....      LDR.W    R3,??DataTable5_1
   \   00000036   0x781B             LDRB     R3,[R3, #+0]
   \   00000038   0x4298             CMP      R0,R3
   \   0000003A   0xDA57             BGE.N    ??FindNearest_1
    194                {
    195                 if(ABS(lastegde-RisingEdge[RisingEdgeIndex])<=3)//3
   \   0000003C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable5_3
   \   00000042   0x.... 0x....      LDR.W    R3,??DataTable6_1
   \   00000046   0x681B             LDR      R3,[R3, #+0]
   \   00000048   0x5C18             LDRB     R0,[R3, R0]
   \   0000004A   0x1A08             SUBS     R0,R1,R0
   \   0000004C   0x2801             CMP      R0,#+1
   \   0000004E   0xDB08             BLT.N    ??FindNearest_4
   \   00000050   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable5_3
   \   00000056   0x.... 0x....      LDR.W    R3,??DataTable6_1
   \   0000005A   0x681B             LDR      R3,[R3, #+0]
   \   0000005C   0x5C18             LDRB     R0,[R3, R0]
   \   0000005E   0x1A08             SUBS     R0,R1,R0
   \   00000060   0xE008             B.N      ??FindNearest_5
   \                     ??FindNearest_4: (+1)
   \   00000062   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000064   0x4248             RSBS     R0,R1,#+0
   \   00000066   0x.... 0x....      LDR.W    R3,??DataTable5_3
   \   0000006A   0x.... 0x....      LDR.W    R4,??DataTable6_1
   \   0000006E   0x6824             LDR      R4,[R4, #+0]
   \   00000070   0x5CE3             LDRB     R3,[R4, R3]
   \   00000072   0x1AC0             SUBS     R0,R0,R3
   \                     ??FindNearest_5: (+1)
   \   00000074   0x2804             CMP      R0,#+4
   \   00000076   0xDAD2             BGE.N    ??FindNearest_3
    196                 {
    197                   find=1;
   \   00000078   0x2201             MOVS     R2,#+1
    198                   break;
   \   0000007A   0xE037             B.N      ??FindNearest_1
    199                 }
    200                }
    201               }
    202            }
    203            else
    204            {
    205              if(FallingEdgeCnt!=0)  
   \                     ??FindNearest_0: (+1)
   \   0000007C   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000080   0x7800             LDRB     R0,[R0, #+0]
   \   00000082   0x2800             CMP      R0,#+0
   \   00000084   0xD032             BEQ.N    ??FindNearest_1
    206             {
    207               for(FallingEdgeIndex=0;FallingEdgeIndex<FallingEdgeCnt;FallingEdgeIndex++)
   \   00000086   0x2000             MOVS     R0,#+0
   \   00000088   0x.... 0x....      LDR.W    R3,??DataTable6_2
   \   0000008C   0x6018             STR      R0,[R3, #+0]
   \   0000008E   0xE006             B.N      ??FindNearest_6
   \                     ??FindNearest_7: (+1)
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000094   0x6800             LDR      R0,[R0, #+0]
   \   00000096   0x1C40             ADDS     R0,R0,#+1
   \   00000098   0x.... 0x....      LDR.W    R3,??DataTable6_2
   \   0000009C   0x6018             STR      R0,[R3, #+0]
   \                     ??FindNearest_6: (+1)
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   000000A2   0x6800             LDR      R0,[R0, #+0]
   \   000000A4   0x.... 0x....      LDR.W    R3,??DataTable5_2
   \   000000A8   0x781B             LDRB     R3,[R3, #+0]
   \   000000AA   0x4298             CMP      R0,R3
   \   000000AC   0xDA1E             BGE.N    ??FindNearest_1
    208               {
    209                 if(ABS(lastegde-FallingEdge[FallingEdgeIndex])<=3)//3
   \   000000AE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   000000B4   0x.... 0x....      LDR.W    R3,??DataTable6_2
   \   000000B8   0x681B             LDR      R3,[R3, #+0]
   \   000000BA   0x5C18             LDRB     R0,[R3, R0]
   \   000000BC   0x1A08             SUBS     R0,R1,R0
   \   000000BE   0x2801             CMP      R0,#+1
   \   000000C0   0xDB08             BLT.N    ??FindNearest_8
   \   000000C2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000C4   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   000000C8   0x.... 0x....      LDR.W    R3,??DataTable6_2
   \   000000CC   0x681B             LDR      R3,[R3, #+0]
   \   000000CE   0x5C18             LDRB     R0,[R3, R0]
   \   000000D0   0x1A08             SUBS     R0,R1,R0
   \   000000D2   0xE008             B.N      ??FindNearest_9
   \                     ??FindNearest_8: (+1)
   \   000000D4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000D6   0x4248             RSBS     R0,R1,#+0
   \   000000D8   0x.... 0x....      LDR.W    R3,??DataTable5_4
   \   000000DC   0x.... 0x....      LDR.W    R4,??DataTable6_2
   \   000000E0   0x6824             LDR      R4,[R4, #+0]
   \   000000E2   0x5CE3             LDRB     R3,[R4, R3]
   \   000000E4   0x1AC0             SUBS     R0,R0,R3
   \                     ??FindNearest_9: (+1)
   \   000000E6   0x2804             CMP      R0,#+4
   \   000000E8   0xDAD2             BGE.N    ??FindNearest_7
    210                 {
    211                   find=1;
   \   000000EA   0x2201             MOVS     R2,#+1
    212                   break;
    213                 }
    214               }
    215             }
    216            }
    217            return find;
   \                     ??FindNearest_1: (+1)
   \   000000EC   0x0010             MOVS     R0,R2
   \   000000EE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000F0   0xBC10             POP      {R4}
   \   000000F2   0x4770             BX       LR               ;; return
    218          }
    219          
    220          /****
    221          ** 对常规赛道的处理函数
    222          ****/
    223          

   \                                 In section .text, align 2, keep-with-next
    224          void Normal(void)
    225          {
   \                     Normal: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    226           uint8 tempwidth;
    227           if(Leftlastfind==0 && Rightlastfind==0) //上次双线均未找到
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable5_10
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD15E             BNE.N    ??Normal_0
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000010   0x7800             LDRB     R0,[R0, #+0]
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD159             BNE.N    ??Normal_0
    228           {
    229              Find_BothLine();//寻找双线
   \   00000016   0x.... 0x....      BL       Find_BothLine
    230              if(Leftlastfind==0 && Rightlastfind==0)//仍然没有找到双线
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable5_10
   \   0000001E   0x7800             LDRB     R0,[R0, #+0]
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xF040 0x82E4      BNE.W    ??Normal_1
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable6
   \   0000002A   0x7800             LDRB     R0,[R0, #+0]
   \   0000002C   0x2800             CMP      R0,#+0
   \   0000002E   0xF040 0x82DE      BNE.W    ??Normal_1
    231              {
    232                 if(FindBoundary(LEFT))
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x.... 0x....      BL       FindBoundary
   \   00000038   0x2800             CMP      R0,#+0
   \   0000003A   0xD00D             BEQ.N    ??Normal_2
    233                 {
    234                  Left=RisingEdge[RisingEdgeIndex];
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable5_3
   \   00000040   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000044   0x6809             LDR      R1,[R1, #+0]
   \   00000046   0x5C08             LDRB     R0,[R1, R0]
   \   00000048   0x.... 0x....      LDR.W    R1,??DataTable5_8
   \   0000004C   0x6008             STR      R0,[R1, #+0]
    235                  Leftlastfind=1; 
   \   0000004E   0x2001             MOVS     R0,#+1
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable5_10
   \   00000054   0x7008             STRB     R0,[R1, #+0]
   \   00000056   0xE003             B.N      ??Normal_3
    236                  //if(Left<34)Leftlastfind=0;
    237                 }
    238                 else  Leftlastfind=0;
   \                     ??Normal_2: (+1)
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable5_10
   \   0000005E   0x7008             STRB     R0,[R1, #+0]
    239                 
    240                 if(FindBoundary(RIGHT))
   \                     ??Normal_3: (+1)
   \   00000060   0x2001             MOVS     R0,#+1
   \   00000062   0x.... 0x....      BL       FindBoundary
   \   00000066   0x2800             CMP      R0,#+0
   \   00000068   0xD00D             BEQ.N    ??Normal_4
    241                 {
    242                   Right=FallingEdge[FallingEdgeIndex];
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   00000072   0x6809             LDR      R1,[R1, #+0]
   \   00000074   0x5C08             LDRB     R0,[R1, R0]
   \   00000076   0x.... 0x....      LDR.W    R1,??DataTable5_9
   \   0000007A   0x6008             STR      R0,[R1, #+0]
    243                   Rightlastfind=1;
   \   0000007C   0x2001             MOVS     R0,#+1
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000082   0x7008             STRB     R0,[R1, #+0]
   \   00000084   0xE003             B.N      ??Normal_5
    244                   //if(Right>84)Rightlastfind=0;
    245                 }
    246                 else  Rightlastfind=0;
   \                     ??Normal_4: (+1)
   \   00000086   0x2000             MOVS     R0,#+0
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable6
   \   0000008C   0x7008             STRB     R0,[R1, #+0]
    247                 if(Leftlastfind&&Rightlastfind) 
   \                     ??Normal_5: (+1)
   \   0000008E   0x.... 0x....      LDR.W    R0,??DataTable5_10
   \   00000092   0x7800             LDRB     R0,[R0, #+0]
   \   00000094   0x2800             CMP      R0,#+0
   \   00000096   0xF000 0x82AA      BEQ.W    ??Normal_1
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable6
   \   0000009E   0x7800             LDRB     R0,[R0, #+0]
   \   000000A0   0x2800             CMP      R0,#+0
   \   000000A2   0xF000 0x82A4      BEQ.W    ??Normal_1
    248                 {
    249                   if(Right<=Left)
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   000000AA   0x6800             LDR      R0,[R0, #+0]
   \   000000AC   0x.... 0x....      LDR.W    R1,??DataTable5_9
   \   000000B0   0x6809             LDR      R1,[R1, #+0]
   \   000000B2   0x4288             CMP      R0,R1
   \   000000B4   0xF2C0 0x829B      BLT.W    ??Normal_1
    250                   {
    251                     Leftlastfind=0;
   \   000000B8   0x2000             MOVS     R0,#+0
   \   000000BA   0x.... 0x....      LDR.W    R1,??DataTable5_10
   \   000000BE   0x7008             STRB     R0,[R1, #+0]
    252                     Rightlastfind=0;
   \   000000C0   0x2000             MOVS     R0,#+0
   \   000000C2   0x.... 0x....      LDR.W    R1,??DataTable6
   \   000000C6   0x7008             STRB     R0,[R1, #+0]
   \   000000C8   0xE291             B.N      ??Normal_1
    253                   }
    254                 }
    255                 
    256                 
    257              }//end if(Leftlastfind==0&&Rightlastfind==0)
    258              
    259          
    260          
    261           
    262           } //end if (Leftlastfind==0 && Rightlastfind==0) 
    263           
    264           
    265           ///////////////////////////////////
    266           else //上次至少找到了一边
    267           {
    268              if(Leftlastfind  ) //上次找到了左线
   \                     ??Normal_0: (+1)
   \   000000CA   0x.... 0x....      LDR.W    R0,??DataTable5_10
   \   000000CE   0x7800             LDRB     R0,[R0, #+0]
   \   000000D0   0x2800             CMP      R0,#+0
   \   000000D2   0xF000 0x8144      BEQ.W    ??Normal_6
    269              {
    270                if(FindNearest(LEFT,Leftlast))		//这次能找到左线
   \   000000D6   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   000000DA   0x7801             LDRB     R1,[R0, #+0]
   \   000000DC   0x2000             MOVS     R0,#+0
   \   000000DE   0x.... 0x....      BL       FindNearest
   \   000000E2   0x2800             CMP      R0,#+0
   \   000000E4   0xF000 0x80EE      BEQ.W    ??Normal_7
    271                {
    272                  Left=RisingEdge[RisingEdgeIndex];
   \   000000E8   0x.... 0x....      LDR.W    R0,??DataTable5_3
   \   000000EC   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   000000F0   0x6809             LDR      R1,[R1, #+0]
   \   000000F2   0x5C08             LDRB     R0,[R1, R0]
   \   000000F4   0x.... 0x....      LDR.W    R1,??DataTable5_8
   \   000000F8   0x6008             STR      R0,[R1, #+0]
    273                  Leftlastfind=1;	
   \   000000FA   0x2001             MOVS     R0,#+1
   \   000000FC   0x.... 0x....      LDR.W    R1,??DataTable5_10
   \   00000100   0x7008             STRB     R0,[R1, #+0]
    274                  if(Rightlastfind==0)//上次没有找到右线
   \   00000102   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000106   0x7800             LDRB     R0,[R0, #+0]
   \   00000108   0x2800             CMP      R0,#+0
   \   0000010A   0xF040 0x8128      BNE.W    ??Normal_6
    275                  { 
    276                    
    277                   if(FallingEdgeCnt)
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000112   0x7800             LDRB     R0,[R0, #+0]
   \   00000114   0x2800             CMP      R0,#+0
   \   00000116   0xF000 0x80A9      BEQ.W    ??Normal_8
    278                   {
    279                     for(FallingEdgeIndex=0;FallingEdgeIndex<FallingEdgeCnt;FallingEdgeIndex++)
   \   0000011A   0x2000             MOVS     R0,#+0
   \   0000011C   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   00000120   0x6008             STR      R0,[R1, #+0]
   \   00000122   0xE006             B.N      ??Normal_9
   \                     ??Normal_10: (+1)
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000128   0x6800             LDR      R0,[R0, #+0]
   \   0000012A   0x1C40             ADDS     R0,R0,#+1
   \   0000012C   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   00000130   0x6008             STR      R0,[R1, #+0]
   \                     ??Normal_9: (+1)
   \   00000132   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000136   0x6800             LDR      R0,[R0, #+0]
   \   00000138   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   0000013C   0x7809             LDRB     R1,[R1, #+0]
   \   0000013E   0x4288             CMP      R0,R1
   \   00000140   0xDA62             BGE.N    ??Normal_11
    280                    {
    281                      rightfind=0;
   \   00000142   0x2000             MOVS     R0,#+0
   \   00000144   0x.... 0x....      LDR.W    R1,??DataTable7
   \   00000148   0x7008             STRB     R0,[R1, #+0]
    282                      if(FallingEdge[FallingEdgeIndex]>Left)
   \   0000014A   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   0000014E   0x6800             LDR      R0,[R0, #+0]
   \   00000150   0x.... 0x....      LDR.W    R1,??DataTable5_4
   \   00000154   0x.... 0x....      LDR.W    R2,??DataTable6_2
   \   00000158   0x6812             LDR      R2,[R2, #+0]
   \   0000015A   0x5C51             LDRB     R1,[R2, R1]
   \   0000015C   0x4288             CMP      R0,R1
   \   0000015E   0xDAE1             BGE.N    ??Normal_10
    283                      {
    284                        tempwidth = FallingEdge[FallingEdgeIndex]-Left;
   \   00000160   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   00000164   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   00000168   0x6809             LDR      R1,[R1, #+0]
   \   0000016A   0x5C08             LDRB     R0,[R1, R0]
   \   0000016C   0x.... 0x....      LDR.W    R1,??DataTable5_8
   \   00000170   0x6809             LDR      R1,[R1, #+0]
   \   00000172   0x1A40             SUBS     R0,R0,R1
    285                        if(ABS(tempwidth-Reference_Width)>=2)      
   \   00000174   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000176   0x.... 0x....      LDR.W    R1,??DataTable8
   \   0000017A   0x6809             LDR      R1,[R1, #+0]
   \   0000017C   0x1A41             SUBS     R1,R0,R1
   \   0000017E   0x2901             CMP      R1,#+1
   \   00000180   0xDB05             BLT.N    ??Normal_12
   \   00000182   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000184   0x.... 0x....      LDR.W    R1,??DataTable8
   \   00000188   0x6809             LDR      R1,[R1, #+0]
   \   0000018A   0x1A41             SUBS     R1,R0,R1
   \   0000018C   0xE005             B.N      ??Normal_13
   \                     ??Normal_12: (+1)
   \   0000018E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000190   0x4241             RSBS     R1,R0,#+0
   \   00000192   0x.... 0x....      LDR.W    R2,??DataTable8
   \   00000196   0x6812             LDR      R2,[R2, #+0]
   \   00000198   0x1A89             SUBS     R1,R1,R2
   \                     ??Normal_13: (+1)
   \   0000019A   0x2902             CMP      R1,#+2
   \   0000019C   0xDB23             BLT.N    ??Normal_14
    286                        {
    287                         if(tempwidth>Reference_Width)   Reference_Width=Reference_Width+1;   //潜在的赛道边线比参考宽度宽,更新参考宽度
   \   0000019E   0x.... 0x....      LDR.W    R1,??DataTable8
   \   000001A2   0x6809             LDR      R1,[R1, #+0]
   \   000001A4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001A6   0x4281             CMP      R1,R0
   \   000001A8   0xDA07             BGE.N    ??Normal_15
   \   000001AA   0x.... 0x....      LDR.W    R0,??DataTable8
   \   000001AE   0x6800             LDR      R0,[R0, #+0]
   \   000001B0   0x1C40             ADDS     R0,R0,#+1
   \   000001B2   0x.... 0x....      LDR.W    R1,??DataTable8
   \   000001B6   0x6008             STR      R0,[R1, #+0]
   \   000001B8   0xE006             B.N      ??Normal_16
    288                         else                         
    289                         {
    290                           Reference_Width=Reference_Width-1;   //潜在的赛道边线比参考宽度窄，更新参考宽度
   \                     ??Normal_15: (+1)
   \   000001BA   0x.... 0x....      LDR.W    R0,??DataTable8
   \   000001BE   0x6800             LDR      R0,[R0, #+0]
   \   000001C0   0x1E40             SUBS     R0,R0,#+1
   \   000001C2   0x.... 0x....      LDR.W    R1,??DataTable8
   \   000001C6   0x6008             STR      R0,[R1, #+0]
    291                           //if(RoadType==0)
    292                           //Reference_Width=Reference_Width-1;
    293                         }
    294                         Right=Left+Reference_Width;
   \                     ??Normal_16: (+1)
   \   000001C8   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   000001CC   0x6800             LDR      R0,[R0, #+0]
   \   000001CE   0x.... 0x....      LDR.W    R1,??DataTable8
   \   000001D2   0x6809             LDR      R1,[R1, #+0]
   \   000001D4   0x1808             ADDS     R0,R1,R0
   \   000001D6   0x.... 0x....      LDR.W    R1,??DataTable5_9
   \   000001DA   0x6008             STR      R0,[R1, #+0]
    295                         Rightlastfind = 0;
   \   000001DC   0x2000             MOVS     R0,#+0
   \   000001DE   0x.... 0x....      LDR.W    R1,??DataTable6
   \   000001E2   0x7008             STRB     R0,[R1, #+0]
   \   000001E4   0xE00C             B.N      ??Normal_17
    296                       }
    297                       else
    298                       {
    299                          Right=FallingEdge[FallingEdgeIndex];
   \                     ??Normal_14: (+1)
   \   000001E6   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   000001EA   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   000001EE   0x6809             LDR      R1,[R1, #+0]
   \   000001F0   0x5C08             LDRB     R0,[R1, R0]
   \   000001F2   0x.... 0x....      LDR.W    R1,??DataTable5_9
   \   000001F6   0x6008             STR      R0,[R1, #+0]
    300                          Rightlastfind=1;
   \   000001F8   0x2001             MOVS     R0,#+1
   \   000001FA   0x.... 0x....      LDR.W    R1,??DataTable6
   \   000001FE   0x7008             STRB     R0,[R1, #+0]
    301                       }
    302                       rightfind=1;  
   \                     ??Normal_17: (+1)
   \   00000200   0x2001             MOVS     R0,#+1
   \   00000202   0x.... 0x....      LDR.W    R1,??DataTable7
   \   00000206   0x7008             STRB     R0,[R1, #+0]
    303                       break;
    304                      }
    305                     
    306                    
    307                    
    308                     }//end for
    309                     
    310                     
    311                    if(rightfind==0)   
   \                     ??Normal_11: (+1)
   \   00000208   0x.... 0x....      LDR.W    R0,??DataTable7
   \   0000020C   0x7800             LDRB     R0,[R0, #+0]
   \   0000020E   0x2800             CMP      R0,#+0
   \   00000210   0xF040 0x80A5      BNE.W    ??Normal_6
    312                    {
    313                      if(CarSpeed>2.5)          //在车模的速度足够块的情况下才这样弄
   \   00000214   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   00000218   0x6800             LDR      R0,[R0, #+0]
   \   0000021A   0x.... 0x....      LDR.W    R1,??DataTable7_2  ;; 0x40200001
   \   0000021E   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000222   0xD818             BHI.N    ??Normal_18
    314                      {
    315                       if(Left+Reference_Width<=118)  //虚拟出来的右边线要往外靠，但是不能靠得太狠了
   \   00000224   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   00000228   0x6800             LDR      R0,[R0, #+0]
   \   0000022A   0x.... 0x....      LDR.W    R1,??DataTable8
   \   0000022E   0x6809             LDR      R1,[R1, #+0]
   \   00000230   0x1808             ADDS     R0,R1,R0
   \   00000232   0x2877             CMP      R0,#+119
   \   00000234   0xDA07             BGE.N    ??Normal_19
    316                       {
    317                        Reference_Width++;
   \   00000236   0x.... 0x....      LDR.W    R0,??DataTable8
   \   0000023A   0x6800             LDR      R0,[R0, #+0]
   \   0000023C   0x1C40             ADDS     R0,R0,#+1
   \   0000023E   0x.... 0x....      LDR.W    R1,??DataTable8
   \   00000242   0x6008             STR      R0,[R1, #+0]
   \   00000244   0xE007             B.N      ??Normal_18
    318                       }
    319                       else 
    320                       {
    321                        Reference_Width=118-Left;
   \                     ??Normal_19: (+1)
   \   00000246   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   0000024A   0x6800             LDR      R0,[R0, #+0]
   \   0000024C   0xF1D0 0x0076      RSBS     R0,R0,#+118
   \   00000250   0x.... 0x....      LDR.W    R1,??DataTable8
   \   00000254   0x6008             STR      R0,[R1, #+0]
    322                       }
    323                      }
    324                      Right=Left+Reference_Width;
   \                     ??Normal_18: (+1)
   \   00000256   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   0000025A   0x6800             LDR      R0,[R0, #+0]
   \   0000025C   0x.... 0x....      LDR.W    R1,??DataTable8
   \   00000260   0x6809             LDR      R1,[R1, #+0]
   \   00000262   0x1808             ADDS     R0,R1,R0
   \   00000264   0x.... 0x....      LDR.W    R1,??DataTable5_9
   \   00000268   0x6008             STR      R0,[R1, #+0]
   \   0000026A   0xE078             B.N      ??Normal_6
    325                    }
    326                   }
    327                   else
    328                   {
    329                     
    330                     if(CarSpeed>2.5)          //在车模的速度足够块的情况下才这样弄
   \                     ??Normal_8: (+1)
   \   0000026C   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   00000270   0x6800             LDR      R0,[R0, #+0]
   \   00000272   0x.... 0x....      LDR.W    R1,??DataTable7_2  ;; 0x40200001
   \   00000276   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000027A   0xD818             BHI.N    ??Normal_20
    331                      {
    332                       if(Left+Reference_Width<=118)  //虚拟出来的右边线要往外靠，但是不能靠得太狠了
   \   0000027C   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   00000280   0x6800             LDR      R0,[R0, #+0]
   \   00000282   0x.... 0x....      LDR.W    R1,??DataTable8
   \   00000286   0x6809             LDR      R1,[R1, #+0]
   \   00000288   0x1808             ADDS     R0,R1,R0
   \   0000028A   0x2877             CMP      R0,#+119
   \   0000028C   0xDA07             BGE.N    ??Normal_21
    333                       {
    334                        Reference_Width++;
   \   0000028E   0x.... 0x....      LDR.W    R0,??DataTable8
   \   00000292   0x6800             LDR      R0,[R0, #+0]
   \   00000294   0x1C40             ADDS     R0,R0,#+1
   \   00000296   0x.... 0x....      LDR.W    R1,??DataTable8
   \   0000029A   0x6008             STR      R0,[R1, #+0]
   \   0000029C   0xE007             B.N      ??Normal_20
    335                       }
    336                       else 
    337                       {
    338                        Reference_Width=118-Left;
   \                     ??Normal_21: (+1)
   \   0000029E   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   000002A2   0x6800             LDR      R0,[R0, #+0]
   \   000002A4   0xF1D0 0x0076      RSBS     R0,R0,#+118
   \   000002A8   0x.... 0x....      LDR.W    R1,??DataTable8
   \   000002AC   0x6008             STR      R0,[R1, #+0]
    339                       }
    340                      }
    341                      Right=Left+Reference_Width;
   \                     ??Normal_20: (+1)
   \   000002AE   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   000002B2   0x6800             LDR      R0,[R0, #+0]
   \   000002B4   0x.... 0x....      LDR.W    R1,??DataTable8
   \   000002B8   0x6809             LDR      R1,[R1, #+0]
   \   000002BA   0x1808             ADDS     R0,R1,R0
   \   000002BC   0x.... 0x....      LDR.W    R1,??DataTable5_9
   \   000002C0   0x6008             STR      R0,[R1, #+0]
   \   000002C2   0xE04C             B.N      ??Normal_6
    342                   }
    343                   
    344                  
    345                  }
    346                
    347                }
    348                else //这次没能找到左线
    349                {
    350                    Leftlastfind=0;
   \                     ??Normal_7: (+1)
   \   000002C4   0x2000             MOVS     R0,#+0
   \   000002C6   0x.... 0x....      LDR.W    R1,??DataTable5_10
   \   000002CA   0x7008             STRB     R0,[R1, #+0]
    351                    if(FindBoundary(LEFT))
   \   000002CC   0x2000             MOVS     R0,#+0
   \   000002CE   0x.... 0x....      BL       FindBoundary
   \   000002D2   0x2800             CMP      R0,#+0
   \   000002D4   0xD034             BEQ.N    ??Normal_22
    352                    {
    353                      if((RisingEdge[RisingEdgeIndex]<Leftlast))//左边界比之前更宽
   \   000002D6   0x.... 0x....      LDR.W    R0,??DataTable5_3
   \   000002DA   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   000002DE   0x6809             LDR      R1,[R1, #+0]
   \   000002E0   0x5C08             LDRB     R0,[R1, R0]
   \   000002E2   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   000002E6   0x7809             LDRB     R1,[R1, #+0]
   \   000002E8   0x4288             CMP      R0,R1
   \   000002EA   0xD20F             BCS.N    ??Normal_23
    354                      {
    355                        if(Rightlastfind==0)
   \   000002EC   0x.... 0x....      LDR.W    R0,??DataTable6
   \   000002F0   0x7800             LDRB     R0,[R0, #+0]
   \   000002F2   0x2800             CMP      R0,#+0
   \   000002F4   0xD133             BNE.N    ??Normal_6
    356                        {
    357                          RoadType=1; 
   \   000002F6   0x2001             MOVS     R0,#+1
   \   000002F8   0x.... 0x....      LDR.W    R1,??DataTable7_3
   \   000002FC   0x7008             STRB     R0,[R1, #+0]
    358                          Character_Distance=Distance; 
   \   000002FE   0x.... 0x....      LDR.W    R0,??DataTable7_4
   \   00000302   0x6800             LDR      R0,[R0, #+0]
   \   00000304   0x.... 0x....      LDR.W    R1,??DataTable7_5
   \   00000308   0x6008             STR      R0,[R1, #+0]
   \   0000030A   0xE028             B.N      ??Normal_6
    359                        }
    360                      }
    361                      else if(RisingEdge[RisingEdgeIndex]<Leftlast+8)//没有找到与上次相邻的边界，但找到的边界比上次更加靠近中心
   \                     ??Normal_23: (+1)
   \   0000030C   0x.... 0x....      LDR.W    R0,??DataTable5_3
   \   00000310   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000314   0x6809             LDR      R1,[R1, #+0]
   \   00000316   0x5C08             LDRB     R0,[R1, R0]
   \   00000318   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   0000031C   0x7809             LDRB     R1,[R1, #+0]
   \   0000031E   0x3108             ADDS     R1,R1,#+8
   \   00000320   0x4288             CMP      R0,R1
   \   00000322   0xDA1C             BGE.N    ??Normal_6
    362                      {
    363                        Left=RisingEdge[RisingEdgeIndex];
   \   00000324   0x.... 0x....      LDR.W    R0,??DataTable5_3
   \   00000328   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   0000032C   0x6809             LDR      R1,[R1, #+0]
   \   0000032E   0x5C08             LDRB     R0,[R1, R0]
   \   00000330   0x.... 0x....      LDR.W    R1,??DataTable5_8
   \   00000334   0x6008             STR      R0,[R1, #+0]
    364                        Leftlastfind=1;   
   \   00000336   0x2001             MOVS     R0,#+1
   \   00000338   0x.... 0x....      LDR.W    R1,??DataTable5_10
   \   0000033C   0x7008             STRB     R0,[R1, #+0]
   \   0000033E   0xE00E             B.N      ??Normal_6
    365                      }
    366          
    367          
    368                    }
    369                    else
    370                    {
    371                      if(Rightlastfind==0 )
   \                     ??Normal_22: (+1)
   \   00000340   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000344   0x7800             LDRB     R0,[R0, #+0]
   \   00000346   0x2800             CMP      R0,#+0
   \   00000348   0xD109             BNE.N    ??Normal_6
    372                      {
    373                        RoadType=1; 
   \   0000034A   0x2001             MOVS     R0,#+1
   \   0000034C   0x.... 0x....      LDR.W    R1,??DataTable7_3
   \   00000350   0x7008             STRB     R0,[R1, #+0]
    374                        Character_Distance=Distance; 
   \   00000352   0x.... 0x....      LDR.W    R0,??DataTable7_4
   \   00000356   0x6800             LDR      R0,[R0, #+0]
   \   00000358   0x.... 0x....      LDR.W    R1,??DataTable7_5
   \   0000035C   0x6008             STR      R0,[R1, #+0]
    375                      }
    376                    }
    377          
    378                }
    379              }
    380              
    381              if(Rightlastfind ) //上次找到了右边线
   \                     ??Normal_6: (+1)
   \   0000035E   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000362   0x7800             LDRB     R0,[R0, #+0]
   \   00000364   0x2800             CMP      R0,#+0
   \   00000366   0xF000 0x8128      BEQ.W    ??Normal_24
    382              {
    383                 if(FindNearest(RIGHT,Rightlast))	//这次能找到右线
   \   0000036A   0x.... 0x....      LDR.W    R0,??DataTable7_6
   \   0000036E   0x7801             LDRB     R1,[R0, #+0]
   \   00000370   0x2001             MOVS     R0,#+1
   \   00000372   0x.... 0x....      BL       FindNearest
   \   00000376   0x2800             CMP      R0,#+0
   \   00000378   0xF000 0x80D8      BEQ.W    ??Normal_25
    384                 {
    385                    Right=FallingEdge[FallingEdgeIndex];
   \   0000037C   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   00000380   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   00000384   0x6809             LDR      R1,[R1, #+0]
   \   00000386   0x5C08             LDRB     R0,[R1, R0]
   \   00000388   0x.... 0x....      LDR.W    R1,??DataTable5_9
   \   0000038C   0x6008             STR      R0,[R1, #+0]
    386                    Rightlastfind=1;
   \   0000038E   0x2001             MOVS     R0,#+1
   \   00000390   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000394   0x7008             STRB     R0,[R1, #+0]
    387                    if(Leftlastfind==0)  //上次没有找到左线
   \   00000396   0x.... 0x....      LDR.W    R0,??DataTable5_10
   \   0000039A   0x7800             LDRB     R0,[R0, #+0]
   \   0000039C   0x2800             CMP      R0,#+0
   \   0000039E   0xF040 0x810C      BNE.W    ??Normal_24
    388                    {
    389                       if(RisingEdgeCnt>0)
   \   000003A2   0x....             LDR.N    R0,??DataTable5_1
   \   000003A4   0x7800             LDRB     R0,[R0, #+0]
   \   000003A6   0x2800             CMP      R0,#+0
   \   000003A8   0xF000 0x8099      BEQ.W    ??Normal_26
    390                       {  
    391                          for(RisingEdgeIndex=RisingEdgeCnt-1;RisingEdgeIndex>=0;RisingEdgeIndex--)
   \   000003AC   0x....             LDR.N    R0,??DataTable5_1
   \   000003AE   0x7800             LDRB     R0,[R0, #+0]
   \   000003B0   0x1E40             SUBS     R0,R0,#+1
   \   000003B2   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   000003B6   0x6008             STR      R0,[R1, #+0]
   \   000003B8   0xE006             B.N      ??Normal_27
   \                     ??Normal_28: (+1)
   \   000003BA   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   000003BE   0x6800             LDR      R0,[R0, #+0]
   \   000003C0   0x1E40             SUBS     R0,R0,#+1
   \   000003C2   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   000003C6   0x6008             STR      R0,[R1, #+0]
   \                     ??Normal_27: (+1)
   \   000003C8   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   000003CC   0x6800             LDR      R0,[R0, #+0]
   \   000003CE   0x2800             CMP      R0,#+0
   \   000003D0   0xD458             BMI.N    ??Normal_29
    392                          {
    393                              leftfind=0;
   \   000003D2   0x2000             MOVS     R0,#+0
   \   000003D4   0x.... 0x....      LDR.W    R1,??DataTable7_7
   \   000003D8   0x7008             STRB     R0,[R1, #+0]
    394                              if(RisingEdge[RisingEdgeIndex]<Right) //找到潜在边线
   \   000003DA   0x....             LDR.N    R0,??DataTable5_3
   \   000003DC   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   000003E0   0x6809             LDR      R1,[R1, #+0]
   \   000003E2   0x5C08             LDRB     R0,[R1, R0]
   \   000003E4   0x....             LDR.N    R1,??DataTable5_9
   \   000003E6   0x6809             LDR      R1,[R1, #+0]
   \   000003E8   0x4288             CMP      R0,R1
   \   000003EA   0xDAE6             BGE.N    ??Normal_28
    395                              {
    396                                  tempwidth = Right-RisingEdge[RisingEdgeIndex];
   \   000003EC   0x....             LDR.N    R0,??DataTable5_9
   \   000003EE   0x6800             LDR      R0,[R0, #+0]
   \   000003F0   0x....             LDR.N    R1,??DataTable5_3
   \   000003F2   0x.... 0x....      LDR.W    R2,??DataTable6_1
   \   000003F6   0x6812             LDR      R2,[R2, #+0]
   \   000003F8   0x5C51             LDRB     R1,[R2, R1]
   \   000003FA   0x1A40             SUBS     R0,R0,R1
    397                                  if (ABS(tempwidth-Reference_Width)>=2)       
   \   000003FC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000003FE   0x.... 0x....      LDR.W    R1,??DataTable8
   \   00000402   0x6809             LDR      R1,[R1, #+0]
   \   00000404   0x1A41             SUBS     R1,R0,R1
   \   00000406   0x2901             CMP      R1,#+1
   \   00000408   0xDB05             BLT.N    ??Normal_30
   \   0000040A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000040C   0x.... 0x....      LDR.W    R1,??DataTable8
   \   00000410   0x6809             LDR      R1,[R1, #+0]
   \   00000412   0x1A41             SUBS     R1,R0,R1
   \   00000414   0xE005             B.N      ??Normal_31
   \                     ??Normal_30: (+1)
   \   00000416   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000418   0x4241             RSBS     R1,R0,#+0
   \   0000041A   0x.... 0x....      LDR.W    R2,??DataTable8
   \   0000041E   0x6812             LDR      R2,[R2, #+0]
   \   00000420   0x1A89             SUBS     R1,R1,R2
   \                     ??Normal_31: (+1)
   \   00000422   0x2902             CMP      R1,#+2
   \   00000424   0xDB20             BLT.N    ??Normal_32
    398                                  {
    399                                    if(tempwidth>Reference_Width)   Reference_Width=Reference_Width+1; 
   \   00000426   0x.... 0x....      LDR.W    R1,??DataTable8
   \   0000042A   0x6809             LDR      R1,[R1, #+0]
   \   0000042C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000042E   0x4281             CMP      R1,R0
   \   00000430   0xDA07             BGE.N    ??Normal_33
   \   00000432   0x.... 0x....      LDR.W    R0,??DataTable8
   \   00000436   0x6800             LDR      R0,[R0, #+0]
   \   00000438   0x1C40             ADDS     R0,R0,#+1
   \   0000043A   0x.... 0x....      LDR.W    R1,??DataTable8
   \   0000043E   0x6008             STR      R0,[R1, #+0]
   \   00000440   0xE006             B.N      ??Normal_34
    400                                    else
    401                                    {
    402                                        Reference_Width=Reference_Width-1;
   \                     ??Normal_33: (+1)
   \   00000442   0x.... 0x....      LDR.W    R0,??DataTable8
   \   00000446   0x6800             LDR      R0,[R0, #+0]
   \   00000448   0x1E40             SUBS     R0,R0,#+1
   \   0000044A   0x.... 0x....      LDR.W    R1,??DataTable8
   \   0000044E   0x6008             STR      R0,[R1, #+0]
    403                                       
    404                                    }
    405                                    Left=Right-Reference_Width;
   \                     ??Normal_34: (+1)
   \   00000450   0x....             LDR.N    R0,??DataTable5_9
   \   00000452   0x6800             LDR      R0,[R0, #+0]
   \   00000454   0x.... 0x....      LDR.W    R1,??DataTable8
   \   00000458   0x6809             LDR      R1,[R1, #+0]
   \   0000045A   0x1A40             SUBS     R0,R0,R1
   \   0000045C   0x....             LDR.N    R1,??DataTable5_8
   \   0000045E   0x6008             STR      R0,[R1, #+0]
    406                                    Leftlastfind = 0;
   \   00000460   0x2000             MOVS     R0,#+0
   \   00000462   0x....             LDR.N    R1,??DataTable5_10
   \   00000464   0x7008             STRB     R0,[R1, #+0]
   \   00000466   0xE009             B.N      ??Normal_35
    407                                      
    408                                  }
    409                                  else
    410                                  {
    411                                    Left=RisingEdge[RisingEdgeIndex];
   \                     ??Normal_32: (+1)
   \   00000468   0x....             LDR.N    R0,??DataTable5_3
   \   0000046A   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   0000046E   0x6809             LDR      R1,[R1, #+0]
   \   00000470   0x5C08             LDRB     R0,[R1, R0]
   \   00000472   0x....             LDR.N    R1,??DataTable5_8
   \   00000474   0x6008             STR      R0,[R1, #+0]
    412                                    Leftlastfind=1;
   \   00000476   0x2001             MOVS     R0,#+1
   \   00000478   0x....             LDR.N    R1,??DataTable5_10
   \   0000047A   0x7008             STRB     R0,[R1, #+0]
    413                                  }
    414                                  leftfind=1;
   \                     ??Normal_35: (+1)
   \   0000047C   0x2001             MOVS     R0,#+1
   \   0000047E   0x.... 0x....      LDR.W    R1,??DataTable7_7
   \   00000482   0x7008             STRB     R0,[R1, #+0]
    415                                  break;
    416                              
    417                              }
    418                          
    419                          }//end for
    420                          if(leftfind==0)   //虽然说有上升沿，但是该上升沿无效
   \                     ??Normal_29: (+1)
   \   00000484   0x.... 0x....      LDR.W    R0,??DataTable7_7
   \   00000488   0x7800             LDRB     R0,[R0, #+0]
   \   0000048A   0x2800             CMP      R0,#+0
   \   0000048C   0xF040 0x8095      BNE.W    ??Normal_24
    421                          {
    422                              if(CarSpeed>2.5)              //速度限制，防止出线
   \   00000490   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   00000494   0x6800             LDR      R0,[R0, #+0]
   \   00000496   0x.... 0x....      LDR.W    R1,??DataTable7_2  ;; 0x40200001
   \   0000049A   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000049E   0xD815             BHI.N    ??Normal_36
    423                              {
    424                               if(Right-Reference_Width>=10)  //虚拟出来的右边线要往外靠，但是不能靠得太狠了
   \   000004A0   0x....             LDR.N    R0,??DataTable5_9
   \   000004A2   0x6800             LDR      R0,[R0, #+0]
   \   000004A4   0x.... 0x....      LDR.W    R1,??DataTable8
   \   000004A8   0x6809             LDR      R1,[R1, #+0]
   \   000004AA   0x1A40             SUBS     R0,R0,R1
   \   000004AC   0x280A             CMP      R0,#+10
   \   000004AE   0xDB07             BLT.N    ??Normal_37
    425                               {
    426                                  Reference_Width++;
   \   000004B0   0x.... 0x....      LDR.W    R0,??DataTable8
   \   000004B4   0x6800             LDR      R0,[R0, #+0]
   \   000004B6   0x1C40             ADDS     R0,R0,#+1
   \   000004B8   0x.... 0x....      LDR.W    R1,??DataTable8
   \   000004BC   0x6008             STR      R0,[R1, #+0]
   \   000004BE   0xE005             B.N      ??Normal_36
    427                               }
    428                               else 
    429                               {
    430                                  Reference_Width=Right-10;
   \                     ??Normal_37: (+1)
   \   000004C0   0x....             LDR.N    R0,??DataTable5_9
   \   000004C2   0x6800             LDR      R0,[R0, #+0]
   \   000004C4   0x380A             SUBS     R0,R0,#+10
   \   000004C6   0x.... 0x....      LDR.W    R1,??DataTable8
   \   000004CA   0x6008             STR      R0,[R1, #+0]
    431                               } 
    432                              }
    433                             Left=Right-Reference_Width;
   \                     ??Normal_36: (+1)
   \   000004CC   0x....             LDR.N    R0,??DataTable5_9
   \   000004CE   0x6800             LDR      R0,[R0, #+0]
   \   000004D0   0x.... 0x....      LDR.W    R1,??DataTable8
   \   000004D4   0x6809             LDR      R1,[R1, #+0]
   \   000004D6   0x1A40             SUBS     R0,R0,R1
   \   000004D8   0x....             LDR.N    R1,??DataTable5_8
   \   000004DA   0x6008             STR      R0,[R1, #+0]
   \   000004DC   0xE06D             B.N      ??Normal_24
    434                          }
    435          
    436                       }
    437                       else
    438                       {
    439                         
    440                          if(CarSpeed>2.5)              //速度限制，防止出线
   \                     ??Normal_26: (+1)
   \   000004DE   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   000004E2   0x6800             LDR      R0,[R0, #+0]
   \   000004E4   0x.... 0x....      LDR.W    R1,??DataTable7_2  ;; 0x40200001
   \   000004E8   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000004EC   0xD815             BHI.N    ??Normal_38
    441                          {
    442                           if(Right-Reference_Width>=10)  //虚拟出来的右边线要往外靠，但是不能靠得太狠了
   \   000004EE   0x....             LDR.N    R0,??DataTable5_9
   \   000004F0   0x6800             LDR      R0,[R0, #+0]
   \   000004F2   0x.... 0x....      LDR.W    R1,??DataTable8
   \   000004F6   0x6809             LDR      R1,[R1, #+0]
   \   000004F8   0x1A40             SUBS     R0,R0,R1
   \   000004FA   0x280A             CMP      R0,#+10
   \   000004FC   0xDB07             BLT.N    ??Normal_39
    443                           {
    444                              Reference_Width++;
   \   000004FE   0x.... 0x....      LDR.W    R0,??DataTable8
   \   00000502   0x6800             LDR      R0,[R0, #+0]
   \   00000504   0x1C40             ADDS     R0,R0,#+1
   \   00000506   0x.... 0x....      LDR.W    R1,??DataTable8
   \   0000050A   0x6008             STR      R0,[R1, #+0]
   \   0000050C   0xE005             B.N      ??Normal_38
    445                           }
    446                           else 
    447                           {
    448                              Reference_Width=Right-10;
   \                     ??Normal_39: (+1)
   \   0000050E   0x....             LDR.N    R0,??DataTable5_9
   \   00000510   0x6800             LDR      R0,[R0, #+0]
   \   00000512   0x380A             SUBS     R0,R0,#+10
   \   00000514   0x.... 0x....      LDR.W    R1,??DataTable8
   \   00000518   0x6008             STR      R0,[R1, #+0]
    449                           } 
    450                          }
    451                          Left=Right-Reference_Width;
   \                     ??Normal_38: (+1)
   \   0000051A   0x....             LDR.N    R0,??DataTable5_9
   \   0000051C   0x6800             LDR      R0,[R0, #+0]
   \   0000051E   0x.... 0x....      LDR.W    R1,??DataTable8
   \   00000522   0x6809             LDR      R1,[R1, #+0]
   \   00000524   0x1A40             SUBS     R0,R0,R1
   \   00000526   0x....             LDR.N    R1,??DataTable5_8
   \   00000528   0x6008             STR      R0,[R1, #+0]
   \   0000052A   0xE046             B.N      ??Normal_24
    452                       }
    453                    
    454                    }
    455                 
    456                 }
    457                 else//未能找到邻近的边线
    458                 {
    459                     Rightlastfind=0; 
   \                     ??Normal_25: (+1)
   \   0000052C   0x2000             MOVS     R0,#+0
   \   0000052E   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000532   0x7008             STRB     R0,[R1, #+0]
    460                     if(FindBoundary(RIGHT)) 
   \   00000534   0x2001             MOVS     R0,#+1
   \   00000536   0x.... 0x....      BL       FindBoundary
   \   0000053A   0x2800             CMP      R0,#+0
   \   0000053C   0xD02F             BEQ.N    ??Normal_40
    461                     {
    462                       
    463                       if(FallingEdge[FallingEdgeIndex]>Rightlast)
   \   0000053E   0x.... 0x....      LDR.W    R0,??DataTable7_6
   \   00000542   0x7800             LDRB     R0,[R0, #+0]
   \   00000544   0x....             LDR.N    R1,??DataTable5_4
   \   00000546   0x.... 0x....      LDR.W    R2,??DataTable6_2
   \   0000054A   0x6812             LDR      R2,[R2, #+0]
   \   0000054C   0x5C51             LDRB     R1,[R2, R1]
   \   0000054E   0x4288             CMP      R0,R1
   \   00000550   0xD20E             BCS.N    ??Normal_41
    464                       {
    465                         if(Leftlastfind==0)
   \   00000552   0x....             LDR.N    R0,??DataTable5_10
   \   00000554   0x7800             LDRB     R0,[R0, #+0]
   \   00000556   0x2800             CMP      R0,#+0
   \   00000558   0xD12F             BNE.N    ??Normal_24
    466                         {
    467                            RoadType=1; 
   \   0000055A   0x2001             MOVS     R0,#+1
   \   0000055C   0x.... 0x....      LDR.W    R1,??DataTable7_3
   \   00000560   0x7008             STRB     R0,[R1, #+0]
    468                            Character_Distance=Distance;
   \   00000562   0x.... 0x....      LDR.W    R0,??DataTable7_4
   \   00000566   0x6800             LDR      R0,[R0, #+0]
   \   00000568   0x.... 0x....      LDR.W    R1,??DataTable7_5
   \   0000056C   0x6008             STR      R0,[R1, #+0]
   \   0000056E   0xE024             B.N      ??Normal_24
    469                         }
    470                       
    471                       }
    472                       else if(FallingEdge[FallingEdgeIndex]>Rightlast-8)
   \                     ??Normal_41: (+1)
   \   00000570   0x.... 0x....      LDR.W    R0,??DataTable7_6
   \   00000574   0x7800             LDRB     R0,[R0, #+0]
   \   00000576   0x3808             SUBS     R0,R0,#+8
   \   00000578   0x....             LDR.N    R1,??DataTable5_4
   \   0000057A   0x.... 0x....      LDR.W    R2,??DataTable6_2
   \   0000057E   0x6812             LDR      R2,[R2, #+0]
   \   00000580   0x5C51             LDRB     R1,[R2, R1]
   \   00000582   0x4288             CMP      R0,R1
   \   00000584   0xDA19             BGE.N    ??Normal_24
    473                       {
    474                          Right=FallingEdge[FallingEdgeIndex];
   \   00000586   0x....             LDR.N    R0,??DataTable5_4
   \   00000588   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   0000058C   0x6809             LDR      R1,[R1, #+0]
   \   0000058E   0x5C08             LDRB     R0,[R1, R0]
   \   00000590   0x....             LDR.N    R1,??DataTable5_9
   \   00000592   0x6008             STR      R0,[R1, #+0]
    475                          Rightlastfind=1;
   \   00000594   0x2001             MOVS     R0,#+1
   \   00000596   0x.... 0x....      LDR.W    R1,??DataTable6
   \   0000059A   0x7008             STRB     R0,[R1, #+0]
   \   0000059C   0xE00D             B.N      ??Normal_24
    476                       }
    477          
    478                     
    479                     }
    480                     
    481                     else
    482                     {
    483                       if(Leftlastfind==0)
   \                     ??Normal_40: (+1)
   \   0000059E   0x....             LDR.N    R0,??DataTable5_10
   \   000005A0   0x7800             LDRB     R0,[R0, #+0]
   \   000005A2   0x2800             CMP      R0,#+0
   \   000005A4   0xD109             BNE.N    ??Normal_24
    484                       {
    485                          RoadType=1; 
   \   000005A6   0x2001             MOVS     R0,#+1
   \   000005A8   0x.... 0x....      LDR.W    R1,??DataTable7_3
   \   000005AC   0x7008             STRB     R0,[R1, #+0]
    486                          Character_Distance=Distance;
   \   000005AE   0x.... 0x....      LDR.W    R0,??DataTable7_4
   \   000005B2   0x6800             LDR      R0,[R0, #+0]
   \   000005B4   0x.... 0x....      LDR.W    R1,??DataTable7_5
   \   000005B8   0x6008             STR      R0,[R1, #+0]
    487                       }
    488                     
    489                     }
    490                    
    491                 }
    492              
    493              
    494              }
    495              if(Rightlastfind&&Leftlastfind)
   \                     ??Normal_24: (+1)
   \   000005BA   0x.... 0x....      LDR.W    R0,??DataTable6
   \   000005BE   0x7800             LDRB     R0,[R0, #+0]
   \   000005C0   0x2800             CMP      R0,#+0
   \   000005C2   0xD014             BEQ.N    ??Normal_1
   \   000005C4   0x....             LDR.N    R0,??DataTable5_10
   \   000005C6   0x7800             LDRB     R0,[R0, #+0]
   \   000005C8   0x2800             CMP      R0,#+0
   \   000005CA   0xD010             BEQ.N    ??Normal_1
    496              {
    497          
    498               Reference_Width=Right-Left; 
   \   000005CC   0x....             LDR.N    R0,??DataTable5_9
   \   000005CE   0x6800             LDR      R0,[R0, #+0]
   \   000005D0   0x....             LDR.N    R1,??DataTable5_8
   \   000005D2   0x6809             LDR      R1,[R1, #+0]
   \   000005D4   0x1A40             SUBS     R0,R0,R1
   \   000005D6   0x.... 0x....      LDR.W    R1,??DataTable8
   \   000005DA   0x6008             STR      R0,[R1, #+0]
    499               if(Reference_Width<35)Reference_Width=35;
   \   000005DC   0x.... 0x....      LDR.W    R0,??DataTable8
   \   000005E0   0x6800             LDR      R0,[R0, #+0]
   \   000005E2   0x2823             CMP      R0,#+35
   \   000005E4   0xDA03             BGE.N    ??Normal_1
   \   000005E6   0x2023             MOVS     R0,#+35
   \   000005E8   0x.... 0x....      LDR.W    R1,??DataTable8
   \   000005EC   0x6008             STR      R0,[R1, #+0]
    500              }
    501           
    502           }
    503          
    504          }
   \                     ??Normal_1: (+1)
   \   000005EE   0xBD01             POP      {R0,PC}          ;; return
    505          
    506          
    507          /*****
    508          * 计算赛道的亮度
    509          ****/

   \                                 In section .text, align 2, keep-with-next
    510          void Brightness_Calculate(void)
    511          {
   \                     Brightness_Calculate: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    512          
    513            uint8 i;
    514            uint32 tempi=0;
   \   00000002   0x2000             MOVS     R0,#+0
    515            float tempf=0;
   \   00000004   0x2600             MOVS     R6,#+0
    516            for(i=Left;i<=Right;i++)
   \   00000006   0x....             LDR.N    R1,??DataTable5_8
   \   00000008   0x6809             LDR      R1,[R1, #+0]
   \   0000000A   0xE006             B.N      ??Brightness_Calculate_0
    517            {
    518              tempi+=CCD_Buff[i];
   \                     ??Brightness_Calculate_1: (+1)
   \   0000000C   0x....             LDR.N    R2,??DataTable5_6
   \   0000000E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000010   0xF832 0x2011      LDRH     R2,[R2, R1, LSL #+1]
   \   00000014   0xFA10 0xF082      UXTAH    R0,R0,R2
    519            }
   \   00000018   0x1C49             ADDS     R1,R1,#+1
   \                     ??Brightness_Calculate_0: (+1)
   \   0000001A   0x....             LDR.N    R2,??DataTable5_9
   \   0000001C   0x6812             LDR      R2,[R2, #+0]
   \   0000001E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000020   0x428A             CMP      R2,R1
   \   00000022   0xDAF3             BGE.N    ??Brightness_Calculate_1
    520            tempf=tempi*1.0/(Right-Left);
   \   00000024   0x.... 0x....      BL       __aeabi_ui2d
   \   00000028   0x2200             MOVS     R2,#+0
   \   0000002A   0x.... 0x....      LDR.W    R3,??DataTable9  ;; 0x3ff00000
   \   0000002E   0x.... 0x....      BL       __aeabi_dmul
   \   00000032   0x0004             MOVS     R4,R0
   \   00000034   0x000D             MOVS     R5,R1
   \   00000036   0x....             LDR.N    R0,??DataTable5_9
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x....             LDR.N    R1,??DataTable5_8
   \   0000003C   0x6809             LDR      R1,[R1, #+0]
   \   0000003E   0x1A40             SUBS     R0,R0,R1
   \   00000040   0x.... 0x....      BL       __aeabi_i2d
   \   00000044   0x0002             MOVS     R2,R0
   \   00000046   0x000B             MOVS     R3,R1
   \   00000048   0x0020             MOVS     R0,R4
   \   0000004A   0x0029             MOVS     R1,R5
   \   0000004C   0x.... 0x....      BL       __aeabi_ddiv
   \   00000050   0x.... 0x....      BL       __aeabi_d2f
   \   00000054   0x0006             MOVS     R6,R0
    521            
    522            tempf=tempf*(Max_Value-CCD_Offset)/127.0+CCD_Offset;
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   0000005A   0x8800             LDRH     R0,[R0, #+0]
   \   0000005C   0x.... 0x....      LDR.W    R1,??DataTable9_2
   \   00000060   0x7809             LDRB     R1,[R1, #+0]
   \   00000062   0x1A40             SUBS     R0,R0,R1
   \   00000064   0x.... 0x....      BL       __aeabi_i2f
   \   00000068   0x0031             MOVS     R1,R6
   \   0000006A   0x.... 0x....      BL       __aeabi_fmul
   \   0000006E   0x.... 0x....      BL       __aeabi_f2d
   \   00000072   0x2200             MOVS     R2,#+0
   \   00000074   0x.... 0x....      LDR.W    R3,??DataTable9_3  ;; 0x405fc000
   \   00000078   0x.... 0x....      BL       __aeabi_ddiv
   \   0000007C   0x0004             MOVS     R4,R0
   \   0000007E   0x000D             MOVS     R5,R1
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable9_2
   \   00000084   0x7800             LDRB     R0,[R0, #+0]
   \   00000086   0x.... 0x....      BL       __aeabi_ui2d
   \   0000008A   0x0022             MOVS     R2,R4
   \   0000008C   0x002B             MOVS     R3,R5
   \   0000008E   0x.... 0x....      BL       __aeabi_dadd
   \   00000092   0x.... 0x....      BL       __aeabi_d2f
   \   00000096   0x0006             MOVS     R6,R0
    523            Brightness=(int)(Brightness*0.95+tempf*0.05);
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable9_4
   \   0000009C   0x8800             LDRH     R0,[R0, #+0]
   \   0000009E   0x.... 0x....      BL       __aeabi_ui2d
   \   000000A2   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   000000A6   0x.... 0x....      LDR.W    R3,??DataTable9_5  ;; 0x3fee6666
   \   000000AA   0x.... 0x....      BL       __aeabi_dmul
   \   000000AE   0x0004             MOVS     R4,R0
   \   000000B0   0x000D             MOVS     R5,R1
   \   000000B2   0x0030             MOVS     R0,R6
   \   000000B4   0x.... 0x....      BL       __aeabi_f2d
   \   000000B8   0x.... 0x....      LDR.W    R2,??DataTable9_6  ;; 0x9999999a
   \   000000BC   0x.... 0x....      LDR.W    R3,??DataTable9_7  ;; 0x3fa99999
   \   000000C0   0x.... 0x....      BL       __aeabi_dmul
   \   000000C4   0x0022             MOVS     R2,R4
   \   000000C6   0x002B             MOVS     R3,R5
   \   000000C8   0x.... 0x....      BL       __aeabi_dadd
   \   000000CC   0x.... 0x....      BL       __aeabi_d2iz
   \   000000D0   0x.... 0x....      LDR.W    R1,??DataTable9_4
   \   000000D4   0x8008             STRH     R0,[R1, #+0]
    524            CCD_Draw_Buff[140]=BYTE0(Brightness);
   \   000000D6   0x.... 0x....      LDR.W    R0,??DataTable9_4
   \   000000DA   0x7800             LDRB     R0,[R0, #+0]
   \   000000DC   0x.... 0x....      LDR.W    R1,??DataTable12
   \   000000E0   0xF881 0x008C      STRB     R0,[R1, #+140]
    525            CCD_Draw_Buff[141]=BYTE1(Brightness);
   \   000000E4   0x.... 0x....      LDR.W    R0,??DataTable9_4
   \   000000E8   0x7840             LDRB     R0,[R0, #+1]
   \   000000EA   0x.... 0x....      LDR.W    R1,??DataTable12
   \   000000EE   0xF881 0x008D      STRB     R0,[R1, #+141]
    526          
    527          
    528          
    529          }
   \   000000F2   0xBD70             POP      {R4-R6,PC}       ;; return
    530          /****
    531          **斜入十字处理
    532          ****/
    533          

   \                                 In section .text, align 2, keep-with-next
    534          void Is_CrossRoad(void)
    535          {
    536             static int Width_Change_Cnt_L;
    537             static int Pre_Width_Out_L,Pre_Width_All_L;
    538             int Width_Out_L,Line_Out_L,Width_All_L;
    539            
    540             static int Width_Change_Cnt_R;
    541             static int Pre_Width_Out_R,Pre_Width_All_R;        
    542             int Width_Out_R,Line_Out_R,Width_All_R;
    543             
    544             static uint8 All_Find=0;
    545            
    546            if(Leftlastfind && Rightlastfind) // 两条边线均找到
   \                     Is_CrossRoad: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable9_8
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xF000 0x80A6      BEQ.W    ??Is_CrossRoad_0
   \   0000000C   0x....             LDR.N    R0,??DataTable6
   \   0000000E   0x7800             LDRB     R0,[R0, #+0]
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xF000 0x80A1      BEQ.W    ??Is_CrossRoad_0
    547            {
    548              if(RisingEdgeIndex<RisingEdgeCnt-1)
   \   00000016   0x....             LDR.N    R0,??DataTable6_1
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable9_9
   \   0000001E   0x7809             LDRB     R1,[R1, #+0]
   \   00000020   0x1E49             SUBS     R1,R1,#+1
   \   00000022   0x4288             CMP      R0,R1
   \   00000024   0xDA44             BGE.N    ??Is_CrossRoad_1
    549              {
    550                Line_Out_R=RisingEdge[RisingEdgeIndex+1];
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable9_10
   \   0000002A   0x....             LDR.N    R1,??DataTable6_1
   \   0000002C   0x6809             LDR      R1,[R1, #+0]
   \   0000002E   0x1808             ADDS     R0,R1,R0
   \   00000030   0x7841             LDRB     R1,[R0, #+1]
    551                Width_Out_R=Line_Out_R-Right;
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable9_11
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0x1A08             SUBS     R0,R1,R0
    552                Width_All_R=Line_Out_R-Left;
   \   0000003A   0x.... 0x....      LDR.W    R2,??DataTable9_12
   \   0000003E   0x6812             LDR      R2,[R2, #+0]
   \   00000040   0x1A89             SUBS     R1,R1,R2
    553                if(Width_Out_R<6)
   \   00000042   0x2806             CMP      R0,#+6
   \   00000044   0xDA15             BGE.N    ??Is_CrossRoad_2
    554                {
    555                  if(RisingEdgeIndex<RisingEdgeCnt-2)
   \   00000046   0x....             LDR.N    R2,??DataTable6_1
   \   00000048   0x6812             LDR      R2,[R2, #+0]
   \   0000004A   0x.... 0x....      LDR.W    R3,??DataTable9_9
   \   0000004E   0x781B             LDRB     R3,[R3, #+0]
   \   00000050   0x1E9B             SUBS     R3,R3,#+2
   \   00000052   0x429A             CMP      R2,R3
   \   00000054   0xDA0D             BGE.N    ??Is_CrossRoad_2
    556                  {
    557                    Line_Out_R=RisingEdge[RisingEdgeIndex+2];
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable9_10
   \   0000005A   0x....             LDR.N    R1,??DataTable6_1
   \   0000005C   0x6809             LDR      R1,[R1, #+0]
   \   0000005E   0x1808             ADDS     R0,R1,R0
   \   00000060   0x7881             LDRB     R1,[R0, #+2]
    558                    Width_Out_R=Line_Out_R-Right;
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable9_11
   \   00000066   0x6800             LDR      R0,[R0, #+0]
   \   00000068   0x1A08             SUBS     R0,R1,R0
    559                    Width_All_R=Line_Out_R-Left;
   \   0000006A   0x.... 0x....      LDR.W    R2,??DataTable9_12
   \   0000006E   0x6812             LDR      R2,[R2, #+0]
   \   00000070   0x1A89             SUBS     R1,R1,R2
    560                  }
    561                
    562                }
    563                if(Width_Out_R>8)
   \                     ??Is_CrossRoad_2: (+1)
   \   00000072   0x2809             CMP      R0,#+9
   \   00000074   0xDB15             BLT.N    ??Is_CrossRoad_3
    564                {
    565                  if((Pre_Width_Out_R>Width_Out_R)&&(Width_All_R<=Pre_Width_All_R))
   \   00000076   0x.... 0x....      LDR.W    R2,??DataTable9_13
   \   0000007A   0x6812             LDR      R2,[R2, #+0]
   \   0000007C   0x4290             CMP      R0,R2
   \   0000007E   0xDA0C             BGE.N    ??Is_CrossRoad_4
   \   00000080   0x.... 0x....      LDR.W    R2,??DataTable9_14
   \   00000084   0x6812             LDR      R2,[R2, #+0]
   \   00000086   0x428A             CMP      R2,R1
   \   00000088   0xDB07             BLT.N    ??Is_CrossRoad_4
    566                  {
    567                    Width_Change_Cnt_R++;
   \   0000008A   0x.... 0x....      LDR.W    R2,??DataTable10
   \   0000008E   0x6812             LDR      R2,[R2, #+0]
   \   00000090   0x1C52             ADDS     R2,R2,#+1
   \   00000092   0x.... 0x....      LDR.W    R3,??DataTable10
   \   00000096   0x601A             STR      R2,[R3, #+0]
   \   00000098   0xE003             B.N      ??Is_CrossRoad_3
    568                  }
    569                  else Width_Change_Cnt_R=0;
   \                     ??Is_CrossRoad_4: (+1)
   \   0000009A   0x2200             MOVS     R2,#+0
   \   0000009C   0x.... 0x....      LDR.W    R3,??DataTable10
   \   000000A0   0x601A             STR      R2,[R3, #+0]
    570                
    571                }
    572                Pre_Width_Out_R=Width_Out_R;
   \                     ??Is_CrossRoad_3: (+1)
   \   000000A2   0x.... 0x....      LDR.W    R2,??DataTable9_13
   \   000000A6   0x6010             STR      R0,[R2, #+0]
    573                Pre_Width_All_R=Width_All_R;
   \   000000A8   0x.... 0x....      LDR.W    R0,??DataTable9_14
   \   000000AC   0x6001             STR      R1,[R0, #+0]
   \   000000AE   0xE003             B.N      ??Is_CrossRoad_5
    574              
    575              }
    576              else
    577              {
    578                  Width_Change_Cnt_R=0;
   \                     ??Is_CrossRoad_1: (+1)
   \   000000B0   0x2000             MOVS     R0,#+0
   \   000000B2   0x.... 0x....      LDR.W    R1,??DataTable10
   \   000000B6   0x6008             STR      R0,[R1, #+0]
    579              
    580              }
    581              
    582              
    583              
    584              if(FallingEdgeIndex>=1)
   \                     ??Is_CrossRoad_5: (+1)
   \   000000B8   0x....             LDR.N    R0,??DataTable6_2
   \   000000BA   0x6800             LDR      R0,[R0, #+0]
   \   000000BC   0x2801             CMP      R0,#+1
   \   000000BE   0xDB42             BLT.N    ??Is_CrossRoad_6
    585              {
    586                Line_Out_L=FallingEdge[FallingEdgeIndex-1];
   \   000000C0   0x.... 0x....      LDR.W    R0,??DataTable9_15
   \   000000C4   0x....             LDR.N    R1,??DataTable6_2
   \   000000C6   0x6809             LDR      R1,[R1, #+0]
   \   000000C8   0x1808             ADDS     R0,R1,R0
   \   000000CA   0xF810 0x1C01      LDRB     R1,[R0, #-1]
    587                Width_Out_L=Left-Line_Out_L;
   \   000000CE   0x.... 0x....      LDR.W    R0,??DataTable9_12
   \   000000D2   0x6800             LDR      R0,[R0, #+0]
   \   000000D4   0x1A40             SUBS     R0,R0,R1
    588                Width_All_L=Right-Line_Out_L;
   \   000000D6   0x.... 0x....      LDR.W    R2,??DataTable9_11
   \   000000DA   0x6812             LDR      R2,[R2, #+0]
   \   000000DC   0x1A51             SUBS     R1,R2,R1
    589                if(Width_Out_L<6)
   \   000000DE   0x2806             CMP      R0,#+6
   \   000000E0   0xDA12             BGE.N    ??Is_CrossRoad_7
    590                {
    591                  if(FallingEdgeIndex>=2)
   \   000000E2   0x....             LDR.N    R2,??DataTable6_2
   \   000000E4   0x6812             LDR      R2,[R2, #+0]
   \   000000E6   0x2A02             CMP      R2,#+2
   \   000000E8   0xDB0E             BLT.N    ??Is_CrossRoad_7
    592                  {
    593                    Line_Out_L=FallingEdge[FallingEdgeIndex-2];
   \   000000EA   0x.... 0x....      LDR.W    R0,??DataTable9_15
   \   000000EE   0x....             LDR.N    R1,??DataTable6_2
   \   000000F0   0x6809             LDR      R1,[R1, #+0]
   \   000000F2   0x1808             ADDS     R0,R1,R0
   \   000000F4   0xF810 0x1C02      LDRB     R1,[R0, #-2]
    594                    Width_Out_L=Left-Line_Out_L;
   \   000000F8   0x.... 0x....      LDR.W    R0,??DataTable9_12
   \   000000FC   0x6800             LDR      R0,[R0, #+0]
   \   000000FE   0x1A40             SUBS     R0,R0,R1
    595                    Width_All_L=Right-Line_Out_L;     
   \   00000100   0x.... 0x....      LDR.W    R2,??DataTable9_11
   \   00000104   0x6812             LDR      R2,[R2, #+0]
   \   00000106   0x1A51             SUBS     R1,R2,R1
    596                  }
    597          
    598                }
    599                if(Width_Out_L>8)
   \                     ??Is_CrossRoad_7: (+1)
   \   00000108   0x2809             CMP      R0,#+9
   \   0000010A   0xDB15             BLT.N    ??Is_CrossRoad_8
    600                {
    601                  if((Pre_Width_Out_L>Width_Out_L)&&(Pre_Width_All_L>=Width_All_L))
   \   0000010C   0x.... 0x....      LDR.W    R2,??DataTable10_1
   \   00000110   0x6812             LDR      R2,[R2, #+0]
   \   00000112   0x4290             CMP      R0,R2
   \   00000114   0xDA0C             BGE.N    ??Is_CrossRoad_9
   \   00000116   0x.... 0x....      LDR.W    R2,??DataTable10_2
   \   0000011A   0x6812             LDR      R2,[R2, #+0]
   \   0000011C   0x428A             CMP      R2,R1
   \   0000011E   0xDB07             BLT.N    ??Is_CrossRoad_9
    602                  {
    603                    Width_Change_Cnt_L++;
   \   00000120   0x.... 0x....      LDR.W    R2,??DataTable11
   \   00000124   0x6812             LDR      R2,[R2, #+0]
   \   00000126   0x1C52             ADDS     R2,R2,#+1
   \   00000128   0x.... 0x....      LDR.W    R3,??DataTable11
   \   0000012C   0x601A             STR      R2,[R3, #+0]
   \   0000012E   0xE003             B.N      ??Is_CrossRoad_8
    604          
    605                  }
    606                  else Width_Change_Cnt_L=0;
   \                     ??Is_CrossRoad_9: (+1)
   \   00000130   0x2200             MOVS     R2,#+0
   \   00000132   0x.... 0x....      LDR.W    R3,??DataTable11
   \   00000136   0x601A             STR      R2,[R3, #+0]
    607          
    608                }
    609                Pre_Width_Out_L=Width_Out_L;
   \                     ??Is_CrossRoad_8: (+1)
   \   00000138   0x.... 0x....      LDR.W    R2,??DataTable10_1
   \   0000013C   0x6010             STR      R0,[R2, #+0]
    610                Pre_Width_All_L=Width_All_L;
   \   0000013E   0x.... 0x....      LDR.W    R0,??DataTable10_2
   \   00000142   0x6001             STR      R1,[R0, #+0]
   \   00000144   0xE003             B.N      ??Is_CrossRoad_10
    611          
    612              }
    613              else 
    614              {
    615                Width_Change_Cnt_L=0;
   \                     ??Is_CrossRoad_6: (+1)
   \   00000146   0x2000             MOVS     R0,#+0
   \   00000148   0x.... 0x....      LDR.W    R1,??DataTable11
   \   0000014C   0x6008             STR      R0,[R1, #+0]
    616              
    617              }
    618              All_Find=1;
   \                     ??Is_CrossRoad_10: (+1)
   \   0000014E   0x2001             MOVS     R0,#+1
   \   00000150   0x.... 0x....      LDR.W    R1,??DataTable12_1
   \   00000154   0x7008             STRB     R0,[R1, #+0]
   \   00000156   0xE087             B.N      ??Is_CrossRoad_11
    619            
    620            }
    621            else
    622            {
    623            
    624              if(Width_Change_Cnt_R>=10 || Width_Change_Cnt_L>=10)
   \                     ??Is_CrossRoad_0: (+1)
   \   00000158   0x.... 0x....      LDR.W    R0,??DataTable10
   \   0000015C   0x6800             LDR      R0,[R0, #+0]
   \   0000015E   0x280A             CMP      R0,#+10
   \   00000160   0xDA04             BGE.N    ??Is_CrossRoad_12
   \   00000162   0x.... 0x....      LDR.W    R0,??DataTable11
   \   00000166   0x6800             LDR      R0,[R0, #+0]
   \   00000168   0x280A             CMP      R0,#+10
   \   0000016A   0xDB0B             BLT.N    ??Is_CrossRoad_13
    625              {
    626                curve_to_cross=1;
   \                     ??Is_CrossRoad_12: (+1)
   \   0000016C   0x2001             MOVS     R0,#+1
   \   0000016E   0x.... 0x....      LDR.W    R1,??DataTable11_1
   \   00000172   0x7008             STRB     R0,[R1, #+0]
    627                RoadType=1;
   \   00000174   0x2001             MOVS     R0,#+1
   \   00000176   0x.... 0x....      LDR.W    R1,??DataTable7_3
   \   0000017A   0x7008             STRB     R0,[R1, #+0]
    628                Character_Distance =Distance;
   \   0000017C   0x....             LDR.N    R0,??DataTable7_4
   \   0000017E   0x6800             LDR      R0,[R0, #+0]
   \   00000180   0x....             LDR.N    R1,??DataTable7_5
   \   00000182   0x6008             STR      R0,[R1, #+0]
    629              
    630              
    631              
    632              }
    633              if(All_Find==1)
   \                     ??Is_CrossRoad_13: (+1)
   \   00000184   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   00000188   0x7800             LDRB     R0,[R0, #+0]
   \   0000018A   0x2801             CMP      R0,#+1
   \   0000018C   0xD108             BNE.N    ??Is_CrossRoad_14
    634              {
    635                Width_Change_Cnt_R=0;
   \   0000018E   0x2000             MOVS     R0,#+0
   \   00000190   0x.... 0x....      LDR.W    R1,??DataTable10
   \   00000194   0x6008             STR      R0,[R1, #+0]
    636                Width_Change_Cnt_L=0;
   \   00000196   0x2000             MOVS     R0,#+0
   \   00000198   0x.... 0x....      LDR.W    R1,??DataTable11
   \   0000019C   0x6008             STR      R0,[R1, #+0]
   \   0000019E   0xE05F             B.N      ??Is_CrossRoad_15
    637              
    638              
    639              }
    640              else
    641              {
    642                if(Leftlastfind&&(Left<60))
   \                     ??Is_CrossRoad_14: (+1)
   \   000001A0   0x.... 0x....      LDR.W    R0,??DataTable9_8
   \   000001A4   0x7800             LDRB     R0,[R0, #+0]
   \   000001A6   0x2800             CMP      R0,#+0
   \   000001A8   0xD02C             BEQ.N    ??Is_CrossRoad_16
   \   000001AA   0x.... 0x....      LDR.W    R0,??DataTable9_12
   \   000001AE   0x6800             LDR      R0,[R0, #+0]
   \   000001B0   0x283C             CMP      R0,#+60
   \   000001B2   0xDA27             BGE.N    ??Is_CrossRoad_16
    643                {
    644                   if((FallingEdgeCnt==0)||FallingEdge[FallingEdgeCnt-1]<Left)  //右边没有多的线了
   \   000001B4   0x....             LDR.N    R0,??DataTable6_4
   \   000001B6   0x7800             LDRB     R0,[R0, #+0]
   \   000001B8   0x2800             CMP      R0,#+0
   \   000001BA   0xD00B             BEQ.N    ??Is_CrossRoad_17
   \   000001BC   0x.... 0x....      LDR.W    R0,??DataTable9_15
   \   000001C0   0x....             LDR.N    R1,??DataTable6_4
   \   000001C2   0x7809             LDRB     R1,[R1, #+0]
   \   000001C4   0x1808             ADDS     R0,R1,R0
   \   000001C6   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   000001CA   0x.... 0x....      LDR.W    R1,??DataTable9_12
   \   000001CE   0x6809             LDR      R1,[R1, #+0]
   \   000001D0   0x4288             CMP      R0,R1
   \   000001D2   0xDA13             BGE.N    ??Is_CrossRoad_18
    645                  {
    646                    if(Left<Leftlast) Width_Change_Cnt_L++;         
   \                     ??Is_CrossRoad_17: (+1)
   \   000001D4   0x.... 0x....      LDR.W    R0,??DataTable9_12
   \   000001D8   0x6800             LDR      R0,[R0, #+0]
   \   000001DA   0x....             LDR.N    R1,??DataTable6_3
   \   000001DC   0x7809             LDRB     R1,[R1, #+0]
   \   000001DE   0x4288             CMP      R0,R1
   \   000001E0   0xDA07             BGE.N    ??Is_CrossRoad_19
   \   000001E2   0x.... 0x....      LDR.W    R0,??DataTable11
   \   000001E6   0x6800             LDR      R0,[R0, #+0]
   \   000001E8   0x1C40             ADDS     R0,R0,#+1
   \   000001EA   0x.... 0x....      LDR.W    R1,??DataTable11
   \   000001EE   0x6008             STR      R0,[R1, #+0]
   \   000001F0   0xE008             B.N      ??Is_CrossRoad_16
    647                    else  Width_Change_Cnt_L=0;
   \                     ??Is_CrossRoad_19: (+1)
   \   000001F2   0x2000             MOVS     R0,#+0
   \   000001F4   0x.... 0x....      LDR.W    R1,??DataTable11
   \   000001F8   0x6008             STR      R0,[R1, #+0]
   \   000001FA   0xE003             B.N      ??Is_CrossRoad_16
    648                  }
    649                  else Width_Change_Cnt_L=0;
   \                     ??Is_CrossRoad_18: (+1)
   \   000001FC   0x2000             MOVS     R0,#+0
   \   000001FE   0x.... 0x....      LDR.W    R1,??DataTable11
   \   00000202   0x6008             STR      R0,[R1, #+0]
    650                }
    651                if(Rightlastfind&&(Right>70))
   \                     ??Is_CrossRoad_16: (+1)
   \   00000204   0x....             LDR.N    R0,??DataTable6
   \   00000206   0x7800             LDRB     R0,[R0, #+0]
   \   00000208   0x2800             CMP      R0,#+0
   \   0000020A   0xD029             BEQ.N    ??Is_CrossRoad_15
   \   0000020C   0x.... 0x....      LDR.W    R0,??DataTable9_11
   \   00000210   0x6800             LDR      R0,[R0, #+0]
   \   00000212   0x2847             CMP      R0,#+71
   \   00000214   0xDB24             BLT.N    ??Is_CrossRoad_15
    652                {
    653                  if((RisingEdgeCnt==0)||RisingEdge[0]>Right)  //左边没有多的线了
   \   00000216   0x.... 0x....      LDR.W    R0,??DataTable9_9
   \   0000021A   0x7800             LDRB     R0,[R0, #+0]
   \   0000021C   0x2800             CMP      R0,#+0
   \   0000021E   0xD007             BEQ.N    ??Is_CrossRoad_20
   \   00000220   0x.... 0x....      LDR.W    R0,??DataTable9_11
   \   00000224   0x6800             LDR      R0,[R0, #+0]
   \   00000226   0x.... 0x....      LDR.W    R1,??DataTable9_10
   \   0000022A   0x7809             LDRB     R1,[R1, #+0]
   \   0000022C   0x4288             CMP      R0,R1
   \   0000022E   0xDA13             BGE.N    ??Is_CrossRoad_21
    654                  {
    655                    if(Right>Rightlast)    Width_Change_Cnt_R++;
   \                     ??Is_CrossRoad_20: (+1)
   \   00000230   0x....             LDR.N    R0,??DataTable7_6
   \   00000232   0x7800             LDRB     R0,[R0, #+0]
   \   00000234   0x.... 0x....      LDR.W    R1,??DataTable9_11
   \   00000238   0x6809             LDR      R1,[R1, #+0]
   \   0000023A   0x4288             CMP      R0,R1
   \   0000023C   0xDA07             BGE.N    ??Is_CrossRoad_22
   \   0000023E   0x.... 0x....      LDR.W    R0,??DataTable10
   \   00000242   0x6800             LDR      R0,[R0, #+0]
   \   00000244   0x1C40             ADDS     R0,R0,#+1
   \   00000246   0x.... 0x....      LDR.W    R1,??DataTable10
   \   0000024A   0x6008             STR      R0,[R1, #+0]
   \   0000024C   0xE008             B.N      ??Is_CrossRoad_15
    656                    else  Width_Change_Cnt_R=0;
   \                     ??Is_CrossRoad_22: (+1)
   \   0000024E   0x2000             MOVS     R0,#+0
   \   00000250   0x.... 0x....      LDR.W    R1,??DataTable10
   \   00000254   0x6008             STR      R0,[R1, #+0]
   \   00000256   0xE003             B.N      ??Is_CrossRoad_15
    657                  }
    658                  else Width_Change_Cnt_R=0;
   \                     ??Is_CrossRoad_21: (+1)
   \   00000258   0x2000             MOVS     R0,#+0
   \   0000025A   0x.... 0x....      LDR.W    R1,??DataTable10
   \   0000025E   0x6008             STR      R0,[R1, #+0]
    659                }
    660              
    661              
    662              }
    663              All_Find=0;
   \                     ??Is_CrossRoad_15: (+1)
   \   00000260   0x2000             MOVS     R0,#+0
   \   00000262   0x.... 0x....      LDR.W    R1,??DataTable12_1
   \   00000266   0x7008             STRB     R0,[R1, #+0]
    664            
    665            
    666            
    667            
    668            
    669            
    670            
    671            
    672            }
    673              
    674          }
   \                     ??Is_CrossRoad_11: (+1)
   \   00000268   0x4770             BX       LR               ;; return

   \                                 In section .bss, align 4
   \                     ??Width_Change_Cnt_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??Pre_Width_Out_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??Pre_Width_All_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??Width_Change_Cnt_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??Pre_Width_Out_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??Pre_Width_All_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
   \                     ??All_Find:
   \   00000000                      DS8 1
    675              
    676          
    677          

   \                                 In section .text, align 2, keep-with-next
    678          void CrossRoad()
    679          {
   \                     CrossRoad: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    680             static uint8 Normal_Cnt;
    681             static uint8 Cross_Road_Cnt=0;
    682            
    683              //缓慢归零，车子回正  
    684            if(curve_to_cross==0)
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable11_1
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD108             BNE.N    ??CrossRoad_0
    685            {  
    686              Rightlastfind=0;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable12_2
   \   00000012   0x7008             STRB     R0,[R1, #+0]
    687              Leftlastfind=0; 
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable9_8
   \   0000001A   0x7008             STRB     R0,[R1, #+0]
   \   0000001C   0xE051             B.N      ??CrossRoad_1
    688            }
    689            else
    690            {  
    691              if(Rightlastfind)
   \                     ??CrossRoad_0: (+1)
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   00000022   0x7800             LDRB     R0,[R0, #+0]
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD023             BEQ.N    ??CrossRoad_2
    692              {
    693                  if(FindNearest(RIGHT,Rightlast))		//这次能找到左线
   \   00000028   0x....             LDR.N    R0,??DataTable7_6
   \   0000002A   0x7801             LDRB     R1,[R0, #+0]
   \   0000002C   0x2001             MOVS     R0,#+1
   \   0000002E   0x.... 0x....      BL       FindNearest
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xD017             BEQ.N    ??CrossRoad_3
    694                 {
    695                  Right=FallingEdge[FallingEdgeIndex];
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable9_15
   \   0000003A   0x.... 0x....      LDR.W    R1,??DataTable12_3
   \   0000003E   0x6809             LDR      R1,[R1, #+0]
   \   00000040   0x5C08             LDRB     R0,[R1, R0]
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable9_11
   \   00000046   0x6008             STR      R0,[R1, #+0]
    696                  Rightlastfind=1;
   \   00000048   0x2001             MOVS     R0,#+1
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable12_2
   \   0000004E   0x7008             STRB     R0,[R1, #+0]
    697                  Left=Right-Reference_Width;
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable9_11
   \   00000054   0x6800             LDR      R0,[R0, #+0]
   \   00000056   0x.... 0x....      LDR.W    R1,??DataTable8
   \   0000005A   0x6809             LDR      R1,[R1, #+0]
   \   0000005C   0x1A40             SUBS     R0,R0,R1
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable9_12
   \   00000062   0x6008             STR      R0,[R1, #+0]
   \   00000064   0xE02D             B.N      ??CrossRoad_1
    698                 }
    699                 else 
    700                 {
    701                   Rightlastfind=0;
   \                     ??CrossRoad_3: (+1)
   \   00000066   0x2000             MOVS     R0,#+0
   \   00000068   0x.... 0x....      LDR.W    R1,??DataTable12_2
   \   0000006C   0x7008             STRB     R0,[R1, #+0]
   \   0000006E   0xE028             B.N      ??CrossRoad_1
    702                   //curve_to_cross=0;
    703                 }
    704              }
    705              else if(Leftlastfind)
   \                     ??CrossRoad_2: (+1)
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable9_8
   \   00000074   0x7800             LDRB     R0,[R0, #+0]
   \   00000076   0x2800             CMP      R0,#+0
   \   00000078   0xD023             BEQ.N    ??CrossRoad_1
    706              {
    707                if(FindNearest(LEFT,Leftlast))		//这次能找到左线
   \   0000007A   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   0000007E   0x7801             LDRB     R1,[R0, #+0]
   \   00000080   0x2000             MOVS     R0,#+0
   \   00000082   0x.... 0x....      BL       FindNearest
   \   00000086   0x2800             CMP      R0,#+0
   \   00000088   0xD017             BEQ.N    ??CrossRoad_4
    708               {
    709                Left=RisingEdge[RisingEdgeIndex];    
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable9_10
   \   0000008E   0x.... 0x....      LDR.W    R1,??DataTable12_5
   \   00000092   0x6809             LDR      R1,[R1, #+0]
   \   00000094   0x5C08             LDRB     R0,[R1, R0]
   \   00000096   0x.... 0x....      LDR.W    R1,??DataTable9_12
   \   0000009A   0x6008             STR      R0,[R1, #+0]
    710                Leftlastfind=1;
   \   0000009C   0x2001             MOVS     R0,#+1
   \   0000009E   0x.... 0x....      LDR.W    R1,??DataTable9_8
   \   000000A2   0x7008             STRB     R0,[R1, #+0]
    711                Right=Reference_Width+Left;
   \   000000A4   0x.... 0x....      LDR.W    R0,??DataTable8
   \   000000A8   0x6800             LDR      R0,[R0, #+0]
   \   000000AA   0x.... 0x....      LDR.W    R1,??DataTable9_12
   \   000000AE   0x6809             LDR      R1,[R1, #+0]
   \   000000B0   0x1808             ADDS     R0,R1,R0
   \   000000B2   0x.... 0x....      LDR.W    R1,??DataTable9_11
   \   000000B6   0x6008             STR      R0,[R1, #+0]
   \   000000B8   0xE003             B.N      ??CrossRoad_1
    712               }
    713               else 
    714               {
    715                 Leftlastfind=0;
   \                     ??CrossRoad_4: (+1)
   \   000000BA   0x2000             MOVS     R0,#+0
   \   000000BC   0x.... 0x....      LDR.W    R1,??DataTable9_8
   \   000000C0   0x7008             STRB     R0,[R1, #+0]
    716                // curve_to_cross=0;
    717               }
    718              }
    719            }
    720            
    721              if(ABS(Middle_Err)>1)
   \                     ??CrossRoad_1: (+1)
   \   000000C2   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   000000C6   0x6800             LDR      R0,[R0, #+0]
   \   000000C8   0x2100             MOVS     R1,#+0
   \   000000CA   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000CE   0xD203             BCS.N    ??CrossRoad_5
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   000000D4   0x6800             LDR      R0,[R0, #+0]
   \   000000D6   0xE004             B.N      ??CrossRoad_6
   \                     ??CrossRoad_5: (+1)
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   000000DC   0x6800             LDR      R0,[R0, #+0]
   \   000000DE   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \                     ??CrossRoad_6: (+1)
   \   000000E2   0x.... 0x....      LDR.W    R1,??DataTable12_7  ;; 0x3f800001
   \   000000E6   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000EA   0xD824             BHI.N    ??CrossRoad_7
    722              {
    723                
    724                /*if(curve_to_cross==0)
    725                {
    726                 if(Middle_Err>0)Middle_Err=Middle_Err+Correct_Err;     
    727                 if(Middle_Err<0)Middle_Err=Middle_Err-Correct_Err;
    728                }*/
    729                
    730                 if(Middle_Err>0)Middle_Err=Middle_Err+Correct_Err;     
   \   000000EC   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   000000F0   0x6800             LDR      R0,[R0, #+0]
   \   000000F2   0x2100             MOVS     R1,#+0
   \   000000F4   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000F8   0xD20A             BCS.N    ??CrossRoad_8
   \   000000FA   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   000000FE   0x6800             LDR      R0,[R0, #+0]
   \   00000100   0x.... 0x....      LDR.W    R1,??DataTable12_8
   \   00000104   0x6809             LDR      R1,[R1, #+0]
   \   00000106   0x.... 0x....      BL       __aeabi_fadd
   \   0000010A   0x.... 0x....      LDR.W    R1,??DataTable12_6
   \   0000010E   0x6008             STR      R0,[R1, #+0]
    731                 if(Middle_Err<0)Middle_Err=Middle_Err-Correct_Err;
   \                     ??CrossRoad_8: (+1)
   \   00000110   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   00000114   0x6800             LDR      R0,[R0, #+0]
   \   00000116   0x2100             MOVS     R1,#+0
   \   00000118   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000011C   0xD20F             BCS.N    ??CrossRoad_9
   \   0000011E   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   00000122   0x6800             LDR      R0,[R0, #+0]
   \   00000124   0x.... 0x....      LDR.W    R1,??DataTable12_8
   \   00000128   0x6809             LDR      R1,[R1, #+0]
   \   0000012A   0x.... 0x....      BL       __aeabi_fsub
   \   0000012E   0x.... 0x....      LDR.W    R1,??DataTable12_6
   \   00000132   0x6008             STR      R0,[R1, #+0]
   \   00000134   0xE003             B.N      ??CrossRoad_9
    732                  
    733              }
    734              else Middle_Err=0;
   \                     ??CrossRoad_7: (+1)
   \   00000136   0x2000             MOVS     R0,#+0
   \   00000138   0x.... 0x....      LDR.W    R1,??DataTable12_6
   \   0000013C   0x6008             STR      R0,[R1, #+0]
    735              
    736          
    737              
    738          
    739              
    740          
    741              
    742            
    743              
    744              
    745              
    746              if(curve_to_cross==0||(curve_to_cross==1&&Distance-Character_Distance>0.5)) Find_BothLine();
   \                     ??CrossRoad_9: (+1)
   \   0000013E   0x.... 0x....      LDR.W    R0,??DataTable11_1
   \   00000142   0x7800             LDRB     R0,[R0, #+0]
   \   00000144   0x2800             CMP      R0,#+0
   \   00000146   0xD00F             BEQ.N    ??CrossRoad_10
   \   00000148   0x.... 0x....      LDR.W    R0,??DataTable11_1
   \   0000014C   0x7800             LDRB     R0,[R0, #+0]
   \   0000014E   0x2801             CMP      R0,#+1
   \   00000150   0xD10C             BNE.N    ??CrossRoad_11
   \   00000152   0x....             LDR.N    R0,??DataTable7_4
   \   00000154   0x6800             LDR      R0,[R0, #+0]
   \   00000156   0x....             LDR.N    R1,??DataTable7_5
   \   00000158   0x6809             LDR      R1,[R1, #+0]
   \   0000015A   0x.... 0x....      BL       __aeabi_fsub
   \   0000015E   0x.... 0x....      LDR.W    R1,??DataTable12_9  ;; 0x3f000001
   \   00000162   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000166   0xD801             BHI.N    ??CrossRoad_11
   \                     ??CrossRoad_10: (+1)
   \   00000168   0x.... 0x....      BL       Find_BothLine
    747              
    748              if(Rightlastfind&&Leftlastfind)//能够找到两边边界
   \                     ??CrossRoad_11: (+1)
   \   0000016C   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   00000170   0x7800             LDRB     R0,[R0, #+0]
   \   00000172   0x2800             CMP      R0,#+0
   \   00000174   0xD045             BEQ.N    ??CrossRoad_12
   \   00000176   0x.... 0x....      LDR.W    R0,??DataTable9_8
   \   0000017A   0x7800             LDRB     R0,[R0, #+0]
   \   0000017C   0x2800             CMP      R0,#+0
   \   0000017E   0xD040             BEQ.N    ??CrossRoad_12
    749              {
    750               if(Right-Left<65&&Cross_Road_Cnt>17)     //宽度有效
   \   00000180   0x.... 0x....      LDR.W    R0,??DataTable9_11
   \   00000184   0x6800             LDR      R0,[R0, #+0]
   \   00000186   0x.... 0x....      LDR.W    R1,??DataTable9_12
   \   0000018A   0x6809             LDR      R1,[R1, #+0]
   \   0000018C   0x1A40             SUBS     R0,R0,R1
   \   0000018E   0x2841             CMP      R0,#+65
   \   00000190   0xDA2A             BGE.N    ??CrossRoad_13
   \   00000192   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   00000196   0x7800             LDRB     R0,[R0, #+0]
   \   00000198   0x2812             CMP      R0,#+18
   \   0000019A   0xDB25             BLT.N    ??CrossRoad_13
    751               {
    752                  /*                跳转到直角弯                 */
    753                  if(Distance>1&&(Distance-Character_Distance<0.15))
   \   0000019C   0x....             LDR.N    R0,??DataTable7_4
   \   0000019E   0x6800             LDR      R0,[R0, #+0]
   \   000001A0   0x.... 0x....      LDR.W    R1,??DataTable12_7  ;; 0x3f800001
   \   000001A4   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000001A8   0xD80A             BHI.N    ??CrossRoad_14
   \   000001AA   0x....             LDR.N    R0,??DataTable7_4
   \   000001AC   0x6800             LDR      R0,[R0, #+0]
   \   000001AE   0x....             LDR.N    R1,??DataTable7_5
   \   000001B0   0x6809             LDR      R1,[R1, #+0]
   \   000001B2   0x.... 0x....      BL       __aeabi_fsub
   \   000001B6   0x.... 0x....      LDR.W    R1,??DataTable12_11  ;; 0x3e19999a
   \   000001BA   0x.... 0x....      BL       __aeabi_cfcmple
   \   000001BE   0xD324             BCC.N    ??CrossRoad_15
    754                  {
    755                                
    756                  }
    757                  else
    758                  { 
    759                    Normal_Cnt++;
   \                     ??CrossRoad_14: (+1)
   \   000001C0   0x.... 0x....      LDR.W    R0,??DataTable12_12
   \   000001C4   0x7800             LDRB     R0,[R0, #+0]
   \   000001C6   0x1C40             ADDS     R0,R0,#+1
   \   000001C8   0x.... 0x....      LDR.W    R1,??DataTable12_12
   \   000001CC   0x7008             STRB     R0,[R1, #+0]
    760                    if(Normal_Cnt>=80)
   \   000001CE   0x.... 0x....      LDR.W    R0,??DataTable12_12
   \   000001D2   0x7800             LDRB     R0,[R0, #+0]
   \   000001D4   0x2850             CMP      R0,#+80
   \   000001D6   0xDB18             BLT.N    ??CrossRoad_15
    761                    {
    762                     RoadType=0;
   \   000001D8   0x2000             MOVS     R0,#+0
   \   000001DA   0x....             LDR.N    R1,??DataTable7_3
   \   000001DC   0x7008             STRB     R0,[R1, #+0]
    763                     curve_to_cross=0;
   \   000001DE   0x2000             MOVS     R0,#+0
   \   000001E0   0x.... 0x....      LDR.W    R1,??DataTable11_1
   \   000001E4   0x7008             STRB     R0,[R1, #+0]
   \   000001E6   0xE010             B.N      ??CrossRoad_15
    764                    /*            跳回正常道路            */
    765                    }
    766                   
    767                  }
    768               }
    769               else 
    770               {
    771                Rightlastfind=0;
   \                     ??CrossRoad_13: (+1)
   \   000001E8   0x2000             MOVS     R0,#+0
   \   000001EA   0x.... 0x....      LDR.W    R1,??DataTable12_2
   \   000001EE   0x7008             STRB     R0,[R1, #+0]
    772                Leftlastfind=0;
   \   000001F0   0x2000             MOVS     R0,#+0
   \   000001F2   0x.... 0x....      LDR.W    R1,??DataTable9_8
   \   000001F6   0x7008             STRB     R0,[R1, #+0]
    773                Normal_Cnt=0;
   \   000001F8   0x2000             MOVS     R0,#+0
   \   000001FA   0x.... 0x....      LDR.W    R1,??DataTable12_12
   \   000001FE   0x7008             STRB     R0,[R1, #+0]
   \   00000200   0xE003             B.N      ??CrossRoad_15
    774               }
    775              }
    776              else Normal_Cnt=0;
   \                     ??CrossRoad_12: (+1)
   \   00000202   0x2000             MOVS     R0,#+0
   \   00000204   0x.... 0x....      LDR.W    R1,??DataTable12_12
   \   00000208   0x7008             STRB     R0,[R1, #+0]
    777              
    778          
    779          
    780              if(RoadType!=1)
   \                     ??CrossRoad_15: (+1)
   \   0000020A   0x....             LDR.N    R0,??DataTable7_3
   \   0000020C   0x7800             LDRB     R0,[R0, #+0]
   \   0000020E   0x2801             CMP      R0,#+1
   \   00000210   0xD004             BEQ.N    ??CrossRoad_16
    781              {
    782                Cross_Road_Cnt=0;
   \   00000212   0x2000             MOVS     R0,#+0
   \   00000214   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   00000218   0x7008             STRB     R0,[R1, #+0]
   \   0000021A   0xE01E             B.N      ??CrossRoad_17
    783              }
    784              else
    785              {
    786                if(Cross_Road_Cnt<20)Cross_Road_Cnt++; 
   \                     ??CrossRoad_16: (+1)
   \   0000021C   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   00000220   0x7800             LDRB     R0,[R0, #+0]
   \   00000222   0x2814             CMP      R0,#+20
   \   00000224   0xDA06             BGE.N    ??CrossRoad_18
   \   00000226   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   0000022A   0x7800             LDRB     R0,[R0, #+0]
   \   0000022C   0x1C40             ADDS     R0,R0,#+1
   \   0000022E   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   00000232   0x7008             STRB     R0,[R1, #+0]
    787                
    788                if(Cross_Road_Cnt>3&&Cross_Road_Cnt<8&&curve_to_cross==0)/////////////////////////////////改
   \                     ??CrossRoad_18: (+1)
   \   00000234   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   00000238   0x7800             LDRB     R0,[R0, #+0]
   \   0000023A   0x1F00             SUBS     R0,R0,#+4
   \   0000023C   0x2804             CMP      R0,#+4
   \   0000023E   0xD20C             BCS.N    ??CrossRoad_17
   \   00000240   0x.... 0x....      LDR.W    R0,??DataTable11_1
   \   00000244   0x7800             LDRB     R0,[R0, #+0]
   \   00000246   0x2800             CMP      R0,#+0
   \   00000248   0xD107             BNE.N    ??CrossRoad_17
    789                {
    790                  Leftlastfind=0;
   \   0000024A   0x2000             MOVS     R0,#+0
   \   0000024C   0x.... 0x....      LDR.W    R1,??DataTable9_8
   \   00000250   0x7008             STRB     R0,[R1, #+0]
    791                  Rightlastfind=0;
   \   00000252   0x2000             MOVS     R0,#+0
   \   00000254   0x.... 0x....      LDR.W    R1,??DataTable12_2
   \   00000258   0x7008             STRB     R0,[R1, #+0]
    792          
    793                }
    794                
    795              }
    796          }
   \                     ??CrossRoad_17: (+1)
   \   0000025A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 1
   \                     ??Normal_Cnt:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??Cross_Road_Cnt:
   \   00000000                      DS8 1
    797          
    798          /****
    799          ** 更新数组
    800          *****/
    801          

   \                                 In section .text, align 2, keep-with-next
    802          void Push_And_Pull(float *buff,int len,float newdata)
    803          {
    804           int i;
    805           for(i=len-1;i>0;i--)
   \                     Push_And_Pull: (+1)
   \   00000000   0x1E49             SUBS     R1,R1,#+1
   \   00000002   0xE006             B.N      ??Push_And_Pull_0
    806           {
    807             *(buff+i)=*(buff+i-1);
   \                     ??Push_And_Pull_1: (+1)
   \   00000004   0xEB10 0x0381      ADDS     R3,R0,R1, LSL #+2
   \   00000008   0xF853 0x3C04      LDR      R3,[R3, #-4]
   \   0000000C   0xF840 0x3021      STR      R3,[R0, R1, LSL #+2]
    808           }
   \   00000010   0x1E49             SUBS     R1,R1,#+1
   \                     ??Push_And_Pull_0: (+1)
   \   00000012   0x2901             CMP      R1,#+1
   \   00000014   0xDAF6             BGE.N    ??Push_And_Pull_1
    809             *buff=newdata; 
   \   00000016   0x6002             STR      R2,[R0, #+0]
    810          }
   \   00000018   0x4770             BX       LR               ;; return
    811          
    812          
    813          
    814          /****
    815          **识别赛道类型
    816          ****/

   \                                 In section .text, align 2, keep-with-next
    817          void RoadType_Distinguish(void)
    818          {
   \                     RoadType_Distinguish: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    819            EdgeFind();
   \   00000002   0x.... 0x....      BL       EdgeFind
    820          
    821            if(RoadType==0 )  Prejudge();//道路预判
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   0000000A   0x7800             LDRB     R0,[R0, #+0]
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD101             BNE.N    ??RoadType_Distinguish_0
   \   00000010   0x.... 0x....      BL       Prejudge
    822          
    823            switch(RoadType)
   \                     ??RoadType_Distinguish_0: (+1)
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   00000018   0x7800             LDRB     R0,[R0, #+0]
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD003             BEQ.N    ??RoadType_Distinguish_1
   \   0000001E   0x2802             CMP      R0,#+2
   \   00000020   0xD03D             BEQ.N    ??RoadType_Distinguish_2
   \   00000022   0xD327             BCC.N    ??RoadType_Distinguish_3
   \   00000024   0xE03E             B.N      ??RoadType_Distinguish_4
    824            {
    825              case 0: //表示常规赛道
    826                Character_Distance=0;//普通赛道无特征距离
   \                     ??RoadType_Distinguish_1: (+1)
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable12_14
   \   0000002C   0x6008             STR      R0,[R1, #+0]
    827                Normal();//如果赛道类型是0，进行常规处理
   \   0000002E   0x.... 0x....      BL       Normal
    828                Is_Barraicade();
   \   00000032   0x.... 0x....      BL       Is_Barraicade
    829                if(RoadType==1)
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   0000003A   0x7800             LDRB     R0,[R0, #+0]
   \   0000003C   0x2801             CMP      R0,#+1
   \   0000003E   0xD104             BNE.N    ??RoadType_Distinguish_5
    830                {
    831                  curve_to_cross=0;
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable11_1
   \   00000046   0x7008             STRB     R0,[R1, #+0]
   \   00000048   0xE001             B.N      ??RoadType_Distinguish_6
    832                }
    833                else Is_CrossRoad();
   \                     ??RoadType_Distinguish_5: (+1)
   \   0000004A   0x.... 0x....      BL       Is_CrossRoad
    834                
    835                LPLD_GPIO_Output_b(PTE, 10, 0);
   \                     ??RoadType_Distinguish_6: (+1)
   \   0000004E   0x2200             MOVS     R2,#+0
   \   00000050   0x210A             MOVS     R1,#+10
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable12_15  ;; 0x400ff100
   \   00000056   0x.... 0x....      BL       LPLD_GPIO_Output_b
    836                LPLD_GPIO_Output_b(PTE, 11, 1);      
   \   0000005A   0x2201             MOVS     R2,#+1
   \   0000005C   0x210B             MOVS     R1,#+11
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable12_15  ;; 0x400ff100
   \   00000062   0x.... 0x....      BL       LPLD_GPIO_Output_b
    837                LPLD_GPIO_Output_b(PTE, 12, 1);
   \   00000066   0x2201             MOVS     R2,#+1
   \   00000068   0x210C             MOVS     R1,#+12
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable12_15  ;; 0x400ff100
   \   0000006E   0x.... 0x....      BL       LPLD_GPIO_Output_b
    838          
    839                break;
   \   00000072   0xE019             B.N      ??RoadType_Distinguish_7
    840              case 1://表示十字弯
    841          
    842                CrossRoad();
   \                     ??RoadType_Distinguish_3: (+1)
   \   00000074   0x.... 0x....      BL       CrossRoad
    843                LPLD_GPIO_Output_b(PTE, 10, 1);
   \   00000078   0x2201             MOVS     R2,#+1
   \   0000007A   0x210A             MOVS     R1,#+10
   \   0000007C   0x.... 0x....      LDR.W    R0,??DataTable12_15  ;; 0x400ff100
   \   00000080   0x.... 0x....      BL       LPLD_GPIO_Output_b
    844                LPLD_GPIO_Output_b(PTE, 11, 0);
   \   00000084   0x2200             MOVS     R2,#+0
   \   00000086   0x210B             MOVS     R1,#+11
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable12_15  ;; 0x400ff100
   \   0000008C   0x.... 0x....      BL       LPLD_GPIO_Output_b
    845                LPLD_GPIO_Output_b(PTE, 12, 1);
   \   00000090   0x2201             MOVS     R2,#+1
   \   00000092   0x210C             MOVS     R1,#+12
   \   00000094   0x.... 0x....      LDR.W    R0,??DataTable12_15  ;; 0x400ff100
   \   00000098   0x.... 0x....      BL       LPLD_GPIO_Output_b
    846          
    847                //Middle_Last=Middle_Err;
    848                break;
   \   0000009C   0xE004             B.N      ??RoadType_Distinguish_7
    849              case 2:
    850                Barraicade();
   \                     ??RoadType_Distinguish_2: (+1)
   \   0000009E   0x.... 0x....      BL       Barraicade
    851          
    852                break;
   \   000000A2   0xE001             B.N      ??RoadType_Distinguish_7
    853              
    854              default:
    855                Normal();
   \                     ??RoadType_Distinguish_4: (+1)
   \   000000A4   0x.... 0x....      BL       Normal
    856                break;
    857          
    858            }
    859            
    860            if(Distance<0.4)  //刚进入赛道,将赛道类型设置为1
   \                     ??RoadType_Distinguish_7: (+1)
   \   000000A8   0x.... 0x....      LDR.W    R0,??DataTable12_16
   \   000000AC   0x6800             LDR      R0,[R0, #+0]
   \   000000AE   0x.... 0x....      LDR.W    R1,??DataTable12_17  ;; 0x3ecccccd
   \   000000B2   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000B6   0xD203             BCS.N    ??RoadType_Distinguish_8
    861            {
    862              RoadType=0;
   \   000000B8   0x2000             MOVS     R0,#+0
   \   000000BA   0x.... 0x....      LDR.W    R1,??DataTable12_13
   \   000000BE   0x7008             STRB     R0,[R1, #+0]
    863              
    864            }
    865            
    866            //将赛道信息写入发送数组
    867            CCD_Draw_Buff[128]=Left-1;
   \                     ??RoadType_Distinguish_8: (+1)
   \   000000C0   0x.... 0x....      LDR.W    R0,??DataTable12_18
   \   000000C4   0x6800             LDR      R0,[R0, #+0]
   \   000000C6   0x1E40             SUBS     R0,R0,#+1
   \   000000C8   0x.... 0x....      LDR.W    R1,??DataTable12
   \   000000CC   0xF881 0x0080      STRB     R0,[R1, #+128]
    868            CCD_Draw_Buff[129]=Right; 
   \   000000D0   0x....             LDR.N    R0,??DataTable9_11
   \   000000D2   0x6800             LDR      R0,[R0, #+0]
   \   000000D4   0x.... 0x....      LDR.W    R1,??DataTable12
   \   000000D8   0xF881 0x0081      STRB     R0,[R1, #+129]
    869            CCD_Draw_Buff[132]=BYTE0(Max_Peak);
   \   000000DC   0x.... 0x....      LDR.W    R0,??DataTable12_19
   \   000000E0   0x7800             LDRB     R0,[R0, #+0]
   \   000000E2   0x.... 0x....      LDR.W    R1,??DataTable12
   \   000000E6   0xF881 0x0084      STRB     R0,[R1, #+132]
    870            CCD_Draw_Buff[133]=BYTE1(Max_Peak);
   \   000000EA   0x.... 0x....      LDR.W    R0,??DataTable12_19
   \   000000EE   0x7840             LDRB     R0,[R0, #+1]
   \   000000F0   0x.... 0x....      LDR.W    R1,??DataTable12
   \   000000F4   0xF881 0x0085      STRB     R0,[R1, #+133]
    871            CCD_Draw_Buff[134]=Leftlastfind;
   \   000000F8   0x....             LDR.N    R0,??DataTable9_8
   \   000000FA   0x7800             LDRB     R0,[R0, #+0]
   \   000000FC   0x.... 0x....      LDR.W    R1,??DataTable12
   \   00000100   0xF881 0x0086      STRB     R0,[R1, #+134]
    872            CCD_Draw_Buff[135]=Rightlastfind;
   \   00000104   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   00000108   0x7800             LDRB     R0,[R0, #+0]
   \   0000010A   0x.... 0x....      LDR.W    R1,??DataTable12
   \   0000010E   0xF881 0x0087      STRB     R0,[R1, #+135]
    873            CCD_Draw_Buff[136]=RoadType; 
   \   00000112   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   00000116   0x7800             LDRB     R0,[R0, #+0]
   \   00000118   0x.... 0x....      LDR.W    R1,??DataTable12
   \   0000011C   0xF881 0x0088      STRB     R0,[R1, #+136]
    874            Leftlast=Left;              // 更新边界线
   \   00000120   0x.... 0x....      LDR.W    R0,??DataTable12_18
   \   00000124   0x6800             LDR      R0,[R0, #+0]
   \   00000126   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   0000012A   0x7008             STRB     R0,[R1, #+0]
    875            Rightlast=Right;            //更新边界线
   \   0000012C   0x....             LDR.N    R0,??DataTable9_11
   \   0000012E   0x6800             LDR      R0,[R0, #+0]
   \   00000130   0x.... 0x....      LDR.W    R1,??DataTable12_20
   \   00000134   0x7008             STRB     R0,[R1, #+0]
    876            
    877            
    878            
    879            if(Rightlastfind||Leftlastfind)//当左线右线能找到其中一个
   \   00000136   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   0000013A   0x7800             LDRB     R0,[R0, #+0]
   \   0000013C   0x2800             CMP      R0,#+0
   \   0000013E   0xD104             BNE.N    ??RoadType_Distinguish_9
   \   00000140   0x....             LDR.N    R0,??DataTable9_8
   \   00000142   0x7800             LDRB     R0,[R0, #+0]
   \   00000144   0x2800             CMP      R0,#+0
   \   00000146   0xF000 0x80AE      BEQ.W    ??RoadType_Distinguish_10
    880            {
    881              Middle_Err=64-(Leftlast+Rightlast)/2.0+1;//计算得到中线偏移量
   \                     ??RoadType_Distinguish_9: (+1)
   \   0000014A   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   0000014E   0x7800             LDRB     R0,[R0, #+0]
   \   00000150   0x.... 0x....      LDR.W    R1,??DataTable12_20
   \   00000154   0x7809             LDRB     R1,[R1, #+0]
   \   00000156   0x1808             ADDS     R0,R1,R0
   \   00000158   0x.... 0x....      BL       __aeabi_i2d
   \   0000015C   0x2200             MOVS     R2,#+0
   \   0000015E   0xF05F 0x4380      MOVS     R3,#+1073741824
   \   00000162   0x.... 0x....      BL       __aeabi_ddiv
   \   00000166   0x0002             MOVS     R2,R0
   \   00000168   0x000B             MOVS     R3,R1
   \   0000016A   0x2000             MOVS     R0,#+0
   \   0000016C   0x.... 0x....      LDR.W    R1,??DataTable12_21  ;; 0x40500000
   \   00000170   0x.... 0x....      BL       __aeabi_dsub
   \   00000174   0x2200             MOVS     R2,#+0
   \   00000176   0x....             LDR.N    R3,??DataTable9  ;; 0x3ff00000
   \   00000178   0x.... 0x....      BL       __aeabi_dadd
   \   0000017C   0x.... 0x....      BL       __aeabi_d2f
   \   00000180   0x.... 0x....      LDR.W    R1,??DataTable12_6
   \   00000184   0x6008             STR      R0,[R1, #+0]
    882              if(ABS(Middle_Err-Middle_Last)>2&&(curve_to_cross==0)) //十字内对中心线进行修正
   \   00000186   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   0000018A   0x6800             LDR      R0,[R0, #+0]
   \   0000018C   0x.... 0x....      LDR.W    R1,??DataTable12_22
   \   00000190   0x6809             LDR      R1,[R1, #+0]
   \   00000192   0x.... 0x....      BL       __aeabi_fsub
   \   00000196   0x2100             MOVS     R1,#+0
   \   00000198   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000019C   0xD208             BCS.N    ??RoadType_Distinguish_11
   \   0000019E   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   000001A2   0x6800             LDR      R0,[R0, #+0]
   \   000001A4   0x.... 0x....      LDR.W    R1,??DataTable12_22
   \   000001A8   0x6809             LDR      R1,[R1, #+0]
   \   000001AA   0x.... 0x....      BL       __aeabi_fsub
   \   000001AE   0xE009             B.N      ??RoadType_Distinguish_12
   \                     ??RoadType_Distinguish_11: (+1)
   \   000001B0   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   000001B4   0x6800             LDR      R0,[R0, #+0]
   \   000001B6   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   000001BA   0x.... 0x....      LDR.W    R1,??DataTable12_22
   \   000001BE   0x6809             LDR      R1,[R1, #+0]
   \   000001C0   0x.... 0x....      BL       __aeabi_fsub
   \                     ??RoadType_Distinguish_12: (+1)
   \   000001C4   0x.... 0x....      LDR.W    R1,??DataTable12_23  ;; 0x40000001
   \   000001C8   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000001CC   0xD865             BHI.N    ??RoadType_Distinguish_13
   \   000001CE   0x.... 0x....      LDR.W    R0,??DataTable11_1
   \   000001D2   0x7800             LDRB     R0,[R0, #+0]
   \   000001D4   0x2800             CMP      R0,#+0
   \   000001D6   0xD160             BNE.N    ??RoadType_Distinguish_13
    883              {
    884                if(ABS(Middle_Err-Middle_Last)>3)  //可能出现错误采集，对中心偏移量进行微调
   \   000001D8   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   000001DC   0x6800             LDR      R0,[R0, #+0]
   \   000001DE   0x.... 0x....      LDR.W    R1,??DataTable12_22
   \   000001E2   0x6809             LDR      R1,[R1, #+0]
   \   000001E4   0x.... 0x....      BL       __aeabi_fsub
   \   000001E8   0x2100             MOVS     R1,#+0
   \   000001EA   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000001EE   0xD208             BCS.N    ??RoadType_Distinguish_14
   \   000001F0   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   000001F4   0x6800             LDR      R0,[R0, #+0]
   \   000001F6   0x.... 0x....      LDR.W    R1,??DataTable12_22
   \   000001FA   0x6809             LDR      R1,[R1, #+0]
   \   000001FC   0x.... 0x....      BL       __aeabi_fsub
   \   00000200   0xE009             B.N      ??RoadType_Distinguish_15
   \                     ??RoadType_Distinguish_14: (+1)
   \   00000202   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   00000206   0x6800             LDR      R0,[R0, #+0]
   \   00000208   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   0000020C   0x.... 0x....      LDR.W    R1,??DataTable12_22
   \   00000210   0x6809             LDR      R1,[R1, #+0]
   \   00000212   0x.... 0x....      BL       __aeabi_fsub
   \                     ??RoadType_Distinguish_15: (+1)
   \   00000216   0x.... 0x....      LDR.W    R1,??DataTable12_24  ;; 0x40400001
   \   0000021A   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000021E   0xD81E             BHI.N    ??RoadType_Distinguish_16
    885                {
    886                  if(Middle_Err>Middle_Last) Middle_Err=Middle_Last+1;
   \   00000220   0x.... 0x....      LDR.W    R0,??DataTable12_22
   \   00000224   0x6800             LDR      R0,[R0, #+0]
   \   00000226   0x.... 0x....      LDR.W    R1,??DataTable12_6
   \   0000022A   0x6809             LDR      R1,[R1, #+0]
   \   0000022C   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000230   0xD20A             BCS.N    ??RoadType_Distinguish_17
   \   00000232   0x.... 0x....      LDR.W    R0,??DataTable12_22
   \   00000236   0x6801             LDR      R1,[R0, #+0]
   \   00000238   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   0000023C   0x.... 0x....      BL       __aeabi_fadd
   \   00000240   0x.... 0x....      LDR.W    R1,??DataTable12_6
   \   00000244   0x6008             STR      R0,[R1, #+0]
   \   00000246   0xE028             B.N      ??RoadType_Distinguish_13
    887                  else Middle_Err=Middle_Last-1;
   \                     ??RoadType_Distinguish_17: (+1)
   \   00000248   0x.... 0x....      LDR.W    R0,??DataTable12_22
   \   0000024C   0x6801             LDR      R1,[R0, #+0]
   \   0000024E   0x.... 0x....      LDR.W    R0,??DataTable12_25  ;; 0xbf800000
   \   00000252   0x.... 0x....      BL       __aeabi_fadd
   \   00000256   0x.... 0x....      LDR.W    R1,??DataTable12_6
   \   0000025A   0x6008             STR      R0,[R1, #+0]
   \   0000025C   0xE01D             B.N      ??RoadType_Distinguish_13
    888                }
    889                else  //在合理采集范围内，对中心偏移量进行更新
    890                {
    891                  if(Middle_Err>Middle_Last) Middle_Err=Middle_Last+2;
   \                     ??RoadType_Distinguish_16: (+1)
   \   0000025E   0x.... 0x....      LDR.W    R0,??DataTable12_22
   \   00000262   0x6800             LDR      R0,[R0, #+0]
   \   00000264   0x.... 0x....      LDR.W    R1,??DataTable12_6
   \   00000268   0x6809             LDR      R1,[R1, #+0]
   \   0000026A   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000026E   0xD20A             BCS.N    ??RoadType_Distinguish_18
   \   00000270   0x.... 0x....      LDR.W    R0,??DataTable12_22
   \   00000274   0x6801             LDR      R1,[R0, #+0]
   \   00000276   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   0000027A   0x.... 0x....      BL       __aeabi_fadd
   \   0000027E   0x.... 0x....      LDR.W    R1,??DataTable12_6
   \   00000282   0x6008             STR      R0,[R1, #+0]
   \   00000284   0xE009             B.N      ??RoadType_Distinguish_13
    892                  else Middle_Err=Middle_Last-2;
   \                     ??RoadType_Distinguish_18: (+1)
   \   00000286   0x.... 0x....      LDR.W    R0,??DataTable12_22
   \   0000028A   0x6801             LDR      R1,[R0, #+0]
   \   0000028C   0xF05F 0x4040      MOVS     R0,#-1073741824
   \   00000290   0x.... 0x....      BL       __aeabi_fadd
   \   00000294   0x.... 0x....      LDR.W    R1,??DataTable12_6
   \   00000298   0x6008             STR      R0,[R1, #+0]
    893                }
    894              
    895              }
    896              Middle_Last=Middle_Err;
   \                     ??RoadType_Distinguish_13: (+1)
   \   0000029A   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   0000029E   0x6800             LDR      R0,[R0, #+0]
   \   000002A0   0x.... 0x....      LDR.W    R1,??DataTable12_22
   \   000002A4   0x6008             STR      R0,[R1, #+0]
    897            }
    898            
    899            
    900            Push_And_Pull(Pre_Width,5,(float)(Right-Left));
   \                     ??RoadType_Distinguish_10: (+1)
   \   000002A6   0x....             LDR.N    R0,??DataTable9_11
   \   000002A8   0x6800             LDR      R0,[R0, #+0]
   \   000002AA   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   000002AE   0x6809             LDR      R1,[R1, #+0]
   \   000002B0   0x1A40             SUBS     R0,R0,R1
   \   000002B2   0x.... 0x....      BL       __aeabi_i2f
   \   000002B6   0x0002             MOVS     R2,R0
   \   000002B8   0x2105             MOVS     R1,#+5
   \   000002BA   0x.... 0x....      LDR.W    R0,??DataTable12_26
   \   000002BE   0x.... 0x....      BL       Push_And_Pull
    901            
    902            if(Rightlastfind&&Leftlastfind&&(Right-Left>20))   //两边边线都能够找到，计算赛道的平均亮度
   \   000002C2   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   000002C6   0x7800             LDRB     R0,[R0, #+0]
   \   000002C8   0x2800             CMP      R0,#+0
   \   000002CA   0xD00D             BEQ.N    ??RoadType_Distinguish_19
   \   000002CC   0x....             LDR.N    R0,??DataTable9_8
   \   000002CE   0x7800             LDRB     R0,[R0, #+0]
   \   000002D0   0x2800             CMP      R0,#+0
   \   000002D2   0xD009             BEQ.N    ??RoadType_Distinguish_19
   \   000002D4   0x....             LDR.N    R0,??DataTable9_11
   \   000002D6   0x6800             LDR      R0,[R0, #+0]
   \   000002D8   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   000002DC   0x6809             LDR      R1,[R1, #+0]
   \   000002DE   0x1A40             SUBS     R0,R0,R1
   \   000002E0   0x2815             CMP      R0,#+21
   \   000002E2   0xDB01             BLT.N    ??RoadType_Distinguish_19
    903            {
    904             Brightness_Calculate();
   \   000002E4   0x.... 0x....      BL       Brightness_Calculate
    905            }
    906           
    907          
    908          
    909          
    910          }
   \                     ??RoadType_Distinguish_19: (+1)
   \   000002E8   0xBD01             POP      {R0,PC}          ;; return
    911          
    912          
    913          
    914          ///////////////////////////////////////////障碍处理

   \                                 In section .text, align 2, keep-with-next
    915          void Is_Barraicade(void)
    916          {
   \                     Is_Barraicade: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    917            int left_edge,right_edge,left_edge_find,right_edge_find;
    918            int i;
    919            float half_width=0;
   \   00000002   0x2600             MOVS     R6,#+0
    920            
    921            half_width=Pre_Width[0]/2;
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable12_26
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000000E   0x.... 0x....      BL       __aeabi_fdiv
   \   00000012   0x0006             MOVS     R6,R0
    922            
    923            if(Leftlastfind && Rightlastfind)
   \   00000014   0x....             LDR.N    R0,??DataTable9_8
   \   00000016   0x7800             LDRB     R0,[R0, #+0]
   \   00000018   0x2800             CMP      R0,#+0
   \   0000001A   0xD078             BEQ.N    ??Is_Barraicade_0
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   00000020   0x7800             LDRB     R0,[R0, #+0]
   \   00000022   0x2800             CMP      R0,#+0
   \   00000024   0xD073             BEQ.N    ??Is_Barraicade_0
    924            {
    925              right_edge_find=0;
   \   00000026   0x2000             MOVS     R0,#+0
    926              left_edge_find=0;
   \   00000028   0x2100             MOVS     R1,#+0
    927              if(FallingEdgeCnt>0)
   \   0000002A   0x.... 0x....      LDR.W    R2,??DataTable12_27
   \   0000002E   0x7812             LDRB     R2,[R2, #+0]
   \   00000030   0x2A00             CMP      R2,#+0
   \   00000032   0xD019             BEQ.N    ??Is_Barraicade_1
    928              {
    929                for(i=0;i<FallingEdgeCnt;i++)
   \   00000034   0x2200             MOVS     R2,#+0
   \   00000036   0xE000             B.N      ??Is_Barraicade_2
   \                     ??Is_Barraicade_3: (+1)
   \   00000038   0x1C52             ADDS     R2,R2,#+1
   \                     ??Is_Barraicade_2: (+1)
   \   0000003A   0x.... 0x....      LDR.W    R3,??DataTable12_27
   \   0000003E   0x781B             LDRB     R3,[R3, #+0]
   \   00000040   0x429A             CMP      R2,R3
   \   00000042   0xDA11             BGE.N    ??Is_Barraicade_1
    930                {
    931                  if((FallingEdge[i]>Leftlast)&&(FallingEdge[i]+7<Rightlast))
   \   00000044   0x.... 0x....      LDR.W    R3,??DataTable12_4
   \   00000048   0x781B             LDRB     R3,[R3, #+0]
   \   0000004A   0x....             LDR.N    R7,??DataTable9_15
   \   0000004C   0x5DD7             LDRB     R7,[R2, R7]
   \   0000004E   0x42BB             CMP      R3,R7
   \   00000050   0xD2F2             BCS.N    ??Is_Barraicade_3
   \   00000052   0x....             LDR.N    R3,??DataTable9_15
   \   00000054   0x5CD3             LDRB     R3,[R2, R3]
   \   00000056   0x1DDB             ADDS     R3,R3,#+7
   \   00000058   0x.... 0x....      LDR.W    R7,??DataTable12_20
   \   0000005C   0x783F             LDRB     R7,[R7, #+0]
   \   0000005E   0x42BB             CMP      R3,R7
   \   00000060   0xDAEA             BGE.N    ??Is_Barraicade_3
    932                  {
    933                    left_edge=FallingEdge[i];
   \   00000062   0x....             LDR.N    R1,??DataTable9_15
   \   00000064   0x5C54             LDRB     R4,[R2, R1]
    934                    left_edge_find=1;
   \   00000066   0x2101             MOVS     R1,#+1
    935                    break;        
    936                  }
    937          
    938                }
    939              }
    940              if(RisingEdgeCnt>0)
   \                     ??Is_Barraicade_1: (+1)
   \   00000068   0x....             LDR.N    R2,??DataTable9_9
   \   0000006A   0x7812             LDRB     R2,[R2, #+0]
   \   0000006C   0x2A00             CMP      R2,#+0
   \   0000006E   0xD016             BEQ.N    ??Is_Barraicade_4
    941              {
    942                for(i=RisingEdgeCnt;i>=0;i--)
   \   00000070   0x....             LDR.N    R2,??DataTable9_9
   \   00000072   0x7812             LDRB     R2,[R2, #+0]
   \   00000074   0xE000             B.N      ??Is_Barraicade_5
   \                     ??Is_Barraicade_6: (+1)
   \   00000076   0x1E52             SUBS     R2,R2,#+1
   \                     ??Is_Barraicade_5: (+1)
   \   00000078   0x2A00             CMP      R2,#+0
   \   0000007A   0xD410             BMI.N    ??Is_Barraicade_4
    943                {
    944                  if((RisingEdge[i]<Rightlast)&&(RisingEdge[i]-7>Leftlast))
   \   0000007C   0x....             LDR.N    R3,??DataTable9_10
   \   0000007E   0x5CD3             LDRB     R3,[R2, R3]
   \   00000080   0x.... 0x....      LDR.W    R7,??DataTable12_20
   \   00000084   0x783F             LDRB     R7,[R7, #+0]
   \   00000086   0x42BB             CMP      R3,R7
   \   00000088   0xD2F5             BCS.N    ??Is_Barraicade_6
   \   0000008A   0x....             LDR.N    R3,??DataTable12_4
   \   0000008C   0x781B             LDRB     R3,[R3, #+0]
   \   0000008E   0x....             LDR.N    R7,??DataTable9_10
   \   00000090   0x5DD7             LDRB     R7,[R2, R7]
   \   00000092   0x1FFF             SUBS     R7,R7,#+7
   \   00000094   0x42BB             CMP      R3,R7
   \   00000096   0xDAEE             BGE.N    ??Is_Barraicade_6
    945                  {
    946                    right_edge=RisingEdge[i];
   \   00000098   0x....             LDR.N    R0,??DataTable9_10
   \   0000009A   0x5C15             LDRB     R5,[R2, R0]
    947                    right_edge_find=1;
   \   0000009C   0x2001             MOVS     R0,#+1
    948                    break;
    949          
    950                  }
    951                }
    952              }
    953              
    954              if(right_edge_find && left_edge_find)
   \                     ??Is_Barraicade_4: (+1)
   \   0000009E   0x2800             CMP      R0,#+0
   \   000000A0   0xD035             BEQ.N    ??Is_Barraicade_0
   \   000000A2   0x2900             CMP      R1,#+0
   \   000000A4   0xD033             BEQ.N    ??Is_Barraicade_0
    955              {
    956                if(ABS(right_edge-left_edge)/Pre_Width[0]>0.2)
   \   000000A6   0x1B28             SUBS     R0,R5,R4
   \   000000A8   0x2801             CMP      R0,#+1
   \   000000AA   0xDB01             BLT.N    ??Is_Barraicade_7
   \   000000AC   0x1B28             SUBS     R0,R5,R4
   \   000000AE   0xE001             B.N      ??Is_Barraicade_8
   \                     ??Is_Barraicade_7: (+1)
   \   000000B0   0x4268             RSBS     R0,R5,#+0
   \   000000B2   0x1B00             SUBS     R0,R0,R4
   \                     ??Is_Barraicade_8: (+1)
   \   000000B4   0x.... 0x....      BL       __aeabi_i2f
   \   000000B8   0x.... 0x....      LDR.W    R1,??DataTable12_26
   \   000000BC   0x6809             LDR      R1,[R1, #+0]
   \   000000BE   0x.... 0x....      BL       __aeabi_fdiv
   \   000000C2   0x.... 0x....      LDR.W    R1,??DataTable12_28  ;; 0x3e4ccccd
   \   000000C6   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000CA   0xD820             BHI.N    ??Is_Barraicade_0
    957                {
    958                  RoadType=2;//表示障碍
   \   000000CC   0x2002             MOVS     R0,#+2
   \   000000CE   0x....             LDR.N    R1,??DataTable12_13
   \   000000D0   0x7008             STRB     R0,[R1, #+0]
    959                  
    960                  Character_Distance=Distance;
   \   000000D2   0x....             LDR.N    R0,??DataTable12_16
   \   000000D4   0x6800             LDR      R0,[R0, #+0]
   \   000000D6   0x....             LDR.N    R1,??DataTable12_14
   \   000000D8   0x6008             STR      R0,[R1, #+0]
    961                
    962          
    963                  if(Rightlast-right_edge>half_width) B_RightOrLeft=LEFT; //左边出现了障碍
   \   000000DA   0x....             LDR.N    R0,??DataTable12_20
   \   000000DC   0x7800             LDRB     R0,[R0, #+0]
   \   000000DE   0x1B40             SUBS     R0,R0,R5
   \   000000E0   0x.... 0x....      BL       __aeabi_i2f
   \   000000E4   0x0001             MOVS     R1,R0
   \   000000E6   0x0030             MOVS     R0,R6
   \   000000E8   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000EC   0xD202             BCS.N    ??Is_Barraicade_9
   \   000000EE   0x2000             MOVS     R0,#+0
   \   000000F0   0x....             LDR.N    R1,??DataTable12_29
   \   000000F2   0x6008             STR      R0,[R1, #+0]
    964                  if(left_edge-Leftlast>half_width)   B_RightOrLeft=RIGHT;  //右边出现了障碍 
   \                     ??Is_Barraicade_9: (+1)
   \   000000F4   0x....             LDR.N    R0,??DataTable12_4
   \   000000F6   0x7800             LDRB     R0,[R0, #+0]
   \   000000F8   0x1A20             SUBS     R0,R4,R0
   \   000000FA   0x.... 0x....      BL       __aeabi_i2f
   \   000000FE   0x0001             MOVS     R1,R0
   \   00000100   0x0030             MOVS     R0,R6
   \   00000102   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000106   0xD202             BCS.N    ??Is_Barraicade_0
   \   00000108   0x2001             MOVS     R0,#+1
   \   0000010A   0x....             LDR.N    R1,??DataTable12_29
   \   0000010C   0x6008             STR      R0,[R1, #+0]
    965                }
    966          
    967              }
    968          
    969            }
    970          
    971          }
   \                     ??Is_Barraicade_0: (+1)
   \   0000010E   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    972          
    973          
    974          

   \                                 In section .text, align 2, keep-with-next
    975          void Barraicade(void)
    976          {
   \                     Barraicade: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    977            int i;
    978            if(B_RightOrLeft==LEFT)//障碍在左边,右线是对的
   \   00000002   0x....             LDR.N    R0,??DataTable12_29
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD15F             BNE.N    ??Barraicade_0
    979            {
    980               LPLD_GPIO_Output_b(PTE, 12, 0);
   \   0000000A   0x2200             MOVS     R2,#+0
   \   0000000C   0x210C             MOVS     R1,#+12
   \   0000000E   0x....             LDR.N    R0,??DataTable12_15  ;; 0x400ff100
   \   00000010   0x.... 0x....      BL       LPLD_GPIO_Output_b
    981              if(FindNearest(RIGHT,Rightlast))
   \   00000014   0x....             LDR.N    R0,??DataTable12_20
   \   00000016   0x7801             LDRB     R1,[R0, #+0]
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0x.... 0x....      BL       FindNearest
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0xD009             BEQ.N    ??Barraicade_1
    982              {
    983                Right=FallingEdge[FallingEdgeIndex];
   \   00000022   0x....             LDR.N    R0,??DataTable12_30
   \   00000024   0x....             LDR.N    R1,??DataTable12_3
   \   00000026   0x6809             LDR      R1,[R1, #+0]
   \   00000028   0x5C08             LDRB     R0,[R1, R0]
   \   0000002A   0x....             LDR.N    R1,??DataTable12_31
   \   0000002C   0x6008             STR      R0,[R1, #+0]
    984                Rightlastfind=1;
   \   0000002E   0x2001             MOVS     R0,#+1
   \   00000030   0x....             LDR.N    R1,??DataTable12_2
   \   00000032   0x7008             STRB     R0,[R1, #+0]
   \   00000034   0xE002             B.N      ??Barraicade_2
    985              }
    986              else Rightlastfind=0;
   \                     ??Barraicade_1: (+1)
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x....             LDR.N    R1,??DataTable12_2
   \   0000003A   0x7008             STRB     R0,[R1, #+0]
    987              if(Distance-Character_Distance<0.3) //在障碍区内
   \                     ??Barraicade_2: (+1)
   \   0000003C   0x....             LDR.N    R0,??DataTable12_16
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0x....             LDR.N    R1,??DataTable12_14
   \   00000042   0x6809             LDR      R1,[R1, #+0]
   \   00000044   0x.... 0x....      BL       __aeabi_fsub
   \   00000048   0x....             LDR.N    R1,??DataTable12_32  ;; 0x3e99999a
   \   0000004A   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000004E   0xD210             BCS.N    ??Barraicade_3
    988              {
    989                /*Leftlastfind=0;
    990                if(RisingEdgeCnt>0)
    991                {
    992                  for(i=RisingEdgeCnt-1;i>=0;i--)
    993                  {
    994                    if(RisingEdge[i]+10<Right)
    995                    {
    996                      Left=RisingEdge[i];
    997                      Leftlastfind=1;
    998                      break;
    999                    
   1000                    }
   1001          
   1002                  }
   1003          
   1004                }*/
   1005                Left=Right-(uint8)(Pre_Width[0]*0.5); 
   \   00000050   0x....             LDR.N    R0,??DataTable12_31
   \   00000052   0x6804             LDR      R4,[R0, #+0]
   \   00000054   0x....             LDR.N    R0,??DataTable12_26
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0x.... 0x....      BL       __aeabi_f2d
   \   0000005C   0x2200             MOVS     R2,#+0
   \   0000005E   0x....             LDR.N    R3,??DataTable12_33  ;; 0x3fe00000
   \   00000060   0x.... 0x....      BL       __aeabi_dmul
   \   00000064   0x.... 0x....      BL       __aeabi_d2iz
   \   00000068   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006A   0x1A20             SUBS     R0,R4,R0
   \   0000006C   0x....             LDR.N    R1,??DataTable12_18
   \   0000006E   0x6008             STR      R0,[R1, #+0]
   \   00000070   0xE013             B.N      ??Barraicade_4
   1006          
   1007              }
   1008              else
   1009              {
   1010                if(FindNearest(LEFT,Leftlast))
   \                     ??Barraicade_3: (+1)
   \   00000072   0x....             LDR.N    R0,??DataTable12_4
   \   00000074   0x7801             LDRB     R1,[R0, #+0]
   \   00000076   0x2000             MOVS     R0,#+0
   \   00000078   0x.... 0x....      BL       FindNearest
   \   0000007C   0x2800             CMP      R0,#+0
   \   0000007E   0xD009             BEQ.N    ??Barraicade_5
   1011                {
   1012                  Left=RisingEdge[RisingEdgeIndex];
   \   00000080   0x....             LDR.N    R0,??DataTable12_34
   \   00000082   0x....             LDR.N    R1,??DataTable12_5
   \   00000084   0x6809             LDR      R1,[R1, #+0]
   \   00000086   0x5C08             LDRB     R0,[R1, R0]
   \   00000088   0x....             LDR.N    R1,??DataTable12_18
   \   0000008A   0x6008             STR      R0,[R1, #+0]
   1013                  Leftlastfind=1;
   \   0000008C   0x2001             MOVS     R0,#+1
   \   0000008E   0x....             LDR.N    R1,??DataTable12_35
   \   00000090   0x7008             STRB     R0,[R1, #+0]
   \   00000092   0xE002             B.N      ??Barraicade_4
   1014                
   1015                }
   1016                else Leftlastfind=0;
   \                     ??Barraicade_5: (+1)
   \   00000094   0x2000             MOVS     R0,#+0
   \   00000096   0x....             LDR.N    R1,??DataTable12_35
   \   00000098   0x7008             STRB     R0,[R1, #+0]
   1017              
   1018              
   1019              
   1020              }
   1021              
   1022              
   1023              if(Leftlastfind && Rightlastfind) Reference_Width=Right-Left;
   \                     ??Barraicade_4: (+1)
   \   0000009A   0x....             LDR.N    R0,??DataTable12_35
   \   0000009C   0x7800             LDRB     R0,[R0, #+0]
   \   0000009E   0x2800             CMP      R0,#+0
   \   000000A0   0xD00B             BEQ.N    ??Barraicade_6
   \   000000A2   0x....             LDR.N    R0,??DataTable12_2
   \   000000A4   0x7800             LDRB     R0,[R0, #+0]
   \   000000A6   0x2800             CMP      R0,#+0
   \   000000A8   0xD007             BEQ.N    ??Barraicade_6
   \   000000AA   0x....             LDR.N    R0,??DataTable12_31
   \   000000AC   0x6800             LDR      R0,[R0, #+0]
   \   000000AE   0x....             LDR.N    R1,??DataTable12_18
   \   000000B0   0x6809             LDR      R1,[R1, #+0]
   \   000000B2   0x1A40             SUBS     R0,R0,R1
   \   000000B4   0x....             LDR.N    R1,??DataTable12_36
   \   000000B6   0x6008             STR      R0,[R1, #+0]
   \   000000B8   0xE073             B.N      ??Barraicade_7
   1024              else
   1025              {
   1026              
   1027                Left=Right-Reference_Width;
   \                     ??Barraicade_6: (+1)
   \   000000BA   0x....             LDR.N    R0,??DataTable12_31
   \   000000BC   0x6800             LDR      R0,[R0, #+0]
   \   000000BE   0x....             LDR.N    R1,??DataTable12_36
   \   000000C0   0x6809             LDR      R1,[R1, #+0]
   \   000000C2   0x1A40             SUBS     R0,R0,R1
   \   000000C4   0x....             LDR.N    R1,??DataTable12_18
   \   000000C6   0x6008             STR      R0,[R1, #+0]
   \   000000C8   0xE06B             B.N      ??Barraicade_7
   1028              }
   1029          
   1030          
   1031          
   1032          
   1033          
   1034          
   1035            }
   1036            else if(B_RightOrLeft==RIGHT) // 障碍在右边，左线正确
   \                     ??Barraicade_0: (+1)
   \   000000CA   0x....             LDR.N    R0,??DataTable12_29
   \   000000CC   0x6800             LDR      R0,[R0, #+0]
   \   000000CE   0x2801             CMP      R0,#+1
   \   000000D0   0xD167             BNE.N    ??Barraicade_7
   1037            {
   1038              if(FindNearest(LEFT,Leftlast))
   \   000000D2   0x....             LDR.N    R0,??DataTable12_4
   \   000000D4   0x7801             LDRB     R1,[R0, #+0]
   \   000000D6   0x2000             MOVS     R0,#+0
   \   000000D8   0x.... 0x....      BL       FindNearest
   \   000000DC   0x2800             CMP      R0,#+0
   \   000000DE   0xD009             BEQ.N    ??Barraicade_8
   1039              {
   1040                Left=RisingEdge[RisingEdgeIndex];
   \   000000E0   0x....             LDR.N    R0,??DataTable12_34
   \   000000E2   0x....             LDR.N    R1,??DataTable12_5
   \   000000E4   0x6809             LDR      R1,[R1, #+0]
   \   000000E6   0x5C08             LDRB     R0,[R1, R0]
   \   000000E8   0x....             LDR.N    R1,??DataTable12_18
   \   000000EA   0x6008             STR      R0,[R1, #+0]
   1041                Leftlastfind=1;
   \   000000EC   0x2001             MOVS     R0,#+1
   \   000000EE   0x....             LDR.N    R1,??DataTable12_35
   \   000000F0   0x7008             STRB     R0,[R1, #+0]
   \   000000F2   0xE002             B.N      ??Barraicade_9
   1042              
   1043              }
   1044              else Leftlastfind=0;
   \                     ??Barraicade_8: (+1)
   \   000000F4   0x2000             MOVS     R0,#+0
   \   000000F6   0x....             LDR.N    R1,??DataTable12_35
   \   000000F8   0x7008             STRB     R0,[R1, #+0]
   1045              
   1046              if(Distance - Character_Distance<0.3)//在障碍区域内
   \                     ??Barraicade_9: (+1)
   \   000000FA   0x....             LDR.N    R0,??DataTable12_16
   \   000000FC   0x6800             LDR      R0,[R0, #+0]
   \   000000FE   0x....             LDR.N    R1,??DataTable12_14
   \   00000100   0x6809             LDR      R1,[R1, #+0]
   \   00000102   0x.... 0x....      BL       __aeabi_fsub
   \   00000106   0x....             LDR.N    R1,??DataTable12_32  ;; 0x3e99999a
   \   00000108   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000010C   0xD21C             BCS.N    ??Barraicade_10
   1047              {
   1048                Rightlastfind=0;
   \   0000010E   0x2000             MOVS     R0,#+0
   \   00000110   0x....             LDR.N    R1,??DataTable12_2
   \   00000112   0x7008             STRB     R0,[R1, #+0]
   1049                if(FallingEdgeCnt>0)
   \   00000114   0x....             LDR.N    R0,??DataTable12_27
   \   00000116   0x7800             LDRB     R0,[R0, #+0]
   \   00000118   0x2800             CMP      R0,#+0
   \   0000011A   0xD02B             BEQ.N    ??Barraicade_11
   1050                {
   1051                  for(i=0;i<FallingEdgeCnt;i++)
   \   0000011C   0x2000             MOVS     R0,#+0
   \   0000011E   0xE000             B.N      ??Barraicade_12
   \                     ??Barraicade_13: (+1)
   \   00000120   0x1C40             ADDS     R0,R0,#+1
   \                     ??Barraicade_12: (+1)
   \   00000122   0x....             LDR.N    R1,??DataTable12_27
   \   00000124   0x7809             LDRB     R1,[R1, #+0]
   \   00000126   0x4288             CMP      R0,R1
   \   00000128   0xDA24             BGE.N    ??Barraicade_11
   1052                  {
   1053                    if(FallingEdge[i]>Left+10)
   \   0000012A   0x....             LDR.N    R1,??DataTable12_18
   \   0000012C   0x6809             LDR      R1,[R1, #+0]
   \   0000012E   0x310A             ADDS     R1,R1,#+10
   \   00000130   0x....             LDR.N    R2,??DataTable12_30
   \   00000132   0x5C82             LDRB     R2,[R0, R2]
   \   00000134   0x4291             CMP      R1,R2
   \   00000136   0xDAF3             BGE.N    ??Barraicade_13
   1054                    {
   1055                      Right=FallingEdge[i];
   \   00000138   0x....             LDR.N    R1,??DataTable12_30
   \   0000013A   0x5C40             LDRB     R0,[R0, R1]
   \   0000013C   0x....             LDR.N    R1,??DataTable12_31
   \   0000013E   0x6008             STR      R0,[R1, #+0]
   1056                      Rightlastfind=1;
   \   00000140   0x2001             MOVS     R0,#+1
   \   00000142   0x....             LDR.N    R1,??DataTable12_2
   \   00000144   0x7008             STRB     R0,[R1, #+0]
   1057                      break;
   \   00000146   0xE015             B.N      ??Barraicade_11
   1058                    
   1059                    }
   1060          
   1061                  }
   1062          
   1063                }
   1064          
   1065              }
   1066              else  //出障碍
   1067              {
   1068                if(FindNearest(Right,Rightlastfind))
   \                     ??Barraicade_10: (+1)
   \   00000148   0x....             LDR.N    R0,??DataTable12_2
   \   0000014A   0x7801             LDRB     R1,[R0, #+0]
   \   0000014C   0x....             LDR.N    R0,??DataTable12_31
   \   0000014E   0x6800             LDR      R0,[R0, #+0]
   \   00000150   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000152   0x.... 0x....      BL       FindNearest
   \   00000156   0x2800             CMP      R0,#+0
   \   00000158   0xD009             BEQ.N    ??Barraicade_14
   1069                {
   1070                  Right=FallingEdge[FallingEdgeIndex];
   \   0000015A   0x....             LDR.N    R0,??DataTable12_30
   \   0000015C   0x....             LDR.N    R1,??DataTable12_3
   \   0000015E   0x6809             LDR      R1,[R1, #+0]
   \   00000160   0x5C08             LDRB     R0,[R1, R0]
   \   00000162   0x....             LDR.N    R1,??DataTable12_31
   \   00000164   0x6008             STR      R0,[R1, #+0]
   1071                  Rightlastfind=1;
   \   00000166   0x2001             MOVS     R0,#+1
   \   00000168   0x....             LDR.N    R1,??DataTable12_2
   \   0000016A   0x7008             STRB     R0,[R1, #+0]
   \   0000016C   0xE002             B.N      ??Barraicade_11
   1072          
   1073                }
   1074                else Rightlastfind=0;
   \                     ??Barraicade_14: (+1)
   \   0000016E   0x2000             MOVS     R0,#+0
   \   00000170   0x....             LDR.N    R1,??DataTable12_2
   \   00000172   0x7008             STRB     R0,[R1, #+0]
   1075          
   1076              }
   1077              if(Leftlastfind && Rightlastfind) Reference_Width=Right-Left;
   \                     ??Barraicade_11: (+1)
   \   00000174   0x....             LDR.N    R0,??DataTable12_35
   \   00000176   0x7800             LDRB     R0,[R0, #+0]
   \   00000178   0x2800             CMP      R0,#+0
   \   0000017A   0xD00B             BEQ.N    ??Barraicade_15
   \   0000017C   0x....             LDR.N    R0,??DataTable12_2
   \   0000017E   0x7800             LDRB     R0,[R0, #+0]
   \   00000180   0x2800             CMP      R0,#+0
   \   00000182   0xD007             BEQ.N    ??Barraicade_15
   \   00000184   0x....             LDR.N    R0,??DataTable12_31
   \   00000186   0x6800             LDR      R0,[R0, #+0]
   \   00000188   0x....             LDR.N    R1,??DataTable12_18
   \   0000018A   0x6809             LDR      R1,[R1, #+0]
   \   0000018C   0x1A40             SUBS     R0,R0,R1
   \   0000018E   0x....             LDR.N    R1,??DataTable12_36
   \   00000190   0x6008             STR      R0,[R1, #+0]
   \   00000192   0xE006             B.N      ??Barraicade_7
   1078              else 
   1079              {
   1080                Right=Left+Reference_Width;
   \                     ??Barraicade_15: (+1)
   \   00000194   0x....             LDR.N    R0,??DataTable12_18
   \   00000196   0x6800             LDR      R0,[R0, #+0]
   \   00000198   0x....             LDR.N    R1,??DataTable12_36
   \   0000019A   0x6809             LDR      R1,[R1, #+0]
   \   0000019C   0x1808             ADDS     R0,R1,R0
   \   0000019E   0x....             LDR.N    R1,??DataTable12_31
   \   000001A0   0x6008             STR      R0,[R1, #+0]
   1081              
   1082              }
   1083          
   1084            }
   1085            
   1086            if(Distance-Character_Distance>0.5)
   \                     ??Barraicade_7: (+1)
   \   000001A2   0x....             LDR.N    R0,??DataTable12_16
   \   000001A4   0x6800             LDR      R0,[R0, #+0]
   \   000001A6   0x....             LDR.N    R1,??DataTable12_14
   \   000001A8   0x6809             LDR      R1,[R1, #+0]
   \   000001AA   0x.... 0x....      BL       __aeabi_fsub
   \   000001AE   0x....             LDR.N    R1,??DataTable12_9  ;; 0x3f000001
   \   000001B0   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000001B4   0xD802             BHI.N    ??Barraicade_16
   1087              RoadType=0;
   \   000001B6   0x2000             MOVS     R0,#+0
   \   000001B8   0x....             LDR.N    R1,??DataTable12_13
   \   000001BA   0x7008             STRB     R0,[R1, #+0]
   1088          
   1089          }
   \                     ??Barraicade_16: (+1)
   \   000001BC   0xBD10             POP      {R4,PC}          ;; return
   1090          
   1091          
   1092          
   1093          
   1094          
   1095          
   1096          
   1097          
   1098          
   1099          
   1100          
   1101          
   1102          
   1103          
   1104          
   1105          
   1106          
   1107          

   \                                 In section .text, align 2, keep-with-next
   1108          void Prejudge()//预判函数
   1109          {
   1110            if(RisingEdgeCnt==0 && FallingEdgeCnt==0)
   \                     Prejudge: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable12_37
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD10D             BNE.N    ??Prejudge_0
   \   00000008   0x....             LDR.N    R0,??DataTable12_27
   \   0000000A   0x7800             LDRB     R0,[R0, #+0]
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD109             BNE.N    ??Prejudge_0
   1111            {
   1112              RoadType=1;
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x....             LDR.N    R1,??DataTable12_13
   \   00000014   0x7008             STRB     R0,[R1, #+0]
   1113              curve_to_cross=0;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x....             LDR.N    R1,??DataTable11_1
   \   0000001A   0x7008             STRB     R0,[R1, #+0]
   1114              Character_Distance=Distance;//进入十字后记录特征距离
   \   0000001C   0x....             LDR.N    R0,??DataTable12_16
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0x....             LDR.N    R1,??DataTable12_14
   \   00000022   0x6008             STR      R0,[R1, #+0]
   1115            }
   1116          
   1117          }
   \                     ??Prejudge_0: (+1)
   \   00000024   0x4770             BX       LR               ;; return
   1118          
   1119          /***
   1120          **填充发送到上位机的信息
   1121          ***/
   1122          

   \                                 In section .text, align 2, keep-with-next
   1123          void Fill_CCD_Info(void)
   1124          {
   1125          
   1126            CCD_Draw_Buff[128]=Leftlast;
   \                     Fill_CCD_Info: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable12_4
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x....             LDR.N    R1,??DataTable12
   \   00000006   0xF881 0x0080      STRB     R0,[R1, #+128]
   1127            CCD_Draw_Buff[129]=Rightlast;  
   \   0000000A   0x....             LDR.N    R0,??DataTable12_20
   \   0000000C   0x7800             LDRB     R0,[R0, #+0]
   \   0000000E   0x....             LDR.N    R1,??DataTable12
   \   00000010   0xF881 0x0081      STRB     R0,[R1, #+129]
   1128          }
   \   00000014   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     Max_Peak

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     RisingEdgeCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     FallingEdgeCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     RisingEdge

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x........         DC32     FallingEdge

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x........         DC32     CCD_Diff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x........         DC32     CCD_Buff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x........         DC32     Threshold

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   0x........         DC32     Left

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   0x........         DC32     Right

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \   00000000   0x........         DC32     Leftlastfind

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x........         DC32     Rightlastfind

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     RisingEdgeIndex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x........         DC32     FallingEdgeIndex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x........         DC32     Leftlast

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x........         DC32     FallingEdgeCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x........         DC32     rightfind

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x........         DC32     CarSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x40200001         DC32     0x40200001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x........         DC32     RoadType

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x........         DC32     Distance

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x........         DC32     Character_Distance

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x........         DC32     Rightlast

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   0x........         DC32     leftfind

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x........         DC32     Reference_Width

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x3FF00000         DC32     0x3ff00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x........         DC32     Max_Value

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   0x........         DC32     CCD_Offset

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \   00000000   0x405FC000         DC32     0x405fc000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_4:
   \   00000000   0x........         DC32     Brightness

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_5:
   \   00000000   0x3FEE6666         DC32     0x3fee6666

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_6:
   \   00000000   0x9999999A         DC32     0x9999999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_7:
   \   00000000   0x3FA99999         DC32     0x3fa99999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_8:
   \   00000000   0x........         DC32     Leftlastfind

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_9:
   \   00000000   0x........         DC32     RisingEdgeCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_10:
   \   00000000   0x........         DC32     RisingEdge

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_11:
   \   00000000   0x........         DC32     Right

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_12:
   \   00000000   0x........         DC32     Left

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_13:
   \   00000000   0x........         DC32     ??Pre_Width_Out_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_14:
   \   00000000   0x........         DC32     ??Pre_Width_All_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_15:
   \   00000000   0x........         DC32     FallingEdge

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x........         DC32     ??Width_Change_Cnt_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \   00000000   0x........         DC32     ??Pre_Width_Out_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_2:
   \   00000000   0x........         DC32     ??Pre_Width_All_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x........         DC32     ??Width_Change_Cnt_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x........         DC32     curve_to_cross

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x........         DC32     CCD_Draw_Buff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \   00000000   0x........         DC32     ??All_Find

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \   00000000   0x........         DC32     Rightlastfind

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_3:
   \   00000000   0x........         DC32     FallingEdgeIndex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_4:
   \   00000000   0x........         DC32     Leftlast

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_5:
   \   00000000   0x........         DC32     RisingEdgeIndex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_6:
   \   00000000   0x........         DC32     Middle_Err

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_7:
   \   00000000   0x3F800001         DC32     0x3f800001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_8:
   \   00000000   0x........         DC32     Correct_Err

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_9:
   \   00000000   0x3F000001         DC32     0x3f000001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_10:
   \   00000000   0x........         DC32     ??Cross_Road_Cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_11:
   \   00000000   0x3E19999A         DC32     0x3e19999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_12:
   \   00000000   0x........         DC32     ??Normal_Cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_13:
   \   00000000   0x........         DC32     RoadType

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_14:
   \   00000000   0x........         DC32     Character_Distance

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_15:
   \   00000000   0x400FF100         DC32     0x400ff100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_16:
   \   00000000   0x........         DC32     Distance

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_17:
   \   00000000   0x3ECCCCCD         DC32     0x3ecccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_18:
   \   00000000   0x........         DC32     Left

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_19:
   \   00000000   0x........         DC32     Max_Peak

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_20:
   \   00000000   0x........         DC32     Rightlast

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_21:
   \   00000000   0x40500000         DC32     0x40500000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_22:
   \   00000000   0x........         DC32     Middle_Last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_23:
   \   00000000   0x40000001         DC32     0x40000001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_24:
   \   00000000   0x40400001         DC32     0x40400001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_25:
   \   00000000   0xBF800000         DC32     0xbf800000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_26:
   \   00000000   0x........         DC32     Pre_Width

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_27:
   \   00000000   0x........         DC32     FallingEdgeCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_28:
   \   00000000   0x3E4CCCCD         DC32     0x3e4ccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_29:
   \   00000000   0x........         DC32     B_RightOrLeft

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_30:
   \   00000000   0x........         DC32     FallingEdge

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_31:
   \   00000000   0x........         DC32     Right

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_32:
   \   00000000   0x3E99999A         DC32     0x3e99999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_33:
   \   00000000   0x3FE00000         DC32     0x3fe00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_34:
   \   00000000   0x........         DC32     RisingEdge

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_35:
   \   00000000   0x........         DC32     Leftlastfind

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_36:
   \   00000000   0x........         DC32     Reference_Width

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_37:
   \   00000000   0x........         DC32     RisingEdgeCnt
   1129          
   1130          
   1131          
   1132          
   1133          
   1134          
   1135          
   1136          
   1137          
   1138          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Barraicade
         8   -> FindNearest
         8   -> LPLD_GPIO_Output_b
         8   -> __aeabi_d2iz
         8   -> __aeabi_dmul
         8   -> __aeabi_f2d
         8   -> __aeabi_fsub
         8 __aeabi_cfcmple
         8 __aeabi_cfrcmple
      16   Brightness_Calculate
        16   -> __aeabi_d2f
        16   -> __aeabi_d2iz
        16   -> __aeabi_dadd
        16   -> __aeabi_ddiv
        16   -> __aeabi_dmul
        16   -> __aeabi_f2d
        16   -> __aeabi_fmul
        16   -> __aeabi_i2d
        16   -> __aeabi_i2f
        16   -> __aeabi_ui2d
       8   CrossRoad
         8   -> FindNearest
         8   -> Find_BothLine
         8   -> __aeabi_fadd
         8   -> __aeabi_fsub
         8 __aeabi_cfcmple
         8 __aeabi_cfrcmple
       0   EdgeFind
       0   Fill_CCD_Info
       0   FindBoundary
       4   FindNearest
       4   Find_BothLine
      24   Is_Barraicade
        24   -> __aeabi_fdiv
        24   -> __aeabi_i2f
        24 __aeabi_cfcmple
        24 __aeabi_cfrcmple
       0   Is_CrossRoad
       8   Normal
         8   -> FindBoundary
         8   -> FindNearest
         8   -> Find_BothLine
         8 __aeabi_cfrcmple
       0   Prejudge
       0   Push_And_Pull
       8   RoadType_Distinguish
         8   -> Barraicade
         8   -> Brightness_Calculate
         8   -> CrossRoad
         8   -> EdgeFind
         8   -> Is_Barraicade
         8   -> Is_CrossRoad
         8   -> LPLD_GPIO_Output_b
         8   -> Normal
         8   -> Prejudge
         8   -> Push_And_Pull
         8   -> __aeabi_d2f
         8   -> __aeabi_dadd
         8   -> __aeabi_ddiv
         8   -> __aeabi_dsub
         8   -> __aeabi_fadd
         8   -> __aeabi_fsub
         8   -> __aeabi_i2d
         8   -> __aeabi_i2f
         8 __aeabi_cfcmple
         8 __aeabi_cfrcmple


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable10_2
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_10
       4  ??DataTable12_11
       4  ??DataTable12_12
       4  ??DataTable12_13
       4  ??DataTable12_14
       4  ??DataTable12_15
       4  ??DataTable12_16
       4  ??DataTable12_17
       4  ??DataTable12_18
       4  ??DataTable12_19
       4  ??DataTable12_2
       4  ??DataTable12_20
       4  ??DataTable12_21
       4  ??DataTable12_22
       4  ??DataTable12_23
       4  ??DataTable12_24
       4  ??DataTable12_25
       4  ??DataTable12_26
       4  ??DataTable12_27
       4  ??DataTable12_28
       4  ??DataTable12_29
       4  ??DataTable12_3
       4  ??DataTable12_30
       4  ??DataTable12_31
       4  ??DataTable12_32
       4  ??DataTable12_33
       4  ??DataTable12_34
       4  ??DataTable12_35
       4  ??DataTable12_36
       4  ??DataTable12_37
       4  ??DataTable12_4
       4  ??DataTable12_5
       4  ??DataTable12_6
       4  ??DataTable12_7
       4  ??DataTable12_8
       4  ??DataTable12_9
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable8
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_10
       4  ??DataTable9_11
       4  ??DataTable9_12
       4  ??DataTable9_13
       4  ??DataTable9_14
       4  ??DataTable9_15
       4  ??DataTable9_2
       4  ??DataTable9_3
       4  ??DataTable9_4
       4  ??DataTable9_5
       4  ??DataTable9_6
       4  ??DataTable9_7
       4  ??DataTable9_8
       4  ??DataTable9_9
       1  All_Find
       4  B_RightOrLeft
     446  Barraicade
     244  Brightness_Calculate
     512  CCD_Diff
       4  Character_Distance
       4  Correct_Err
     604  CrossRoad
       1  Cross_Road_Cnt
     390  EdgeFind
       8  FallingEdge
       1  FallingEdgeCnt
       4  FallingEdgeIndex
      22  Fill_CCD_Info
     164  FindBoundary
     244  FindNearest
     476  Find_BothLine
     272  Is_Barraicade
     618  Is_CrossRoad
       4  Left
       1  Leftlast
       1  Leftlastfind
       4  Max_Peak
       4  Middle_Err
       4  Middle_Last
       1  Nor_Cnt
    1520  Normal
       1  Normal_Cnt
      20  Pre_Width
       4  Pre_Width_All_L
       4  Pre_Width_All_R
       4  Pre_Width_Out_L
       4  Pre_Width_Out_R
      38  Prejudge
      26  Push_And_Pull
       4  Reference_Width
       4  Right
       1  Rightlast
       1  Rightlastfind
       8  RisingEdge
       1  RisingEdgeCnt
       4  RisingEdgeIndex
       1  RoadType
     746  RoadType_Distinguish
       1  STATE
       1  Threshold
       4  Width_Change_Cnt_L
       4  Width_Change_Cnt_R
       1  curve_to_cross
       1  leftfind
       1  rightfind
       4  temp_s_p

 
   624 bytes in section .bss
    12 bytes in section .data
 6 146 bytes in section .text
 
 6 146 bytes of CODE memory
   636 bytes of DATA memory

Errors: none
Warnings: none
