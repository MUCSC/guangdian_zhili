###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        16/Jul/2016  13:18:55
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\app\init.c
#    Command line =  
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\app\init.c
#        -D LPLD_K60 -D USE_K60DZ10 -lCN
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\RAM\List\
#        -lB
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\RAM\List\
#        -o
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\RAM\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        E:\IAR\anzhuang\arm\INC\c\DLib_Config_Normal.h -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\app\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\CPU\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\common\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\LPLD\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\LPLD\HW\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\FatFs\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\FatFs\option\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\USB\common\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\USB\driver\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\USB\descriptor\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\USB\class\
#        -Ol -I E:\IAR\anzhuang\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\RAM\List\init.lst
#    Object file  =  
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\RAM\Obj\init.o
#
###############################################################################

F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\app\init.c
      1          #include "init.h"
      2          
      3          
      4          
      5          //变量定义

   \                                 In section .bss, align 4
      6          FTM_InitTypeDef ftm_init_struct;
   \                     ftm_init_struct:
   \   00000000                      DS8 28

   \                                 In section .bss, align 4
      7          PIT_InitTypeDef pit_init_struct;
   \                     pit_init_struct:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
      8          GPIO_InitTypeDef gpio_init_struct;
   \                     gpio_init_struct:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
      9          ADC_InitTypeDef  adc_init_struct;
   \                     adc_init_struct:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
     10          LPTMR_InitTypeDef lptmr_init_struct;
   \                     lptmr_init_struct:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
     11          UART_InitTypeDef uart_init_struct;
   \                     uart_init_struct:
   \   00000000                      DS8 28
     12          
     13          
     14          
     15          
     16          
     17          /*****
     18          *** 右编码器初始化
     19          *****/

   \                                 In section .text, align 2, keep-with-next
     20          void Right_Encoder_Init(void)
     21          {
   \                     Right_Encoder_Init: (+1)
   \   00000000   0xB5E0             PUSH     {R5-R7,LR}
     22            //配置正交解码功能参数
     23            ftm_init_struct.FTM_Ftmx = FTM1;              //使用的是FTM1
   \   00000002   0x....             LDR.N    R0,??DataTable7  ;; 0x40039000
   \   00000004   0x....             LDR.N    R1,??DataTable7_1
   \   00000006   0x6008             STR      R0,[R1, #+0]
     24            ftm_init_struct.FTM_Mode = FTM_MODE_QD;       //正交解码功能
   \   00000008   0x2004             MOVS     R0,#+4
   \   0000000A   0x....             LDR.N    R1,??DataTable7_1
   \   0000000C   0x7108             STRB     R0,[R1, #+4]
     25            ftm_init_struct.FTM_QdMode = QD_MODE_PHAB;    //AB相输入模式
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x....             LDR.N    R1,??DataTable7_1
   \   00000012   0x7488             STRB     R0,[R1, #+18]
     26            //初始化FTM
     27            LPLD_FTM_Init(ftm_init_struct);
   \   00000014   0x....             LDR.N    R1,??DataTable7_1
   \   00000016   0xB084             SUB      SP,SP,#+16
   \   00000018   0x4668             MOV      R0,SP
   \   0000001A   0x221C             MOVS     R2,#+28
   \   0000001C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000020   0xBC0F             POP      {R0-R3}
   \   00000022   0x.... 0x....      BL       LPLD_FTM_Init
     28            //使能AB相输入通道
     29            //PTB0引脚接A相输入、PTB1引脚接B相输入
     30            LPLD_FTM_QD_Enable(FTM1, PTB0, PTB1);
   \   00000026   0x2221             MOVS     R2,#+33
   \   00000028   0x2120             MOVS     R1,#+32
   \   0000002A   0x....             LDR.N    R0,??DataTable7  ;; 0x40039000
   \   0000002C   0x.... 0x....      BL       LPLD_FTM_QD_Enable
     31          }
   \   00000030   0xBD07             POP      {R0-R2,PC}       ;; return
     32          
     33          

   \                                 In section .text, align 2, keep-with-next
     34          void Motor_Init(void)
     35          {
   \                     Motor_Init: (+1)
   \   00000000   0xB5E0             PUSH     {R5-R7,LR}
     36                  //电机模块的初始化
     37              ftm_init_struct.FTM_Ftmx = FTM0;
   \   00000002   0x....             LDR.N    R0,??DataTable7_2  ;; 0x40038000
   \   00000004   0x....             LDR.N    R1,??DataTable7_1
   \   00000006   0x6008             STR      R0,[R1, #+0]
     38              ftm_init_struct.FTM_Mode = FTM_MODE_PWM;
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0x....             LDR.N    R1,??DataTable7_1
   \   0000000C   0x7108             STRB     R0,[R1, #+4]
     39              ftm_init_struct.FTM_PwmFreq = 2500;
   \   0000000E   0xF640 0x10C4      MOVW     R0,#+2500
   \   00000012   0x....             LDR.N    R1,??DataTable7_1
   \   00000014   0x6088             STR      R0,[R1, #+8]
     40              LPLD_FTM_Init(ftm_init_struct);
   \   00000016   0x....             LDR.N    R1,??DataTable7_1
   \   00000018   0xB084             SUB      SP,SP,#+16
   \   0000001A   0x4668             MOV      R0,SP
   \   0000001C   0x221C             MOVS     R2,#+28
   \   0000001E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000022   0xBC0F             POP      {R0-R3}
   \   00000024   0x.... 0x....      BL       LPLD_FTM_Init
     41              
     42          
     43              LPLD_FTM_PWM_Enable(FTM0, FTM_Ch4, 50, PTD4, ALIGN_LEFT); //pwm3
   \   00000028   0x2028             MOVS     R0,#+40
   \   0000002A   0x9000             STR      R0,[SP, #+0]
   \   0000002C   0x2360             MOVS     R3,#+96
   \   0000002E   0x2232             MOVS     R2,#+50
   \   00000030   0x2104             MOVS     R1,#+4
   \   00000032   0x....             LDR.N    R0,??DataTable7_2  ;; 0x40038000
   \   00000034   0x.... 0x....      BL       LPLD_FTM_PWM_Enable
     44              LPLD_FTM_PWM_Enable(FTM0, FTM_Ch5, 50, PTD5, ALIGN_LEFT); //pwm2
   \   00000038   0x2028             MOVS     R0,#+40
   \   0000003A   0x9000             STR      R0,[SP, #+0]
   \   0000003C   0x2361             MOVS     R3,#+97
   \   0000003E   0x2232             MOVS     R2,#+50
   \   00000040   0x2105             MOVS     R1,#+5
   \   00000042   0x....             LDR.N    R0,??DataTable7_2  ;; 0x40038000
   \   00000044   0x.... 0x....      BL       LPLD_FTM_PWM_Enable
     45              LPLD_FTM_PWM_Enable(FTM0, FTM_Ch6, 50, PTD6, ALIGN_LEFT); //pwm1
   \   00000048   0x2028             MOVS     R0,#+40
   \   0000004A   0x9000             STR      R0,[SP, #+0]
   \   0000004C   0x2362             MOVS     R3,#+98
   \   0000004E   0x2232             MOVS     R2,#+50
   \   00000050   0x2106             MOVS     R1,#+6
   \   00000052   0x....             LDR.N    R0,??DataTable7_2  ;; 0x40038000
   \   00000054   0x.... 0x....      BL       LPLD_FTM_PWM_Enable
     46              LPLD_FTM_PWM_Enable(FTM0, FTM_Ch7, 50, PTD7, ALIGN_LEFT); //pwm0
   \   00000058   0x2028             MOVS     R0,#+40
   \   0000005A   0x9000             STR      R0,[SP, #+0]
   \   0000005C   0x2363             MOVS     R3,#+99
   \   0000005E   0x2232             MOVS     R2,#+50
   \   00000060   0x2107             MOVS     R1,#+7
   \   00000062   0x....             LDR.N    R0,??DataTable7_2  ;; 0x40038000
   \   00000064   0x.... 0x....      BL       LPLD_FTM_PWM_Enable
     47          
     48          }
   \   00000068   0xBD07             POP      {R0-R2,PC}       ;; return
     49          
     50          

   \                                 In section .text, align 2, keep-with-next
     51          void Servo_Init(void)
     52          {
   \                     Servo_Init: (+1)
   \   00000000   0xB5E0             PUSH     {R5-R7,LR}
     53              ftm_init_struct.FTM_Ftmx = FTM2;
   \   00000002   0x....             LDR.N    R0,??DataTable7_3  ;; 0x400b8000
   \   00000004   0x....             LDR.N    R1,??DataTable7_1
   \   00000006   0x6008             STR      R0,[R1, #+0]
     54              ftm_init_struct.FTM_Mode = FTM_MODE_PWM;
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0x....             LDR.N    R1,??DataTable7_1
   \   0000000C   0x7108             STRB     R0,[R1, #+4]
     55              ftm_init_struct.FTM_PwmFreq = 50;   //设置频率为50Hz
   \   0000000E   0x2032             MOVS     R0,#+50
   \   00000010   0x....             LDR.N    R1,??DataTable7_1
   \   00000012   0x6088             STR      R0,[R1, #+8]
     56              LPLD_FTM_Init(ftm_init_struct);
   \   00000014   0x....             LDR.N    R1,??DataTable7_1
   \   00000016   0xB084             SUB      SP,SP,#+16
   \   00000018   0x4668             MOV      R0,SP
   \   0000001A   0x221C             MOVS     R2,#+28
   \   0000001C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000020   0xBC0F             POP      {R0-R3}
   \   00000022   0x.... 0x....      BL       LPLD_FTM_Init
     57               
     58              LPLD_FTM_PWM_Enable(FTM2, FTM_Ch1, 740,PTB19, ALIGN_LEFT);   
   \   00000026   0x2028             MOVS     R0,#+40
   \   00000028   0x9000             STR      R0,[SP, #+0]
   \   0000002A   0x2333             MOVS     R3,#+51
   \   0000002C   0xF44F 0x7239      MOV      R2,#+740
   \   00000030   0x2101             MOVS     R1,#+1
   \   00000032   0x....             LDR.N    R0,??DataTable7_3  ;; 0x400b8000
   \   00000034   0x.... 0x....      BL       LPLD_FTM_PWM_Enable
     59          }
   \   00000038   0xBD07             POP      {R0-R2,PC}       ;; return
     60          
     61          
     62          
     63          
     64          
     65          /*
     66           * 初始化PIT定时器
     67           *
     68           */

   \                                 In section .text, align 2, keep-with-next
     69          void Pit_Init(void)
     70          {
   \                     Pit_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     71            //配置定时周期中断参数
     72            pit_init_struct.PIT_Pitx = PIT0;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x....             LDR.N    R1,??DataTable7_4
   \   00000006   0x7008             STRB     R0,[R1, #+0]
     73            pit_init_struct.PIT_PeriodMs = 1;    //1毫秒产生一次中断
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0x....             LDR.N    R1,??DataTable7_4
   \   0000000C   0x6088             STR      R0,[R1, #+8]
     74            pit_init_struct.PIT_Isr = pit_isr;
   \   0000000E   0x....             LDR.N    R0,??DataTable7_5
   \   00000010   0x....             LDR.N    R1,??DataTable7_4
   \   00000012   0x6108             STR      R0,[R1, #+16]
     75            //初始化PIT
     76            LPLD_PIT_Init(pit_init_struct);
   \   00000014   0x....             LDR.N    R1,??DataTable7_4
   \   00000016   0xB084             SUB      SP,SP,#+16
   \   00000018   0x4668             MOV      R0,SP
   \   0000001A   0x2214             MOVS     R2,#+20
   \   0000001C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000020   0xBC0F             POP      {R0-R3}
   \   00000022   0x.... 0x....      BL       LPLD_PIT_Init
     77            //使能PIT定时中断
     78            LPLD_PIT_EnableIrq(pit_init_struct);
   \   00000026   0x....             LDR.N    R1,??DataTable7_4
   \   00000028   0xB084             SUB      SP,SP,#+16
   \   0000002A   0x4668             MOV      R0,SP
   \   0000002C   0x2214             MOVS     R2,#+20
   \   0000002E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000032   0xBC0F             POP      {R0-R3}
   \   00000034   0x.... 0x....      BL       LPLD_PIT_EnableIrq
     79          }
   \   00000038   0xBD01             POP      {R0,PC}          ;; return
     80          
     81          

   \                                 In section .text, align 2, keep-with-next
     82          void Left_Encoder_Init(void)
     83          {
   \                     Left_Encoder_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     84          
     85              lptmr_init_struct.LPTMR_Mode = LPTMR_MODE_PLACC;
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x....             LDR.N    R1,??DataTable7_6
   \   00000006   0x7008             STRB     R0,[R1, #+0]
     86              lptmr_init_struct.LPTMR_PluseAccInput = LPTMR_ALT2;
   \   00000008   0x2002             MOVS     R0,#+2
   \   0000000A   0x....             LDR.N    R1,??DataTable7_6
   \   0000000C   0x7108             STRB     R0,[R1, #+4]
     87              
     88              lptmr_init_struct.LPTMR_IntEnable = FALSE;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x....             LDR.N    R1,??DataTable7_6
   \   00000012   0x7148             STRB     R0,[R1, #+5]
     89              LPLD_LPTMR_Init(lptmr_init_struct); 
   \   00000014   0x....             LDR.N    R0,??DataTable7_6
   \   00000016   0xC807             LDM      R0,{R0-R2}
   \   00000018   0x.... 0x....      BL       LPLD_LPTMR_Init
     90          
     91          
     92          }
   \   0000001C   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
     93          void Voltage_Adc_init(void)
     94          {
   \                     Voltage_Adc_init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     95            /*/adc_init_struct.ADC_Adcx = ADC1;
     96            adc_init_struct.ADC_BitMode = SE_10BIT;
     97            adc_init_struct.ADC_CalEnable = TRUE; //使能自动校准
     98            LPLD_ADC_Init(adc_init_struct); 
     99            
    100            LPLD_ADC_Chn_Enable(ADC1, AD14);*/
    101          
    102            
    103            adc_init_struct.ADC_Adcx = ADC1;
   \   00000002   0x....             LDR.N    R0,??DataTable7_7  ;; 0x400bb000
   \   00000004   0x....             LDR.N    R1,??DataTable7_8
   \   00000006   0x6008             STR      R0,[R1, #+0]
    104            adc_init_struct.ADC_DiffMode = ADC_SE;        //单端采集
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x....             LDR.N    R1,??DataTable7_8
   \   0000000C   0x7108             STRB     R0,[R1, #+4]
    105            adc_init_struct.ADC_BitMode = SE_10BIT;       //单端12位精度
   \   0000000E   0x2002             MOVS     R0,#+2
   \   00000010   0x....             LDR.N    R1,??DataTable7_8
   \   00000012   0x7148             STRB     R0,[R1, #+5]
    106            //adc_init_struct.ADC_SampleTimeCfg = SAMTIME_SHORT;    //短采样时间
    107            //adc_init_struct.ADC_HwAvgSel = HW_4AVG;       //4次硬件平均
    108            adc_init_struct.ADC_CalEnable = TRUE; //使能初始化校验
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0x....             LDR.N    R1,??DataTable7_8
   \   00000018   0x72C8             STRB     R0,[R1, #+11]
    109            //初始化ADC
    110            LPLD_ADC_Init(adc_init_struct);
   \   0000001A   0x....             LDR.N    R1,??DataTable7_8
   \   0000001C   0xB084             SUB      SP,SP,#+16
   \   0000001E   0x4668             MOV      R0,SP
   \   00000020   0x2214             MOVS     R2,#+20
   \   00000022   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000026   0xBC0F             POP      {R0-R3}
   \   00000028   0x.... 0x....      BL       LPLD_ADC_Init
    111          
    112            LPLD_ADC_Chn_Enable(ADC1, AD14);
   \   0000002C   0x210E             MOVS     R1,#+14
   \   0000002E   0x....             LDR.N    R0,??DataTable7_7  ;; 0x400bb000
   \   00000030   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
    113          
    114          }
   \   00000034   0xBD01             POP      {R0,PC}          ;; return
    115          
    116          /****
    117          * 参数赋值初始化
    118          ****/
    119          

   \                                 In section .text, align 2, keep-with-next
    120          void Para_Init(void)
    121          {
    122            PID_Speed.P=0.45;
   \                     Para_Init: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable7_9  ;; 0x3ee66666
   \   00000002   0x....             LDR.N    R1,??DataTable7_10
   \   00000004   0x6008             STR      R0,[R1, #+0]
    123            PID_Speed.I=0.0023;
   \   00000006   0x....             LDR.N    R0,??DataTable7_11  ;; 0x3b16bb99
   \   00000008   0x....             LDR.N    R1,??DataTable7_10
   \   0000000A   0x6088             STR      R0,[R1, #+8]
    124            PID_Speed.D=0.02;
   \   0000000C   0x....             LDR.N    R0,??DataTable7_12  ;; 0x3ca3d70a
   \   0000000E   0x....             LDR.N    R1,??DataTable7_10
   \   00000010   0x6108             STR      R0,[R1, #+16]
    125            PID_Turn.P=0.53;
   \   00000012   0x....             LDR.N    R0,??DataTable7_13  ;; 0x3f07ae14
   \   00000014   0x....             LDR.N    R1,??DataTable7_14
   \   00000016   0x6008             STR      R0,[R1, #+0]
    126            PID_Turn.I=0.1;
   \   00000018   0x....             LDR.N    R0,??DataTable7_15  ;; 0x3dcccccd
   \   0000001A   0x....             LDR.N    R1,??DataTable7_14
   \   0000001C   0x6088             STR      R0,[R1, #+8]
    127            PID_Turn.D=0.7446;
   \   0000001E   0x....             LDR.N    R0,??DataTable7_16  ;; 0x3f3e9e1b
   \   00000020   0x....             LDR.N    R1,??DataTable7_14
   \   00000022   0x6108             STR      R0,[R1, #+16]
    128            SetSpeed=3.5;
   \   00000024   0x....             LDR.N    R0,??DataTable7_17  ;; 0x40600000
   \   00000026   0x....             LDR.N    R1,??DataTable7_18
   \   00000028   0x6008             STR      R0,[R1, #+0]
    129            Threshold=30;
   \   0000002A   0x201E             MOVS     R0,#+30
   \   0000002C   0x....             LDR.N    R1,??DataTable7_19
   \   0000002E   0x7008             STRB     R0,[R1, #+0]
    130            CCD_Offset=200;
   \   00000030   0x20C8             MOVS     R0,#+200
   \   00000032   0x....             LDR.N    R1,??DataTable7_20
   \   00000034   0x7008             STRB     R0,[R1, #+0]
    131            Fuzzy_Kp=0.05;
   \   00000036   0x....             LDR.N    R0,??DataTable7_21  ;; 0x3d4ccccd
   \   00000038   0x....             LDR.N    R1,??DataTable7_22
   \   0000003A   0x6008             STR      R0,[R1, #+0]
    132            Fuzzy_Kd=0.0002;
   \   0000003C   0x....             LDR.N    R0,??DataTable7_23  ;; 0x3951b717
   \   0000003E   0x....             LDR.N    R1,??DataTable7_24
   \   00000040   0x6008             STR      R0,[R1, #+0]
    133            Distance=0;
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x....             LDR.N    R1,??DataTable7_25
   \   00000046   0x6008             STR      R0,[R1, #+0]
    134            K_CrossRoad=1.4;
   \   00000048   0x....             LDR.N    R0,??DataTable7_26  ;; 0x3fb33333
   \   0000004A   0x....             LDR.N    R1,??DataTable7_27
   \   0000004C   0x6008             STR      R0,[R1, #+0]
    135            P_CrossRoad=1.2;
   \   0000004E   0x....             LDR.N    R0,??DataTable7_28  ;; 0x3f99999a
   \   00000050   0x....             LDR.N    R1,??DataTable7_29
   \   00000052   0x6008             STR      R0,[R1, #+0]
    136            Correct_Err=0.026; 
   \   00000054   0x....             LDR.N    R0,??DataTable7_30  ;; 0x3cd4fdf4
   \   00000056   0x....             LDR.N    R1,??DataTable7_31
   \   00000058   0x6008             STR      R0,[R1, #+0]
    137          }
   \   0000005A   0x4770             BX       LR               ;; return
    138          
    139          
    140          /****
    141          * GPIO初始化函数
    142          ****/
    143          

   \                                 In section .text, align 2, keep-with-next
    144          void GPIO_Init(void)
    145          {
   \                     GPIO_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    146              //初始化按键B1-B6
    147              gpio_init_struct.GPIO_PTx = PTA;
   \   00000002   0x....             LDR.N    R0,??DataTable7_32  ;; 0x400ff000
   \   00000004   0x....             LDR.N    R1,??DataTable7_33
   \   00000006   0x6008             STR      R0,[R1, #+0]
    148              gpio_init_struct.GPIO_Dir = DIR_INPUT;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x....             LDR.N    R1,??DataTable7_33
   \   0000000C   0x7308             STRB     R0,[R1, #+12]
    149              gpio_init_struct.GPIO_Pins = GPIO_Pin9|GPIO_Pin10|GPIO_Pin11|GPIO_Pin12|GPIO_Pin13|GPIO_Pin14;
   \   0000000E   0xF44F 0x40FC      MOV      R0,#+32256
   \   00000012   0x....             LDR.N    R1,??DataTable7_33
   \   00000014   0x6048             STR      R0,[R1, #+4]
    150              gpio_init_struct.GPIO_PinControl = INPUT_PULL_UP;
   \   00000016   0x2003             MOVS     R0,#+3
   \   00000018   0x....             LDR.N    R1,??DataTable7_33
   \   0000001A   0x6088             STR      R0,[R1, #+8]
    151              LPLD_GPIO_Init(gpio_init_struct); 
   \   0000001C   0x....             LDR.N    R1,??DataTable7_33
   \   0000001E   0xB084             SUB      SP,SP,#+16
   \   00000020   0x4668             MOV      R0,SP
   \   00000022   0x2214             MOVS     R2,#+20
   \   00000024   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000028   0xBC0F             POP      {R0-R3}
   \   0000002A   0x.... 0x....      BL       LPLD_GPIO_Init
    152          
    153              //初始化拨码开关
    154              gpio_init_struct.GPIO_PTx = PTB;
   \   0000002E   0x....             LDR.N    R0,??DataTable7_34  ;; 0x400ff040
   \   00000030   0x....             LDR.N    R1,??DataTable7_33
   \   00000032   0x6008             STR      R0,[R1, #+0]
    155              gpio_init_struct.GPIO_Dir = DIR_INPUT;
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x....             LDR.N    R1,??DataTable7_33
   \   00000038   0x7308             STRB     R0,[R1, #+12]
    156              gpio_init_struct.GPIO_Pins = GPIO_Pin2|GPIO_Pin3|GPIO_Pin4|GPIO_Pin5;
   \   0000003A   0x203C             MOVS     R0,#+60
   \   0000003C   0x....             LDR.N    R1,??DataTable7_33
   \   0000003E   0x6048             STR      R0,[R1, #+4]
    157              gpio_init_struct.GPIO_PinControl = INPUT_PULL_UP;
   \   00000040   0x2003             MOVS     R0,#+3
   \   00000042   0x....             LDR.N    R1,??DataTable7_33
   \   00000044   0x6088             STR      R0,[R1, #+8]
    158              LPLD_GPIO_Init(gpio_init_struct); 
   \   00000046   0x....             LDR.N    R1,??DataTable7_33
   \   00000048   0xB084             SUB      SP,SP,#+16
   \   0000004A   0x4668             MOV      R0,SP
   \   0000004C   0x2214             MOVS     R2,#+20
   \   0000004E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000052   0xBC0F             POP      {R0-R3}
   \   00000054   0x.... 0x....      BL       LPLD_GPIO_Init
    159          
    160              
    161              //初始化LED
    162              gpio_init_struct.GPIO_PTx = PTE;
   \   00000058   0x....             LDR.N    R0,??DataTable7_35  ;; 0x400ff100
   \   0000005A   0x....             LDR.N    R1,??DataTable7_33
   \   0000005C   0x6008             STR      R0,[R1, #+0]
    163              gpio_init_struct.GPIO_Dir = DIR_OUTPUT;
   \   0000005E   0x2001             MOVS     R0,#+1
   \   00000060   0x....             LDR.N    R1,??DataTable7_33
   \   00000062   0x7308             STRB     R0,[R1, #+12]
    164              gpio_init_struct.GPIO_Output = OUTPUT_H;
   \   00000064   0x2001             MOVS     R0,#+1
   \   00000066   0x....             LDR.N    R1,??DataTable7_33
   \   00000068   0x7348             STRB     R0,[R1, #+13]
    165              gpio_init_struct.GPIO_Pins = GPIO_Pin10|GPIO_Pin11|GPIO_Pin12;
   \   0000006A   0xF44F 0x50E0      MOV      R0,#+7168
   \   0000006E   0x....             LDR.N    R1,??DataTable7_33
   \   00000070   0x6048             STR      R0,[R1, #+4]
    166              gpio_init_struct.GPIO_PinControl =  OUTPUT_DSH;
   \   00000072   0x2040             MOVS     R0,#+64
   \   00000074   0x....             LDR.N    R1,??DataTable7_33
   \   00000076   0x6088             STR      R0,[R1, #+8]
    167              LPLD_GPIO_Init(gpio_init_struct);
   \   00000078   0x....             LDR.N    R1,??DataTable7_33
   \   0000007A   0xB084             SUB      SP,SP,#+16
   \   0000007C   0x4668             MOV      R0,SP
   \   0000007E   0x2214             MOVS     R2,#+20
   \   00000080   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000084   0xBC0F             POP      {R0-R3}
   \   00000086   0x.... 0x....      BL       LPLD_GPIO_Init
    168          
    169              
    170              
    171              
    172              //初始化OLED屏幕
    173              gpio_init_struct.GPIO_PTx = PTA;
   \   0000008A   0x....             LDR.N    R0,??DataTable7_32  ;; 0x400ff000
   \   0000008C   0x....             LDR.N    R1,??DataTable7_33
   \   0000008E   0x6008             STR      R0,[R1, #+0]
    174              gpio_init_struct.GPIO_Dir = DIR_OUTPUT;
   \   00000090   0x2001             MOVS     R0,#+1
   \   00000092   0x....             LDR.N    R1,??DataTable7_33
   \   00000094   0x7308             STRB     R0,[R1, #+12]
    175              gpio_init_struct.GPIO_Output = OUTPUT_H;
   \   00000096   0x2001             MOVS     R0,#+1
   \   00000098   0x....             LDR.N    R1,??DataTable7_33
   \   0000009A   0x7348             STRB     R0,[R1, #+13]
    176              gpio_init_struct.GPIO_Pins = GPIO_Pin16 | GPIO_Pin17 | GPIO_Pin24 | GPIO_Pin25;
   \   0000009C   0x....             LDR.N    R0,??DataTable7_36  ;; 0x3030000
   \   0000009E   0x....             LDR.N    R1,??DataTable7_33
   \   000000A0   0x6048             STR      R0,[R1, #+4]
    177          
    178              LPLD_GPIO_Init(gpio_init_struct); 
   \   000000A2   0x....             LDR.N    R1,??DataTable7_33
   \   000000A4   0xB084             SUB      SP,SP,#+16
   \   000000A6   0x4668             MOV      R0,SP
   \   000000A8   0x2214             MOVS     R2,#+20
   \   000000AA   0x.... 0x....      BL       __aeabi_memcpy4
   \   000000AE   0xBC0F             POP      {R0-R3}
   \   000000B0   0x.... 0x....      BL       LPLD_GPIO_Init
    179          
    180              /*
    181              //远程控制GND管脚
    182              gpio_init_struct.GPIO_PTx = PTB;
    183              gpio_init_struct.GPIO_Dir = DIR_OUTPUT;
    184              gpio_init_struct.GPIO_Output = OUTPUT_L;
    185              gpio_init_struct.GPIO_Pins = GPIO_Pin11;
    186              LPLD_GPIO_Init(gpio_init_struct);  
    187              
    188              
    189              //远程控制D0、D1管脚
    190              gpio_init_struct.GPIO_PTx = PTB;
    191              gpio_init_struct.GPIO_Dir = DIR_INPUT;
    192              gpio_init_struct.GPIO_Pins = GPIO_Pin16|GPIO_Pin17;
    193              LPLD_GPIO_Init(gpio_init_struct); */
    194          
    195          
    196          }
   \   000000B4   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x40039000         DC32     0x40039000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x........         DC32     ftm_init_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x400B8000         DC32     0x400b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x........         DC32     pit_init_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x........         DC32     pit_isr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x........         DC32     lptmr_init_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   0x400BB000         DC32     0x400bb000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \   00000000   0x........         DC32     adc_init_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \   00000000   0x3EE66666         DC32     0x3ee66666

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_10:
   \   00000000   0x........         DC32     PID_Speed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_11:
   \   00000000   0x3B16BB99         DC32     0x3b16bb99

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_12:
   \   00000000   0x3CA3D70A         DC32     0x3ca3d70a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_13:
   \   00000000   0x3F07AE14         DC32     0x3f07ae14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_14:
   \   00000000   0x........         DC32     PID_Turn

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_15:
   \   00000000   0x3DCCCCCD         DC32     0x3dcccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_16:
   \   00000000   0x3F3E9E1B         DC32     0x3f3e9e1b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_17:
   \   00000000   0x40600000         DC32     0x40600000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_18:
   \   00000000   0x........         DC32     SetSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_19:
   \   00000000   0x........         DC32     Threshold

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_20:
   \   00000000   0x........         DC32     CCD_Offset

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_21:
   \   00000000   0x3D4CCCCD         DC32     0x3d4ccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_22:
   \   00000000   0x........         DC32     Fuzzy_Kp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_23:
   \   00000000   0x3951B717         DC32     0x3951b717

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_24:
   \   00000000   0x........         DC32     Fuzzy_Kd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_25:
   \   00000000   0x........         DC32     Distance

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_26:
   \   00000000   0x3FB33333         DC32     0x3fb33333

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_27:
   \   00000000   0x........         DC32     K_CrossRoad

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_28:
   \   00000000   0x3F99999A         DC32     0x3f99999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_29:
   \   00000000   0x........         DC32     P_CrossRoad

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_30:
   \   00000000   0x3CD4FDF4         DC32     0x3cd4fdf4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_31:
   \   00000000   0x........         DC32     Correct_Err

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_32:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_33:
   \   00000000   0x........         DC32     gpio_init_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_34:
   \   00000000   0x400FF040         DC32     0x400ff040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_35:
   \   00000000   0x400FF100         DC32     0x400ff100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_36:
   \   00000000   0x03030000         DC32     0x3030000
    197          
    198          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   GPIO_Init
         8   -> LPLD_GPIO_Init
        24   -> __aeabi_memcpy4
       8   Left_Encoder_Init
         8   -> LPLD_LPTMR_Init
      32   Motor_Init
        16   -> LPLD_FTM_Init
        16   -> LPLD_FTM_PWM_Enable
        32   -> __aeabi_memcpy4
       0   Para_Init
      24   Pit_Init
         8   -> LPLD_PIT_EnableIrq
         8   -> LPLD_PIT_Init
        24   -> __aeabi_memcpy4
      32   Right_Encoder_Init
        16   -> LPLD_FTM_Init
        16   -> LPLD_FTM_QD_Enable
        32   -> __aeabi_memcpy4
      32   Servo_Init
        16   -> LPLD_FTM_Init
        16   -> LPLD_FTM_PWM_Enable
        32   -> __aeabi_memcpy4
      24   Voltage_Adc_init
         8   -> LPLD_ADC_Chn_Enable
         8   -> LPLD_ADC_Init
        24   -> __aeabi_memcpy4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_10
       4  ??DataTable7_11
       4  ??DataTable7_12
       4  ??DataTable7_13
       4  ??DataTable7_14
       4  ??DataTable7_15
       4  ??DataTable7_16
       4  ??DataTable7_17
       4  ??DataTable7_18
       4  ??DataTable7_19
       4  ??DataTable7_2
       4  ??DataTable7_20
       4  ??DataTable7_21
       4  ??DataTable7_22
       4  ??DataTable7_23
       4  ??DataTable7_24
       4  ??DataTable7_25
       4  ??DataTable7_26
       4  ??DataTable7_27
       4  ??DataTable7_28
       4  ??DataTable7_29
       4  ??DataTable7_3
       4  ??DataTable7_30
       4  ??DataTable7_31
       4  ??DataTable7_32
       4  ??DataTable7_33
       4  ??DataTable7_34
       4  ??DataTable7_35
       4  ??DataTable7_36
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
       4  ??DataTable7_9
     182  GPIO_Init
      30  Left_Encoder_Init
     106  Motor_Init
      92  Para_Init
      58  Pit_Init
      50  Right_Encoder_Init
      58  Servo_Init
      54  Voltage_Adc_init
      20  adc_init_struct
      28  ftm_init_struct
      20  gpio_init_struct
      12  lptmr_init_struct
      20  pit_init_struct
      28  uart_init_struct

 
 128 bytes in section .bss
 778 bytes in section .text
 
 778 bytes of CODE memory
 128 bytes of DATA memory

Errors: none
Warnings: none
