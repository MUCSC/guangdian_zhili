###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        15/Jul/2016  15:43:53
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\app\control.c
#    Command line =  
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\app\control.c
#        -D LPLD_K60 -D USE_K60DZ10 -lCN
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\RAM\List\
#        -lB
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\RAM\List\
#        -o
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\RAM\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        E:\IAR\anzhuang\arm\INC\c\DLib_Config_Normal.h -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\app\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\CPU\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\common\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\LPLD\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\LPLD\HW\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\FatFs\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\FatFs\option\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\USB\common\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\USB\driver\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\USB\descriptor\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\USB\class\
#        -Ol -I E:\IAR\anzhuang\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\RAM\List\control.lst
#    Object file  =  
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\RAM\Obj\control.o
#
###############################################################################

F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\app\control.c
      1          #include "control.h"
      2          #include "oled.h"
      3          
      4          #define ABS(x) ((x>0)?(x):(-x))
      5          
      6          //模糊控制

   \                                 In section .bss, align 4
      7          float Delta_P,Delta_D;
   \                     Delta_P:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Delta_D:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      8          float Fuzzy_Kp,Fuzzy_Kd;
   \                     Fuzzy_Kp:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Fuzzy_Kd:
   \   00000000                      DS8 4
      9          //PID

   \                                 In section .bss, align 4
     10          PID PID_Speed,PID_Turn;
   \                     PID_Speed:
   \   00000000                      DS8 28

   \                                 In section .bss, align 4
   \                     PID_Turn:
   \   00000000                      DS8 28
     11          

   \                                 In section .bss, align 4
     12          float Distance=0;//运行的总距离
   \                     Distance:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     13          float CarSpeed=0,SetSpeed=0,ControlSpeed=0;
   \                     CarSpeed:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     SetSpeed:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ControlSpeed:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     14          float SpeedControlIntegral=0;
   \                     SpeedControlIntegral:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     15          float SpeedControlOutNew=0,SpeedControlOutOld=0;
   \                     SpeedControlOutNew:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     SpeedControlOutOld:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     16          float DirControlOutNew=0,DirControlOutOld=0;
   \                     DirControlOutNew:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     DirControlOutOld:
   \   00000000                      DS8 4
     17          
     18          //转向角度

   \                                 In section .bss, align 4
     19          float K_CrossRoad=0,P_CrossRoad=0;
   \                     K_CrossRoad:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     P_CrossRoad:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     20          float Delt_error;
   \                     Delt_error:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     21          int Speed_Filter_Times=10;//速度平滑控制
   \                     Speed_Filter_Times:
   \   00000000   0x0000000A         DC32 10

   \                                 In section .bss, align 4
     22          int SpeedCount=0,DirectionCount=0;
   \                     SpeedCount:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     DirectionCount:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     23          float qd1_result=0,qd1_result_old=0;
   \                     qd1_result:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     qd1_result_old:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     24          float qd2_result=0,qd2_result_old=0;
   \                     qd2_result:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     qd2_result_old:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     25          float Delta_dError_Range[5]={2.2,3.4,4.3,5.4,6.3};
   \                     Delta_dError_Range:
   \   00000000   0x400CCCCD         DC32 400CCCCDH, 4059999AH, 4089999AH, 40ACCCCDH, 40C9999AH
   \              0x4059999A   
   \              0x4089999A   
   \              0x40ACCCCD   
   \              0x40C9999A   

   \                                 In section .data, align 4
     26          float K_Varialbe_Speed[6]={100,95,90,85,80,75};
   \                     K_Varialbe_Speed:
   \   00000000   0x42C80000         DC32 42C80000H, 42BE0000H, 42B40000H, 42AA0000H, 42A00000H, 42960000H
   \              0x42BE0000   
   \              0x42B40000   
   \              0x42AA0000   
   \              0x42A00000   
   \              0x42960000   

   \                                 In section .bss, align 4
     27          float Pre_Delta_Error,Delta_Prederror[5]={0};
   \                     Pre_Delta_Error:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Delta_Prederror:
   \   00000000                      DS8 20
     28          /*****
     29          **获取速度、获取运行总距离
     30          *****/

   \                                 In section .text, align 2, keep-with-next
     31          void Get_Speed(void)
     32          {
   \                     Get_Speed: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
     33            qd1_result_old=qd1_result;
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable8
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   0000000C   0x6008             STR      R0,[R1, #+0]
     34            qd2_result_old=qd2_result;  
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable8_3
   \   00000018   0x6008             STR      R0,[R1, #+0]
     35            qd1_result=LPLD_LPTMR_GetPulseAcc()*3.54;//获取左轮速度
   \   0000001A   0x.... 0x....      BL       LPLD_LPTMR_GetPulseAcc
   \   0000001E   0x.... 0x....      BL       __aeabi_ui2d
   \   00000022   0x.... 0x....      LDR.W    R2,??DataTable8_4  ;; 0x851eb852
   \   00000026   0x.... 0x....      LDR.W    R3,??DataTable8_5  ;; 0x400c51eb
   \   0000002A   0x.... 0x....      BL       __aeabi_dmul
   \   0000002E   0x.... 0x....      BL       __aeabi_d2f
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable8
   \   00000036   0x6008             STR      R0,[R1, #+0]
     36            ;//获取右轮速度
     37            if(LPLD_FTM_GetCounter(FTM1)<30000)
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable8_6  ;; 0x40039000
   \   0000003C   0x.... 0x....      BL       LPLD_FTM_GetCounter
   \   00000040   0xF247 0x5130      MOVW     R1,#+30000
   \   00000044   0x4288             CMP      R0,R1
   \   00000046   0xDA09             BGE.N    ??Get_Speed_0
     38            {
     39              qd2_result=LPLD_FTM_GetCounter(FTM1);
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable8_6  ;; 0x40039000
   \   0000004C   0x.... 0x....      BL       LPLD_FTM_GetCounter
   \   00000050   0x.... 0x....      BL       __aeabi_ui2f
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   00000058   0x6008             STR      R0,[R1, #+0]
   \   0000005A   0xE00C             B.N      ??Get_Speed_1
     40            }
     41            else
     42            {  
     43              qd2_result=LPLD_FTM_GetCounter(FTM1)-65536;
   \                     ??Get_Speed_0: (+1)
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable8_6  ;; 0x40039000
   \   00000060   0x.... 0x....      BL       LPLD_FTM_GetCounter
   \   00000064   0xF100 0x407F      ADD      R0,R0,#-16777216
   \   00000068   0xF510 0x007F      ADDS     R0,R0,#+16711680
   \   0000006C   0x.... 0x....      BL       __aeabi_i2f
   \   00000070   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   00000074   0x6008             STR      R0,[R1, #+0]
     44            }
     45            
     46            qd1_result=0.8*qd1_result_old+0.2*qd1_result;
   \                     ??Get_Speed_1: (+1)
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable8_1
   \   0000007A   0x6800             LDR      R0,[R0, #+0]
   \   0000007C   0x.... 0x....      BL       __aeabi_f2d
   \   00000080   0x.... 0x....      LDR.W    R2,??DataTable8_7  ;; 0x9999999a
   \   00000084   0x.... 0x....      LDR.W    R3,??DataTable8_8  ;; 0x3fe99999
   \   00000088   0x.... 0x....      BL       __aeabi_dmul
   \   0000008C   0x0004             MOVS     R4,R0
   \   0000008E   0x000D             MOVS     R5,R1
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable8
   \   00000094   0x6800             LDR      R0,[R0, #+0]
   \   00000096   0x.... 0x....      BL       __aeabi_f2d
   \   0000009A   0x.... 0x....      LDR.W    R2,??DataTable8_7  ;; 0x9999999a
   \   0000009E   0x.... 0x....      LDR.W    R3,??DataTable8_9  ;; 0x3fc99999
   \   000000A2   0x.... 0x....      BL       __aeabi_dmul
   \   000000A6   0x0022             MOVS     R2,R4
   \   000000A8   0x002B             MOVS     R3,R5
   \   000000AA   0x.... 0x....      BL       __aeabi_dadd
   \   000000AE   0x.... 0x....      BL       __aeabi_d2f
   \   000000B2   0x.... 0x....      LDR.W    R1,??DataTable8
   \   000000B6   0x6008             STR      R0,[R1, #+0]
     47            qd2_result=0.8*qd2_result_old+0.2*qd2_result;  
   \   000000B8   0x.... 0x....      LDR.W    R0,??DataTable8_3
   \   000000BC   0x6800             LDR      R0,[R0, #+0]
   \   000000BE   0x.... 0x....      BL       __aeabi_f2d
   \   000000C2   0x.... 0x....      LDR.W    R2,??DataTable8_7  ;; 0x9999999a
   \   000000C6   0x.... 0x....      LDR.W    R3,??DataTable8_8  ;; 0x3fe99999
   \   000000CA   0x.... 0x....      BL       __aeabi_dmul
   \   000000CE   0x0004             MOVS     R4,R0
   \   000000D0   0x000D             MOVS     R5,R1
   \   000000D2   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   000000D6   0x6800             LDR      R0,[R0, #+0]
   \   000000D8   0x.... 0x....      BL       __aeabi_f2d
   \   000000DC   0x.... 0x....      LDR.W    R2,??DataTable8_7  ;; 0x9999999a
   \   000000E0   0x.... 0x....      LDR.W    R3,??DataTable8_9  ;; 0x3fc99999
   \   000000E4   0x.... 0x....      BL       __aeabi_dmul
   \   000000E8   0x0022             MOVS     R2,R4
   \   000000EA   0x002B             MOVS     R3,R5
   \   000000EC   0x.... 0x....      BL       __aeabi_dadd
   \   000000F0   0x.... 0x....      BL       __aeabi_d2f
   \   000000F4   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   000000F8   0x6008             STR      R0,[R1, #+0]
     48          
     49          
     50            LPLD_FTM_ClearCounter(FTM1);
   \   000000FA   0x.... 0x....      LDR.W    R0,??DataTable8_6  ;; 0x40039000
   \   000000FE   0x.... 0x....      BL       LPLD_FTM_ClearCounter
     51            LPLD_LPTMR_ResetCounter();
   \   00000102   0x.... 0x....      BL       LPLD_LPTMR_ResetCounter
     52            Left_Encoder_Init();
   \   00000106   0x.... 0x....      BL       Left_Encoder_Init
     53            Distance+=(qd1_result/7+qd2_result/7)/4220;  //转化为距离
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable8
   \   0000010E   0x6800             LDR      R0,[R0, #+0]
   \   00000110   0x.... 0x....      LDR.W    R1,??DataTable8_10  ;; 0x40e00000
   \   00000114   0x.... 0x....      BL       __aeabi_fdiv
   \   00000118   0x0004             MOVS     R4,R0
   \   0000011A   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   0000011E   0x6800             LDR      R0,[R0, #+0]
   \   00000120   0x.... 0x....      LDR.W    R1,??DataTable8_10  ;; 0x40e00000
   \   00000124   0x.... 0x....      BL       __aeabi_fdiv
   \   00000128   0x0021             MOVS     R1,R4
   \   0000012A   0x.... 0x....      BL       __aeabi_fadd
   \   0000012E   0x.... 0x....      LDR.W    R1,??DataTable8_11  ;; 0x4583e000
   \   00000132   0x.... 0x....      BL       __aeabi_fdiv
   \   00000136   0x.... 0x....      LDR.W    R1,??DataTable8_12
   \   0000013A   0x6809             LDR      R1,[R1, #+0]
   \   0000013C   0x.... 0x....      BL       __aeabi_fadd
   \   00000140   0x.... 0x....      LDR.W    R1,??DataTable8_12
   \   00000144   0x6008             STR      R0,[R1, #+0]
     54            CarSpeed=CarSpeed*0.1+0.9*(qd1_result/7+qd2_result/7)*200.0/4220.0;  //获取车体速度
   \   00000146   0x.... 0x....      LDR.W    R0,??DataTable8_13
   \   0000014A   0x6800             LDR      R0,[R0, #+0]
   \   0000014C   0x.... 0x....      BL       __aeabi_f2d
   \   00000150   0x.... 0x....      LDR.W    R2,??DataTable8_7  ;; 0x9999999a
   \   00000154   0x.... 0x....      LDR.W    R3,??DataTable8_14  ;; 0x3fb99999
   \   00000158   0x.... 0x....      BL       __aeabi_dmul
   \   0000015C   0x0004             MOVS     R4,R0
   \   0000015E   0x000D             MOVS     R5,R1
   \   00000160   0x.... 0x....      LDR.W    R0,??DataTable8
   \   00000164   0x6800             LDR      R0,[R0, #+0]
   \   00000166   0x.... 0x....      LDR.W    R1,??DataTable8_10  ;; 0x40e00000
   \   0000016A   0x.... 0x....      BL       __aeabi_fdiv
   \   0000016E   0x0006             MOVS     R6,R0
   \   00000170   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   00000174   0x6800             LDR      R0,[R0, #+0]
   \   00000176   0x.... 0x....      LDR.W    R1,??DataTable8_10  ;; 0x40e00000
   \   0000017A   0x.... 0x....      BL       __aeabi_fdiv
   \   0000017E   0x0031             MOVS     R1,R6
   \   00000180   0x.... 0x....      BL       __aeabi_fadd
   \   00000184   0x.... 0x....      BL       __aeabi_f2d
   \   00000188   0x.... 0x....      LDR.W    R2,??DataTable8_15  ;; 0xcccccccd
   \   0000018C   0x.... 0x....      LDR.W    R3,??DataTable8_16  ;; 0x3feccccc
   \   00000190   0x.... 0x....      BL       __aeabi_dmul
   \   00000194   0x2200             MOVS     R2,#+0
   \   00000196   0x.... 0x....      LDR.W    R3,??DataTable8_17  ;; 0x40690000
   \   0000019A   0x.... 0x....      BL       __aeabi_dmul
   \   0000019E   0x2200             MOVS     R2,#+0
   \   000001A0   0x.... 0x....      LDR.W    R3,??DataTable8_18  ;; 0x40b07c00
   \   000001A4   0x.... 0x....      BL       __aeabi_ddiv
   \   000001A8   0x0022             MOVS     R2,R4
   \   000001AA   0x002B             MOVS     R3,R5
   \   000001AC   0x.... 0x....      BL       __aeabi_dadd
   \   000001B0   0x.... 0x....      BL       __aeabi_d2f
   \   000001B4   0x.... 0x....      LDR.W    R1,??DataTable8_13
   \   000001B8   0x6008             STR      R0,[R1, #+0]
     55            
     56            //在不是坡道的情况下
     57            ControlSpeed=ControlSpeed*0.95+CarSpeed*0.05;
   \   000001BA   0x.... 0x....      LDR.W    R0,??DataTable8_19
   \   000001BE   0x6800             LDR      R0,[R0, #+0]
   \   000001C0   0x.... 0x....      BL       __aeabi_f2d
   \   000001C4   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   000001C8   0x.... 0x....      LDR.W    R3,??DataTable8_20  ;; 0x3fee6666
   \   000001CC   0x.... 0x....      BL       __aeabi_dmul
   \   000001D0   0x0004             MOVS     R4,R0
   \   000001D2   0x000D             MOVS     R5,R1
   \   000001D4   0x.... 0x....      LDR.W    R0,??DataTable8_13
   \   000001D8   0x6800             LDR      R0,[R0, #+0]
   \   000001DA   0x.... 0x....      BL       __aeabi_f2d
   \   000001DE   0x.... 0x....      LDR.W    R2,??DataTable8_7  ;; 0x9999999a
   \   000001E2   0x.... 0x....      LDR.W    R3,??DataTable8_21  ;; 0x3fa99999
   \   000001E6   0x.... 0x....      BL       __aeabi_dmul
   \   000001EA   0x0022             MOVS     R2,R4
   \   000001EC   0x002B             MOVS     R3,R5
   \   000001EE   0x.... 0x....      BL       __aeabi_dadd
   \   000001F2   0x.... 0x....      BL       __aeabi_d2f
   \   000001F6   0x.... 0x....      LDR.W    R1,??DataTable8_19
   \   000001FA   0x6008             STR      R0,[R1, #+0]
     58            
     59          }
   \   000001FC   0xBD70             POP      {R4-R6,PC}       ;; return
     60          /******
     61          **计算速度控制量
     62          ******/

   \                                 In section .text, align 2, keep-with-next
     63          void Speed_Control(void)
     64          {
   \                     Speed_Control: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
     65            uint8 i=0;
   \   00000002   0x2400             MOVS     R4,#+0
     66            static float setspeed=0,D_Err;
     67            static float PreError[10]={0};
     68            float Speed_temp=0,SpeedError=0;
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x2500             MOVS     R5,#+0
     69            float SpeedFilterRatio=0.85;
   \   00000008   0x.... 0x....      LDR.W    R6,??DataTable8_22  ;; 0x3f59999a
     70            
     71            
     72            ///////////////////////
     73          
     74            for (i=0;i<4;i++)
   \   0000000C   0x2400             MOVS     R4,#+0
   \   0000000E   0xE00B             B.N      ??Speed_Control_0
     75            {
     76              Delta_Prederror[i]=Delta_Prederror[i+1];
   \                     ??Speed_Control_1: (+1)
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable8_23
   \   00000014   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000016   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   0000001A   0x6840             LDR      R0,[R0, #+4]
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable8_23
   \   00000020   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000022   0xF841 0x0024      STR      R0,[R1, R4, LSL #+2]
     77            
     78            }
   \   00000026   0x1C64             ADDS     R4,R4,#+1
   \                     ??Speed_Control_0: (+1)
   \   00000028   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002A   0x2C04             CMP      R4,#+4
   \   0000002C   0xDBF0             BLT.N    ??Speed_Control_1
     79            Delta_Prederror[4]=Pre_Delta_Error-Delt_error;
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable8_24
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable8_25
   \   00000038   0x6809             LDR      R1,[R1, #+0]
   \   0000003A   0x.... 0x....      BL       __aeabi_fsub
   \   0000003E   0x.... 0x....      LDR.W    R1,??DataTable8_23
   \   00000042   0x6108             STR      R0,[R1, #+16]
     80            
     81            D_Err=Delta_Prederror[4]*0.5+Delta_Prederror[3]*0.2+Delta_Prederror[2]*0.2+Delta_Prederror[1]*0.1;
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable8_23
   \   00000048   0x6900             LDR      R0,[R0, #+16]
   \   0000004A   0x.... 0x....      BL       __aeabi_f2d
   \   0000004E   0x2200             MOVS     R2,#+0
   \   00000050   0x.... 0x....      LDR.W    R3,??DataTable8_26  ;; 0x3fe00000
   \   00000054   0x.... 0x....      BL       __aeabi_dmul
   \   00000058   0x0004             MOVS     R4,R0
   \   0000005A   0x000D             MOVS     R5,R1
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable8_23
   \   00000060   0x68C0             LDR      R0,[R0, #+12]
   \   00000062   0x.... 0x....      BL       __aeabi_f2d
   \   00000066   0x.... 0x....      LDR.W    R2,??DataTable8_7  ;; 0x9999999a
   \   0000006A   0x.... 0x....      LDR.W    R3,??DataTable8_9  ;; 0x3fc99999
   \   0000006E   0x.... 0x....      BL       __aeabi_dmul
   \   00000072   0x0022             MOVS     R2,R4
   \   00000074   0x002B             MOVS     R3,R5
   \   00000076   0x.... 0x....      BL       __aeabi_dadd
   \   0000007A   0x0004             MOVS     R4,R0
   \   0000007C   0x000D             MOVS     R5,R1
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable8_23
   \   00000082   0x6880             LDR      R0,[R0, #+8]
   \   00000084   0x.... 0x....      BL       __aeabi_f2d
   \   00000088   0x.... 0x....      LDR.W    R2,??DataTable8_7  ;; 0x9999999a
   \   0000008C   0x.... 0x....      LDR.W    R3,??DataTable8_9  ;; 0x3fc99999
   \   00000090   0x.... 0x....      BL       __aeabi_dmul
   \   00000094   0x0022             MOVS     R2,R4
   \   00000096   0x002B             MOVS     R3,R5
   \   00000098   0x.... 0x....      BL       __aeabi_dadd
   \   0000009C   0x0004             MOVS     R4,R0
   \   0000009E   0x000D             MOVS     R5,R1
   \   000000A0   0x.... 0x....      LDR.W    R0,??DataTable8_23
   \   000000A4   0x6840             LDR      R0,[R0, #+4]
   \   000000A6   0x.... 0x....      BL       __aeabi_f2d
   \   000000AA   0x.... 0x....      LDR.W    R2,??DataTable8_7  ;; 0x9999999a
   \   000000AE   0x.... 0x....      LDR.W    R3,??DataTable8_14  ;; 0x3fb99999
   \   000000B2   0x.... 0x....      BL       __aeabi_dmul
   \   000000B6   0x0022             MOVS     R2,R4
   \   000000B8   0x002B             MOVS     R3,R5
   \   000000BA   0x.... 0x....      BL       __aeabi_dadd
   \   000000BE   0x.... 0x....      BL       __aeabi_d2f
   \   000000C2   0x.... 0x....      LDR.W    R1,??DataTable8_27
   \   000000C6   0x6008             STR      R0,[R1, #+0]
     82            if(ABS(D_Err)<Delta_dError_Range[0])
   \   000000C8   0x.... 0x....      LDR.W    R0,??DataTable8_27
   \   000000CC   0x6800             LDR      R0,[R0, #+0]
   \   000000CE   0x2100             MOVS     R1,#+0
   \   000000D0   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000D4   0xD203             BCS.N    ??Speed_Control_2
   \   000000D6   0x.... 0x....      LDR.W    R0,??DataTable8_27
   \   000000DA   0x6800             LDR      R0,[R0, #+0]
   \   000000DC   0xE004             B.N      ??Speed_Control_3
   \                     ??Speed_Control_2: (+1)
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable8_27
   \   000000E2   0x6800             LDR      R0,[R0, #+0]
   \   000000E4   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \                     ??Speed_Control_3: (+1)
   \   000000E8   0x.... 0x....      LDR.W    R1,??DataTable8_28
   \   000000EC   0x6809             LDR      R1,[R1, #+0]
   \   000000EE   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000F2   0xD20D             BCS.N    ??Speed_Control_4
     83            {
     84              
     85              Speed_temp=SetSpeed*K_Varialbe_Speed[0]/100;
   \   000000F4   0x.... 0x....      LDR.W    R0,??DataTable8_29
   \   000000F8   0x6801             LDR      R1,[R0, #+0]
   \   000000FA   0x.... 0x....      LDR.W    R0,??DataTable8_30
   \   000000FE   0x6800             LDR      R0,[R0, #+0]
   \   00000100   0x.... 0x....      BL       __aeabi_fmul
   \   00000104   0x.... 0x....      LDR.W    R1,??DataTable8_31  ;; 0x42c80000
   \   00000108   0x.... 0x....      BL       __aeabi_fdiv
   \   0000010C   0x0004             MOVS     R4,R0
   \   0000010E   0xE09C             B.N      ??Speed_Control_5
     86            } 
     87            else if(ABS(D_Err)<Delta_dError_Range[1])
   \                     ??Speed_Control_4: (+1)
   \   00000110   0x.... 0x....      LDR.W    R0,??DataTable8_27
   \   00000114   0x6800             LDR      R0,[R0, #+0]
   \   00000116   0x2100             MOVS     R1,#+0
   \   00000118   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000011C   0xD203             BCS.N    ??Speed_Control_6
   \   0000011E   0x.... 0x....      LDR.W    R0,??DataTable8_27
   \   00000122   0x6800             LDR      R0,[R0, #+0]
   \   00000124   0xE004             B.N      ??Speed_Control_7
   \                     ??Speed_Control_6: (+1)
   \   00000126   0x.... 0x....      LDR.W    R0,??DataTable8_27
   \   0000012A   0x6800             LDR      R0,[R0, #+0]
   \   0000012C   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \                     ??Speed_Control_7: (+1)
   \   00000130   0x.... 0x....      LDR.W    R1,??DataTable8_28
   \   00000134   0x6849             LDR      R1,[R1, #+4]
   \   00000136   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000013A   0xD20D             BCS.N    ??Speed_Control_8
     88            {
     89            
     90              Speed_temp=SetSpeed*K_Varialbe_Speed[1]/100;  
   \   0000013C   0x.... 0x....      LDR.W    R0,??DataTable8_29
   \   00000140   0x6801             LDR      R1,[R0, #+0]
   \   00000142   0x.... 0x....      LDR.W    R0,??DataTable8_30
   \   00000146   0x6840             LDR      R0,[R0, #+4]
   \   00000148   0x.... 0x....      BL       __aeabi_fmul
   \   0000014C   0x.... 0x....      LDR.W    R1,??DataTable8_31  ;; 0x42c80000
   \   00000150   0x.... 0x....      BL       __aeabi_fdiv
   \   00000154   0x0004             MOVS     R4,R0
   \   00000156   0xE078             B.N      ??Speed_Control_5
     91            }
     92            else if(ABS(D_Err)<Delta_dError_Range[2])
   \                     ??Speed_Control_8: (+1)
   \   00000158   0x.... 0x....      LDR.W    R0,??DataTable8_27
   \   0000015C   0x6800             LDR      R0,[R0, #+0]
   \   0000015E   0x2100             MOVS     R1,#+0
   \   00000160   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000164   0xD203             BCS.N    ??Speed_Control_9
   \   00000166   0x.... 0x....      LDR.W    R0,??DataTable8_27
   \   0000016A   0x6800             LDR      R0,[R0, #+0]
   \   0000016C   0xE004             B.N      ??Speed_Control_10
   \                     ??Speed_Control_9: (+1)
   \   0000016E   0x.... 0x....      LDR.W    R0,??DataTable8_27
   \   00000172   0x6800             LDR      R0,[R0, #+0]
   \   00000174   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \                     ??Speed_Control_10: (+1)
   \   00000178   0x.... 0x....      LDR.W    R1,??DataTable8_28
   \   0000017C   0x6889             LDR      R1,[R1, #+8]
   \   0000017E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000182   0xD20D             BCS.N    ??Speed_Control_11
     93            {
     94            
     95              Speed_temp=SetSpeed*K_Varialbe_Speed[2]/100;  
   \   00000184   0x.... 0x....      LDR.W    R0,??DataTable8_29
   \   00000188   0x6801             LDR      R1,[R0, #+0]
   \   0000018A   0x.... 0x....      LDR.W    R0,??DataTable8_30
   \   0000018E   0x6880             LDR      R0,[R0, #+8]
   \   00000190   0x.... 0x....      BL       __aeabi_fmul
   \   00000194   0x.... 0x....      LDR.W    R1,??DataTable8_31  ;; 0x42c80000
   \   00000198   0x.... 0x....      BL       __aeabi_fdiv
   \   0000019C   0x0004             MOVS     R4,R0
   \   0000019E   0xE054             B.N      ??Speed_Control_5
     96            }    
     97            else if(ABS(D_Err)<Delta_dError_Range[3])
   \                     ??Speed_Control_11: (+1)
   \   000001A0   0x.... 0x....      LDR.W    R0,??DataTable8_27
   \   000001A4   0x6800             LDR      R0,[R0, #+0]
   \   000001A6   0x2100             MOVS     R1,#+0
   \   000001A8   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000001AC   0xD203             BCS.N    ??Speed_Control_12
   \   000001AE   0x.... 0x....      LDR.W    R0,??DataTable8_27
   \   000001B2   0x6800             LDR      R0,[R0, #+0]
   \   000001B4   0xE004             B.N      ??Speed_Control_13
   \                     ??Speed_Control_12: (+1)
   \   000001B6   0x.... 0x....      LDR.W    R0,??DataTable8_27
   \   000001BA   0x6800             LDR      R0,[R0, #+0]
   \   000001BC   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \                     ??Speed_Control_13: (+1)
   \   000001C0   0x.... 0x....      LDR.W    R1,??DataTable8_28
   \   000001C4   0x68C9             LDR      R1,[R1, #+12]
   \   000001C6   0x.... 0x....      BL       __aeabi_cfcmple
   \   000001CA   0xD20D             BCS.N    ??Speed_Control_14
     98            {
     99            
    100              Speed_temp=SetSpeed*K_Varialbe_Speed[3]/100;  
   \   000001CC   0x.... 0x....      LDR.W    R0,??DataTable8_29
   \   000001D0   0x6801             LDR      R1,[R0, #+0]
   \   000001D2   0x.... 0x....      LDR.W    R0,??DataTable8_30
   \   000001D6   0x68C0             LDR      R0,[R0, #+12]
   \   000001D8   0x.... 0x....      BL       __aeabi_fmul
   \   000001DC   0x.... 0x....      LDR.W    R1,??DataTable8_31  ;; 0x42c80000
   \   000001E0   0x.... 0x....      BL       __aeabi_fdiv
   \   000001E4   0x0004             MOVS     R4,R0
   \   000001E6   0xE030             B.N      ??Speed_Control_5
    101            }    
    102            else if(ABS(D_Err)<Delta_dError_Range[4])
   \                     ??Speed_Control_14: (+1)
   \   000001E8   0x.... 0x....      LDR.W    R0,??DataTable8_27
   \   000001EC   0x6800             LDR      R0,[R0, #+0]
   \   000001EE   0x2100             MOVS     R1,#+0
   \   000001F0   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000001F4   0xD203             BCS.N    ??Speed_Control_15
   \   000001F6   0x.... 0x....      LDR.W    R0,??DataTable8_27
   \   000001FA   0x6800             LDR      R0,[R0, #+0]
   \   000001FC   0xE004             B.N      ??Speed_Control_16
   \                     ??Speed_Control_15: (+1)
   \   000001FE   0x.... 0x....      LDR.W    R0,??DataTable8_27
   \   00000202   0x6800             LDR      R0,[R0, #+0]
   \   00000204   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \                     ??Speed_Control_16: (+1)
   \   00000208   0x.... 0x....      LDR.W    R1,??DataTable8_28
   \   0000020C   0x6909             LDR      R1,[R1, #+16]
   \   0000020E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000212   0xD20D             BCS.N    ??Speed_Control_17
    103            {
    104            
    105              Speed_temp=SetSpeed*K_Varialbe_Speed[4]/100;  
   \   00000214   0x.... 0x....      LDR.W    R0,??DataTable8_29
   \   00000218   0x6801             LDR      R1,[R0, #+0]
   \   0000021A   0x.... 0x....      LDR.W    R0,??DataTable8_30
   \   0000021E   0x6900             LDR      R0,[R0, #+16]
   \   00000220   0x.... 0x....      BL       __aeabi_fmul
   \   00000224   0x.... 0x....      LDR.W    R1,??DataTable8_31  ;; 0x42c80000
   \   00000228   0x.... 0x....      BL       __aeabi_fdiv
   \   0000022C   0x0004             MOVS     R4,R0
   \   0000022E   0xE00C             B.N      ??Speed_Control_5
    106            }
    107            else
    108            {
    109              Speed_temp=SetSpeed*K_Varialbe_Speed[5]/100;    
   \                     ??Speed_Control_17: (+1)
   \   00000230   0x.... 0x....      LDR.W    R0,??DataTable8_29
   \   00000234   0x6801             LDR      R1,[R0, #+0]
   \   00000236   0x.... 0x....      LDR.W    R0,??DataTable8_30
   \   0000023A   0x6940             LDR      R0,[R0, #+20]
   \   0000023C   0x.... 0x....      BL       __aeabi_fmul
   \   00000240   0x.... 0x....      LDR.W    R1,??DataTable8_31  ;; 0x42c80000
   \   00000244   0x.... 0x....      BL       __aeabi_fdiv
   \   00000248   0x0004             MOVS     R4,R0
    110            
    111            }
    112              
    113              
    114              
    115              
    116              
    117              
    118              
    119            Speed_temp=Speed_temp*1.4;
   \                     ??Speed_Control_5: (+1)
   \   0000024A   0x0020             MOVS     R0,R4
   \   0000024C   0x.... 0x....      BL       __aeabi_f2d
   \   00000250   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   00000254   0x.... 0x....      LDR.W    R3,??DataTable8_32  ;; 0x3ff66666
   \   00000258   0x.... 0x....      BL       __aeabi_dmul
   \   0000025C   0x.... 0x....      BL       __aeabi_d2f
   \   00000260   0x0004             MOVS     R4,R0
    120          
    121            setspeed=Speed_temp*(1-SpeedFilterRatio)+setspeed*SpeedFilterRatio;
   \   00000262   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000266   0x0031             MOVS     R1,R6
   \   00000268   0x.... 0x....      BL       __aeabi_fsub
   \   0000026C   0x0021             MOVS     R1,R4
   \   0000026E   0x.... 0x....      BL       __aeabi_fmul
   \   00000272   0x0004             MOVS     R4,R0
   \   00000274   0x.... 0x....      LDR.W    R0,??DataTable8_33
   \   00000278   0x6800             LDR      R0,[R0, #+0]
   \   0000027A   0x0031             MOVS     R1,R6
   \   0000027C   0x.... 0x....      BL       __aeabi_fmul
   \   00000280   0x0021             MOVS     R1,R4
   \   00000282   0x.... 0x....      BL       __aeabi_fadd
   \   00000286   0x.... 0x....      LDR.W    R1,??DataTable8_33
   \   0000028A   0x6008             STR      R0,[R1, #+0]
    122            SpeedError=setspeed-ControlSpeed;
   \   0000028C   0x.... 0x....      LDR.W    R0,??DataTable8_33
   \   00000290   0x6800             LDR      R0,[R0, #+0]
   \   00000292   0x.... 0x....      LDR.W    R1,??DataTable8_19
   \   00000296   0x6809             LDR      R1,[R1, #+0]
   \   00000298   0x.... 0x....      BL       __aeabi_fsub
   \   0000029C   0x0005             MOVS     R5,R0
    123            
    124            //计算最近10个偏差值的和作为积分项
    125            SpeedControlIntegral=0;
   \   0000029E   0x2000             MOVS     R0,#+0
   \   000002A0   0x.... 0x....      LDR.W    R1,??DataTable8_34
   \   000002A4   0x6008             STR      R0,[R1, #+0]
    126            for(i=0;i<9;i++)
   \   000002A6   0x2400             MOVS     R4,#+0
   \   000002A8   0xE018             B.N      ??Speed_Control_18
    127            {
    128              PreError[i]=PreError[i+1];
   \                     ??Speed_Control_19: (+1)
   \   000002AA   0x.... 0x....      LDR.W    R0,??DataTable8_35
   \   000002AE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000002B0   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   000002B4   0x6840             LDR      R0,[R0, #+4]
   \   000002B6   0x.... 0x....      LDR.W    R1,??DataTable8_35
   \   000002BA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000002BC   0xF841 0x0024      STR      R0,[R1, R4, LSL #+2]
    129              SpeedControlIntegral+=PreError[i];
   \   000002C0   0x.... 0x....      LDR.W    R0,??DataTable8_34
   \   000002C4   0x6800             LDR      R0,[R0, #+0]
   \   000002C6   0x.... 0x....      LDR.W    R1,??DataTable8_35
   \   000002CA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000002CC   0xF851 0x1024      LDR      R1,[R1, R4, LSL #+2]
   \   000002D0   0x.... 0x....      BL       __aeabi_fadd
   \   000002D4   0x.... 0x....      LDR.W    R1,??DataTable8_34
   \   000002D8   0x6008             STR      R0,[R1, #+0]
    130              
    131            }
   \   000002DA   0x1C64             ADDS     R4,R4,#+1
   \                     ??Speed_Control_18: (+1)
   \   000002DC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000002DE   0x2C09             CMP      R4,#+9
   \   000002E0   0xDBE3             BLT.N    ??Speed_Control_19
    132            PreError[9]=SpeedError;
   \   000002E2   0x.... 0x....      LDR.W    R0,??DataTable8_35
   \   000002E6   0x6245             STR      R5,[R0, #+36]
    133            SpeedControlIntegral+=PreError[9];
   \   000002E8   0x.... 0x....      LDR.W    R0,??DataTable8_34
   \   000002EC   0x6801             LDR      R1,[R0, #+0]
   \   000002EE   0x.... 0x....      LDR.W    R0,??DataTable8_35
   \   000002F2   0x6A40             LDR      R0,[R0, #+36]
   \   000002F4   0x.... 0x....      BL       __aeabi_fadd
   \   000002F8   0x.... 0x....      LDR.W    R1,??DataTable8_34
   \   000002FC   0x6008             STR      R0,[R1, #+0]
    134            
    135            
    136            SpeedControlOutOld=SpeedControlOutNew;
   \   000002FE   0x.... 0x....      LDR.W    R0,??DataTable8_36
   \   00000302   0x6800             LDR      R0,[R0, #+0]
   \   00000304   0x.... 0x....      LDR.W    R1,??DataTable8_37
   \   00000308   0x6008             STR      R0,[R1, #+0]
    137            
    138            SpeedControlOutNew=PID_Speed.P*SpeedError+PID_Speed.I*SpeedControlIntegral+PID_Speed.D*(PreError[9]-PreError[8]);
   \   0000030A   0x.... 0x....      LDR.W    R0,??DataTable8_38
   \   0000030E   0x6800             LDR      R0,[R0, #+0]
   \   00000310   0x0029             MOVS     R1,R5
   \   00000312   0x.... 0x....      BL       __aeabi_fmul
   \   00000316   0x0004             MOVS     R4,R0
   \   00000318   0x.... 0x....      LDR.W    R0,??DataTable8_38
   \   0000031C   0x6881             LDR      R1,[R0, #+8]
   \   0000031E   0x.... 0x....      LDR.W    R0,??DataTable8_34
   \   00000322   0x6800             LDR      R0,[R0, #+0]
   \   00000324   0x.... 0x....      BL       __aeabi_fmul
   \   00000328   0x0021             MOVS     R1,R4
   \   0000032A   0x.... 0x....      BL       __aeabi_fadd
   \   0000032E   0x0004             MOVS     R4,R0
   \   00000330   0x.... 0x....      LDR.W    R0,??DataTable8_35
   \   00000334   0x6A40             LDR      R0,[R0, #+36]
   \   00000336   0x.... 0x....      LDR.W    R1,??DataTable8_35
   \   0000033A   0x6A09             LDR      R1,[R1, #+32]
   \   0000033C   0x.... 0x....      BL       __aeabi_fsub
   \   00000340   0x.... 0x....      LDR.W    R1,??DataTable8_38
   \   00000344   0x6909             LDR      R1,[R1, #+16]
   \   00000346   0x.... 0x....      BL       __aeabi_fmul
   \   0000034A   0x0021             MOVS     R1,R4
   \   0000034C   0x.... 0x....      BL       __aeabi_fadd
   \   00000350   0x.... 0x....      LDR.W    R1,??DataTable8_36
   \   00000354   0x6008             STR      R0,[R1, #+0]
    139            
    140            
    141            SpeedControlOutNew=SpeedControlOutOld*0.9+SpeedControlOutNew*0.1;
   \   00000356   0x.... 0x....      LDR.W    R0,??DataTable8_37
   \   0000035A   0x6800             LDR      R0,[R0, #+0]
   \   0000035C   0x.... 0x....      BL       __aeabi_f2d
   \   00000360   0x.... 0x....      LDR.W    R2,??DataTable8_15  ;; 0xcccccccd
   \   00000364   0x.... 0x....      LDR.W    R3,??DataTable8_16  ;; 0x3feccccc
   \   00000368   0x.... 0x....      BL       __aeabi_dmul
   \   0000036C   0x0004             MOVS     R4,R0
   \   0000036E   0x000D             MOVS     R5,R1
   \   00000370   0x.... 0x....      LDR.W    R0,??DataTable8_36
   \   00000374   0x6800             LDR      R0,[R0, #+0]
   \   00000376   0x.... 0x....      BL       __aeabi_f2d
   \   0000037A   0x.... 0x....      LDR.W    R2,??DataTable8_7  ;; 0x9999999a
   \   0000037E   0x.... 0x....      LDR.W    R3,??DataTable8_14  ;; 0x3fb99999
   \   00000382   0x.... 0x....      BL       __aeabi_dmul
   \   00000386   0x0022             MOVS     R2,R4
   \   00000388   0x002B             MOVS     R3,R5
   \   0000038A   0x.... 0x....      BL       __aeabi_dadd
   \   0000038E   0x.... 0x....      BL       __aeabi_d2f
   \   00000392   0x.... 0x....      LDR.W    R1,??DataTable8_36
   \   00000396   0x6008             STR      R0,[R1, #+0]
    142            
    143          
    144           
    145          }
   \   00000398   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .bss, align 4
   \                     ??setspeed:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??D_Err:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??PreError:
   \   00000000                      DS8 40
    146          
    147          /****
    148          * 速度控制,平滑输出
    149          ****/

   \                                 In section .text, align 2, keep-with-next
    150          void Speed_Control_Output(void)
    151          {
   \                     Speed_Control_Output: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    152            float dSpeedValue;//速度控制变化量
    153            dSpeedValue=SpeedControlOutNew-SpeedControlOutOld;
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable8_36
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable8_37
   \   0000000C   0x6809             LDR      R1,[R1, #+0]
   \   0000000E   0x.... 0x....      BL       __aeabi_fsub
   \   00000012   0x0004             MOVS     R4,R0
    154            PID_Speed.OUT= dSpeedValue*(SpeedCount+1)/Speed_Filter_Times+SpeedControlOutOld;
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable8_39
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x1C40             ADDS     R0,R0,#+1
   \   0000001C   0x.... 0x....      BL       __aeabi_i2f
   \   00000020   0x0021             MOVS     R1,R4
   \   00000022   0x.... 0x....      BL       __aeabi_fmul
   \   00000026   0x0004             MOVS     R4,R0
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable8_40
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0x.... 0x....      BL       __aeabi_i2f
   \   00000032   0x0001             MOVS     R1,R0
   \   00000034   0x0020             MOVS     R0,R4
   \   00000036   0x.... 0x....      BL       __aeabi_fdiv
   \   0000003A   0x.... 0x....      LDR.W    R1,??DataTable8_37
   \   0000003E   0x6809             LDR      R1,[R1, #+0]
   \   00000040   0x.... 0x....      BL       __aeabi_fadd
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable8_38
   \   00000048   0x6188             STR      R0,[R1, #+24]
    155          }
   \   0000004A   0xBD10             POP      {R4,PC}          ;; return
    156          
    157          
    158          /****
    159          * 方向控制量计算
    160          ****/

   \                                 In section .text, align 2, keep-with-next
    161          void Direction_Control(void)
    162          {
   \                     Direction_Control: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    163            
    164            int i;
    165            static int Calculate_Length=0;
    166            static float Pre_Middle_Err[15]={0};
    167            for(i=0;i<14;i++)
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0xE009             B.N      ??Direction_Control_0
    168            {
    169              Pre_Middle_Err[i]=Pre_Middle_Err[i+1];
   \                     ??Direction_Control_1: (+1)
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable8_41
   \   0000000A   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000000E   0x6849             LDR      R1,[R1, #+4]
   \   00000010   0x.... 0x....      LDR.W    R2,??DataTable8_41
   \   00000014   0xF842 0x1020      STR      R1,[R2, R0, LSL #+2]
    170            }
   \   00000018   0x1C40             ADDS     R0,R0,#+1
   \                     ??Direction_Control_0: (+1)
   \   0000001A   0x280E             CMP      R0,#+14
   \   0000001C   0xDBF3             BLT.N    ??Direction_Control_1
    171            Pre_Middle_Err[14]=Middle_Err;
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable8_42
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable8_41
   \   00000028   0x6388             STR      R0,[R1, #+56]
    172          
    173            if(Calculate_Length<12)
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable8_43
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0x280C             CMP      R0,#+12
   \   00000032   0xDA13             BGE.N    ??Direction_Control_2
    174            {
    175               Delta_P=0;
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable8_44
   \   0000003A   0x6008             STR      R0,[R1, #+0]
    176               Delta_D=0; 
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0x.... 0x....      LDR.W    R1,??DataTable8_45
   \   00000042   0x6008             STR      R0,[R1, #+0]
    177               Delt_error=0;
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0x.... 0x....      LDR.W    R1,??DataTable8_25
   \   0000004A   0x6008             STR      R0,[R1, #+0]
    178               Calculate_Length++;
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable8_43
   \   00000050   0x6800             LDR      R0,[R0, #+0]
   \   00000052   0x1C40             ADDS     R0,R0,#+1
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable8_43
   \   00000058   0x6008             STR      R0,[R1, #+0]
   \   0000005A   0xE020             B.N      ??Direction_Control_3
    179            }
    180            else
    181            {
    182                Pre_Delta_Error=Delt_error;
   \                     ??Direction_Control_2: (+1)
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable8_25
   \   00000060   0x6800             LDR      R0,[R0, #+0]
   \   00000062   0x....             LDR.N    R1,??DataTable8_24
   \   00000064   0x6008             STR      R0,[R1, #+0]
    183                Delt_error=-10*Slope_Calculate(0,Calculate_Length,Pre_Middle_Err);
   \   00000066   0x.... 0x....      LDR.W    R2,??DataTable8_41
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable8_43
   \   0000006E   0x6801             LDR      R1,[R0, #+0]
   \   00000070   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000072   0x2000             MOVS     R0,#+0
   \   00000074   0x.... 0x....      BL       Slope_Calculate
   \   00000078   0x.... 0x....      LDR.W    R1,??DataTable8_46  ;; 0xc1200000
   \   0000007C   0x.... 0x....      BL       __aeabi_fmul
   \   00000080   0x....             LDR.N    R1,??DataTable8_25
   \   00000082   0x6008             STR      R0,[R1, #+0]
    184          
    185                 if(RoadType==0)//直线用模糊控制
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable8_47
   \   00000088   0x7800             LDRB     R0,[R0, #+0]
   \   0000008A   0x2800             CMP      R0,#+0
   \   0000008C   0xD007             BEQ.N    ??Direction_Control_3
    186                {
    187                  
    188                  //Delta_P=Fuzzy( Middle_Err,Delt_error)* Fuzzy_Kp*0.1;
    189          
    190                  //Delta_D=Fuzzy( Middle_Err,Delt_error)* Fuzzy_Kd*0.1;
    191                }
    192                else
    193                {
    194                   Delta_P=0;
   \   0000008E   0x2000             MOVS     R0,#+0
   \   00000090   0x.... 0x....      LDR.W    R1,??DataTable8_44
   \   00000094   0x6008             STR      R0,[R1, #+0]
    195                   Delta_D=0;       
   \   00000096   0x2000             MOVS     R0,#+0
   \   00000098   0x.... 0x....      LDR.W    R1,??DataTable8_45
   \   0000009C   0x6008             STR      R0,[R1, #+0]
    196                }
    197                
    198            }
    199              
    200              
    201            
    202            
    203          
    204            PID_Turn.pout=(PID_Turn.P+Delta_P)* Pre_Middle_Err[13];
   \                     ??Direction_Control_3: (+1)
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable8_48
   \   000000A2   0x6800             LDR      R0,[R0, #+0]
   \   000000A4   0x.... 0x....      LDR.W    R1,??DataTable8_44
   \   000000A8   0x6809             LDR      R1,[R1, #+0]
   \   000000AA   0x.... 0x....      BL       __aeabi_fadd
   \   000000AE   0x....             LDR.N    R1,??DataTable8_41
   \   000000B0   0x6B49             LDR      R1,[R1, #+52]
   \   000000B2   0x.... 0x....      BL       __aeabi_fmul
   \   000000B6   0x.... 0x....      LDR.W    R1,??DataTable8_48
   \   000000BA   0x6048             STR      R0,[R1, #+4]
    205            PID_Turn.iout=(PID_Turn.I)*Middle_Err;
   \   000000BC   0x....             LDR.N    R0,??DataTable8_48
   \   000000BE   0x6880             LDR      R0,[R0, #+8]
   \   000000C0   0x....             LDR.N    R1,??DataTable8_42
   \   000000C2   0x6809             LDR      R1,[R1, #+0]
   \   000000C4   0x.... 0x....      BL       __aeabi_fmul
   \   000000C8   0x....             LDR.N    R1,??DataTable8_48
   \   000000CA   0x60C8             STR      R0,[R1, #+12]
    206            
    207            PID_Turn.dout=(PID_Turn.D+Delta_D)*(Middle_Err-Pre_Middle_Err[13])*10;
   \   000000CC   0x....             LDR.N    R0,??DataTable8_48
   \   000000CE   0x6900             LDR      R0,[R0, #+16]
   \   000000D0   0x....             LDR.N    R1,??DataTable8_45
   \   000000D2   0x6809             LDR      R1,[R1, #+0]
   \   000000D4   0x.... 0x....      BL       __aeabi_fadd
   \   000000D8   0x0004             MOVS     R4,R0
   \   000000DA   0x....             LDR.N    R0,??DataTable8_42
   \   000000DC   0x6800             LDR      R0,[R0, #+0]
   \   000000DE   0x....             LDR.N    R1,??DataTable8_41
   \   000000E0   0x6B49             LDR      R1,[R1, #+52]
   \   000000E2   0x.... 0x....      BL       __aeabi_fsub
   \   000000E6   0x0001             MOVS     R1,R0
   \   000000E8   0x0020             MOVS     R0,R4
   \   000000EA   0x.... 0x....      BL       __aeabi_fmul
   \   000000EE   0x....             LDR.N    R1,??DataTable8_49  ;; 0x41200000
   \   000000F0   0x.... 0x....      BL       __aeabi_fmul
   \   000000F4   0x....             LDR.N    R1,??DataTable8_48
   \   000000F6   0x6148             STR      R0,[R1, #+20]
    208            if(RoadType==1)//进入十字弯道时增大P
   \   000000F8   0x....             LDR.N    R0,??DataTable8_47
   \   000000FA   0x7800             LDRB     R0,[R0, #+0]
   \   000000FC   0x2801             CMP      R0,#+1
   \   000000FE   0xD10F             BNE.N    ??Direction_Control_4
    209            {
    210              PID_Turn.pout= PID_Turn.pout*K_CrossRoad;
   \   00000100   0x....             LDR.N    R0,??DataTable8_48
   \   00000102   0x6840             LDR      R0,[R0, #+4]
   \   00000104   0x....             LDR.N    R1,??DataTable8_50
   \   00000106   0x6809             LDR      R1,[R1, #+0]
   \   00000108   0x.... 0x....      BL       __aeabi_fmul
   \   0000010C   0x....             LDR.N    R1,??DataTable8_48
   \   0000010E   0x6048             STR      R0,[R1, #+4]
    211              PID_Turn.dout=PID_Turn.dout*P_CrossRoad;
   \   00000110   0x....             LDR.N    R0,??DataTable8_48
   \   00000112   0x6940             LDR      R0,[R0, #+20]
   \   00000114   0x....             LDR.N    R1,??DataTable8_51
   \   00000116   0x6809             LDR      R1,[R1, #+0]
   \   00000118   0x.... 0x....      BL       __aeabi_fmul
   \   0000011C   0x....             LDR.N    R1,??DataTable8_48
   \   0000011E   0x6148             STR      R0,[R1, #+20]
    212            }
    213            DirControlOutOld=DirControlOutNew;
   \                     ??Direction_Control_4: (+1)
   \   00000120   0x....             LDR.N    R0,??DataTable8_52
   \   00000122   0x6800             LDR      R0,[R0, #+0]
   \   00000124   0x....             LDR.N    R1,??DataTable8_53
   \   00000126   0x6008             STR      R0,[R1, #+0]
    214            DirControlOutNew=PID_Turn.pout+PID_Turn.dout;
   \   00000128   0x....             LDR.N    R0,??DataTable8_48
   \   0000012A   0x6840             LDR      R0,[R0, #+4]
   \   0000012C   0x....             LDR.N    R1,??DataTable8_48
   \   0000012E   0x6949             LDR      R1,[R1, #+20]
   \   00000130   0x.... 0x....      BL       __aeabi_fadd
   \   00000134   0x....             LDR.N    R1,??DataTable8_52
   \   00000136   0x6008             STR      R0,[R1, #+0]
    215            
    216            DirControlOutNew=Turn_Out_Filter(DirControlOutNew);
   \   00000138   0x....             LDR.N    R0,??DataTable8_52
   \   0000013A   0x6800             LDR      R0,[R0, #+0]
   \   0000013C   0x.... 0x....      BL       Turn_Out_Filter
   \   00000140   0x....             LDR.N    R1,??DataTable8_52
   \   00000142   0x6008             STR      R0,[R1, #+0]
    217            
    218          
    219          
    220          }
   \   00000144   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .bss, align 4
   \                     ??Calculate_Length:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??Pre_Middle_Err:
   \   00000000                      DS8 60
    221          /****
    222          * 方向控制量输出
    223          ****/

   \                                 In section .text, align 2, keep-with-next
    224          void Direction_Control_Output(void)
    225          {
   \                     Direction_Control_Output: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    226            
    227            float dDirValue;
    228            dDirValue=DirControlOutNew-DirControlOutOld;
   \   00000002   0x....             LDR.N    R0,??DataTable8_52
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x....             LDR.N    R1,??DataTable8_53
   \   00000008   0x6809             LDR      R1,[R1, #+0]
   \   0000000A   0x.... 0x....      BL       __aeabi_fsub
   \   0000000E   0x0004             MOVS     R4,R0
    229            PID_Turn.OUT=dDirValue*(DirectionCount+1)/5+DirControlOutOld;
   \   00000010   0x....             LDR.N    R0,??DataTable8_54
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x1C40             ADDS     R0,R0,#+1
   \   00000016   0x.... 0x....      BL       __aeabi_i2f
   \   0000001A   0x0021             MOVS     R1,R4
   \   0000001C   0x.... 0x....      BL       __aeabi_fmul
   \   00000020   0x....             LDR.N    R1,??DataTable8_55  ;; 0x40a00000
   \   00000022   0x.... 0x....      BL       __aeabi_fdiv
   \   00000026   0x....             LDR.N    R1,??DataTable8_53
   \   00000028   0x6809             LDR      R1,[R1, #+0]
   \   0000002A   0x.... 0x....      BL       __aeabi_fadd
   \   0000002E   0x....             LDR.N    R1,??DataTable8_48
   \   00000030   0x6188             STR      R0,[R1, #+24]
    230          
    231          }
   \   00000032   0xBD10             POP      {R4,PC}          ;; return
    232          
    233          /****
    234          *转向输出滤波
    235          ****/

   \                                 In section .text, align 2, keep-with-next
    236          float Turn_Out_Filter(float DirectionControlOut)
    237          {
   \                     Turn_Out_Filter: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    238            static float DirectionControl[4]={0};
    239            float DirectionControlOut_Filtered;
    240            DirectionControl[3]=DirectionControl[2];
   \   00000002   0x....             LDR.N    R1,??DataTable8_56
   \   00000004   0x6889             LDR      R1,[R1, #+8]
   \   00000006   0x....             LDR.N    R2,??DataTable8_56
   \   00000008   0x60D1             STR      R1,[R2, #+12]
    241            DirectionControl[2]=DirectionControl[1];
   \   0000000A   0x....             LDR.N    R1,??DataTable8_56
   \   0000000C   0x6849             LDR      R1,[R1, #+4]
   \   0000000E   0x....             LDR.N    R2,??DataTable8_56
   \   00000010   0x6091             STR      R1,[R2, #+8]
    242            DirectionControl[1]=DirectionControl[0];
   \   00000012   0x....             LDR.N    R1,??DataTable8_56
   \   00000014   0x6809             LDR      R1,[R1, #+0]
   \   00000016   0x....             LDR.N    R2,??DataTable8_56
   \   00000018   0x6051             STR      R1,[R2, #+4]
    243            DirectionControl[0]=DirectionControlOut;
   \   0000001A   0x....             LDR.N    R1,??DataTable8_56
   \   0000001C   0x6008             STR      R0,[R1, #+0]
    244            DirectionControlOut_Filtered=DirectionControl[0]*0.4+DirectionControl[1]*0.3+DirectionControl[2]*0.2+DirectionControl[3]*0.1;
   \   0000001E   0x....             LDR.N    R0,??DataTable8_56
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0x.... 0x....      BL       __aeabi_f2d
   \   00000026   0x....             LDR.N    R2,??DataTable8_7  ;; 0x9999999a
   \   00000028   0x....             LDR.N    R3,??DataTable8_57  ;; 0x3fd99999
   \   0000002A   0x.... 0x....      BL       __aeabi_dmul
   \   0000002E   0x0004             MOVS     R4,R0
   \   00000030   0x000D             MOVS     R5,R1
   \   00000032   0x....             LDR.N    R0,??DataTable8_56
   \   00000034   0x6840             LDR      R0,[R0, #+4]
   \   00000036   0x.... 0x....      BL       __aeabi_f2d
   \   0000003A   0xF05F 0x3233      MOVS     R2,#+858993459
   \   0000003E   0x....             LDR.N    R3,??DataTable8_58  ;; 0x3fd33333
   \   00000040   0x.... 0x....      BL       __aeabi_dmul
   \   00000044   0x0022             MOVS     R2,R4
   \   00000046   0x002B             MOVS     R3,R5
   \   00000048   0x.... 0x....      BL       __aeabi_dadd
   \   0000004C   0x0004             MOVS     R4,R0
   \   0000004E   0x000D             MOVS     R5,R1
   \   00000050   0x....             LDR.N    R0,??DataTable8_56
   \   00000052   0x6880             LDR      R0,[R0, #+8]
   \   00000054   0x.... 0x....      BL       __aeabi_f2d
   \   00000058   0x....             LDR.N    R2,??DataTable8_7  ;; 0x9999999a
   \   0000005A   0x....             LDR.N    R3,??DataTable8_9  ;; 0x3fc99999
   \   0000005C   0x.... 0x....      BL       __aeabi_dmul
   \   00000060   0x0022             MOVS     R2,R4
   \   00000062   0x002B             MOVS     R3,R5
   \   00000064   0x.... 0x....      BL       __aeabi_dadd
   \   00000068   0x0004             MOVS     R4,R0
   \   0000006A   0x000D             MOVS     R5,R1
   \   0000006C   0x....             LDR.N    R0,??DataTable8_56
   \   0000006E   0x68C0             LDR      R0,[R0, #+12]
   \   00000070   0x.... 0x....      BL       __aeabi_f2d
   \   00000074   0x....             LDR.N    R2,??DataTable8_7  ;; 0x9999999a
   \   00000076   0x....             LDR.N    R3,??DataTable8_14  ;; 0x3fb99999
   \   00000078   0x.... 0x....      BL       __aeabi_dmul
   \   0000007C   0x0022             MOVS     R2,R4
   \   0000007E   0x002B             MOVS     R3,R5
   \   00000080   0x.... 0x....      BL       __aeabi_dadd
   \   00000084   0x.... 0x....      BL       __aeabi_d2f
    245            
    246            return DirectionControlOut_Filtered;
   \   00000088   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    247          }

   \                                 In section .bss, align 4
   \                     ??DirectionControl:
   \   00000000                      DS8 16
    248          
    249          /****
    250          * 电机PWM输出
    251          ****/

   \                                 In section .text, align 2, keep-with-next
    252          void Motor_Output(void)
    253          {
   \                     Motor_Output: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    254            
    255              uint32 temp;
    256              temp=(uint32)PID_Speed.OUT*2800;
   \   00000002   0x....             LDR.N    R0,??DataTable8_38
   \   00000004   0x6980             LDR      R0,[R0, #+24]
   \   00000006   0x.... 0x....      BL       __aeabi_f2uiz
   \   0000000A   0xF44F 0x612F      MOV      R1,#+2800
   \   0000000E   0xFB01 0xF400      MUL      R4,R1,R0
    257              if(temp>=7600)
   \   00000012   0xF641 0x50B0      MOVW     R0,#+7600
   \   00000016   0x4284             CMP      R4,R0
   \   00000018   0xD301             BCC.N    ??Motor_Output_0
    258              {
    259                temp=7600;
   \   0000001A   0xF641 0x54B0      MOVW     R4,#+7600
    260              }
    261          
    262          
    263            /*  
    264              if(STATE==1)
    265              {
    266                LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch7,temp);
    267                  
    268                LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch5,temp);    
    269              
    270              
    271              }
    272              else if(STATE==0)
    273              {
    274                 LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch7, 50);
    275                  
    276                 LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch5, 50);       
    277          
    278              }
    279              */
    280              
    281          
    282                LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch7,temp);
   \                     ??Motor_Output_0: (+1)
   \   0000001E   0x0022             MOVS     R2,R4
   \   00000020   0x2107             MOVS     R1,#+7
   \   00000022   0x....             LDR.N    R0,??DataTable8_59  ;; 0x40038000
   \   00000024   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
    283                  
    284                LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch5,temp);    
   \   00000028   0x0022             MOVS     R2,R4
   \   0000002A   0x2105             MOVS     R1,#+5
   \   0000002C   0x....             LDR.N    R0,??DataTable8_59  ;; 0x40038000
   \   0000002E   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
    285              
    286          
    287          }
   \   00000032   0xBD10             POP      {R4,PC}          ;; return
    288          
    289          /****
    290          *舵机PWM输出
    291          ****/

   \                                 In section .text, align 2, keep-with-next
    292          void Servo_Output(void)
    293          {
   \                     Servo_Output: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    294            uint16  DutyRation;
    295            DutyRation= 750-PID_Turn.OUT;
   \   00000002   0x....             LDR.N    R0,??DataTable8_60  ;; 0x443b8000
   \   00000004   0x....             LDR.N    R1,??DataTable8_48
   \   00000006   0x6989             LDR      R1,[R1, #+24]
   \   00000008   0x.... 0x....      BL       __aeabi_fsub
   \   0000000C   0x.... 0x....      BL       __aeabi_f2iz
    296            LPLD_FTM_PWM_ChangeDuty(FTM2, FTM_Ch1, DutyRation); 
   \   00000010   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000012   0x0002             MOVS     R2,R0
   \   00000014   0x2101             MOVS     R1,#+1
   \   00000016   0x....             LDR.N    R0,??DataTable8_61  ;; 0x400b8000
   \   00000018   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
    297              
    298          }
   \   0000001C   0xBD01             POP      {R0,PC}          ;; return
    299          
    300          
    301          

   \                                 In section .text, align 2, keep-with-next
    302          float Slope_Calculate(uint8 begin,uint8 end,float *p)    //最小二乘法拟合斜率
    303          {
   \                     Slope_Calculate: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x4692             MOV      R10,R2
    304            float xsum=0,ysum=0,xysum=0,x2sum=0;
   \   0000000A   0x2600             MOVS     R6,#+0
   \   0000000C   0x2700             MOVS     R7,#+0
   \   0000000E   0xF05F 0x0800      MOVS     R8,#+0
   \   00000012   0xF05F 0x0900      MOVS     R9,#+0
    305             uint8 i=0;
   \   00000016   0xF05F 0x0B00      MOVS     R11,#+0
    306             float result=0;
   \   0000001A   0x2000             MOVS     R0,#+0
    307             static float resultlast;
    308             p=p+begin;
   \   0000001C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001E   0xEB1A 0x0A84      ADDS     R10,R10,R4, LSL #+2
    309             for(i=begin;i<end;i++)
   \   00000022   0x46A3             MOV      R11,R4
   \   00000024   0xE02B             B.N      ??Slope_Calculate_0
    310             {
    311          	   xsum+=i;
   \                     ??Slope_Calculate_1: (+1)
   \   00000026   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   0000002A   0x4658             MOV      R0,R11
   \   0000002C   0x.... 0x....      BL       __aeabi_ui2f
   \   00000030   0x0031             MOVS     R1,R6
   \   00000032   0x.... 0x....      BL       __aeabi_fadd
   \   00000036   0x0006             MOVS     R6,R0
    312          	   ysum+=*p;
   \   00000038   0xF8DA 0x0000      LDR      R0,[R10, #+0]
   \   0000003C   0x0039             MOVS     R1,R7
   \   0000003E   0x.... 0x....      BL       __aeabi_fadd
   \   00000042   0x0007             MOVS     R7,R0
    313          	   xysum+=i*(*p);
   \   00000044   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   00000048   0x4658             MOV      R0,R11
   \   0000004A   0x.... 0x....      BL       __aeabi_ui2f
   \   0000004E   0xF8DA 0x1000      LDR      R1,[R10, #+0]
   \   00000052   0x.... 0x....      BL       __aeabi_fmul
   \   00000056   0x4641             MOV      R1,R8
   \   00000058   0x.... 0x....      BL       __aeabi_fadd
   \   0000005C   0x4680             MOV      R8,R0
    314          	   x2sum+=i*i;
   \   0000005E   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   00000062   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   00000066   0xFB0B 0xF00B      MUL      R0,R11,R11
   \   0000006A   0x.... 0x....      BL       __aeabi_i2f
   \   0000006E   0x4649             MOV      R1,R9
   \   00000070   0x.... 0x....      BL       __aeabi_fadd
   \   00000074   0x4681             MOV      R9,R0
    315          	   p=p+1;
   \   00000076   0xF11A 0x0A04      ADDS     R10,R10,#+4
    316             }
   \   0000007A   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \                     ??Slope_Calculate_0: (+1)
   \   0000007E   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   00000082   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000084   0x45AB             CMP      R11,R5
   \   00000086   0xD3CE             BCC.N    ??Slope_Calculate_1
    317            if((end-begin)*x2sum-xsum*xsum) //判断除数是否为零 
   \   00000088   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000008A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000008C   0x1B28             SUBS     R0,R5,R4
   \   0000008E   0x.... 0x....      BL       __aeabi_i2f
   \   00000092   0x4649             MOV      R1,R9
   \   00000094   0x.... 0x....      BL       __aeabi_fmul
   \   00000098   0x4682             MOV      R10,R0
   \   0000009A   0x0030             MOVS     R0,R6
   \   0000009C   0x0031             MOVS     R1,R6
   \   0000009E   0x.... 0x....      BL       __aeabi_fmul
   \   000000A2   0x0001             MOVS     R1,R0
   \   000000A4   0x4650             MOV      R0,R10
   \   000000A6   0x.... 0x....      BL       __aeabi_fsub
   \   000000AA   0x2100             MOVS     R1,#+0
   \   000000AC   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   000000B0   0xD029             BEQ.N    ??Slope_Calculate_2
    318            {
    319              result=((end-begin)*xysum-xsum*ysum)/((end-begin)*x2sum-xsum*xsum);
   \   000000B2   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000B4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000B6   0x1B28             SUBS     R0,R5,R4
   \   000000B8   0x.... 0x....      BL       __aeabi_i2f
   \   000000BC   0x4641             MOV      R1,R8
   \   000000BE   0x.... 0x....      BL       __aeabi_fmul
   \   000000C2   0x4680             MOV      R8,R0
   \   000000C4   0x0030             MOVS     R0,R6
   \   000000C6   0x0039             MOVS     R1,R7
   \   000000C8   0x.... 0x....      BL       __aeabi_fmul
   \   000000CC   0x0001             MOVS     R1,R0
   \   000000CE   0x4640             MOV      R0,R8
   \   000000D0   0x.... 0x....      BL       __aeabi_fsub
   \   000000D4   0x0007             MOVS     R7,R0
   \   000000D6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000D8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000DA   0x1B28             SUBS     R0,R5,R4
   \   000000DC   0x.... 0x....      BL       __aeabi_i2f
   \   000000E0   0x4649             MOV      R1,R9
   \   000000E2   0x.... 0x....      BL       __aeabi_fmul
   \   000000E6   0x0004             MOVS     R4,R0
   \   000000E8   0x0030             MOVS     R0,R6
   \   000000EA   0x0031             MOVS     R1,R6
   \   000000EC   0x.... 0x....      BL       __aeabi_fmul
   \   000000F0   0x0001             MOVS     R1,R0
   \   000000F2   0x0020             MOVS     R0,R4
   \   000000F4   0x.... 0x....      BL       __aeabi_fsub
   \   000000F8   0x0001             MOVS     R1,R0
   \   000000FA   0x0038             MOVS     R0,R7
   \   000000FC   0x.... 0x....      BL       __aeabi_fdiv
    320              resultlast=result;
   \   00000100   0x....             LDR.N    R1,??DataTable8_62
   \   00000102   0x6008             STR      R0,[R1, #+0]
   \   00000104   0xE001             B.N      ??Slope_Calculate_3
    321            }
    322            else
    323            {
    324             result=resultlast;
   \                     ??Slope_Calculate_2: (+1)
   \   00000106   0x....             LDR.N    R0,??DataTable8_62
   \   00000108   0x6800             LDR      R0,[R0, #+0]
    325            }
    326            return result;
   \                     ??Slope_Calculate_3: (+1)
   \   0000010A   0xE8BD 0x8FF2      POP      {R1,R4-R11,PC}   ;; return
    327          }

   \                                 In section .bss, align 4
   \                     ??resultlast:
   \   00000000                      DS8 4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x........         DC32     qd1_result

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x........         DC32     qd1_result_old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x........         DC32     qd2_result

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   0x........         DC32     qd2_result_old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \   00000000   0x851EB852         DC32     0x851eb852

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_5:
   \   00000000   0x400C51EB         DC32     0x400c51eb

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_6:
   \   00000000   0x40039000         DC32     0x40039000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_7:
   \   00000000   0x9999999A         DC32     0x9999999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_8:
   \   00000000   0x3FE99999         DC32     0x3fe99999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_9:
   \   00000000   0x3FC99999         DC32     0x3fc99999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_10:
   \   00000000   0x40E00000         DC32     0x40e00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_11:
   \   00000000   0x4583E000         DC32     0x4583e000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_12:
   \   00000000   0x........         DC32     Distance

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_13:
   \   00000000   0x........         DC32     CarSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_14:
   \   00000000   0x3FB99999         DC32     0x3fb99999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_15:
   \   00000000   0xCCCCCCCD         DC32     0xcccccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_16:
   \   00000000   0x3FECCCCC         DC32     0x3feccccc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_17:
   \   00000000   0x40690000         DC32     0x40690000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_18:
   \   00000000   0x40B07C00         DC32     0x40b07c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_19:
   \   00000000   0x........         DC32     ControlSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_20:
   \   00000000   0x3FEE6666         DC32     0x3fee6666

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_21:
   \   00000000   0x3FA99999         DC32     0x3fa99999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_22:
   \   00000000   0x3F59999A         DC32     0x3f59999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_23:
   \   00000000   0x........         DC32     Delta_Prederror

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_24:
   \   00000000   0x........         DC32     Pre_Delta_Error

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_25:
   \   00000000   0x........         DC32     Delt_error

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_26:
   \   00000000   0x3FE00000         DC32     0x3fe00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_27:
   \   00000000   0x........         DC32     ??D_Err

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_28:
   \   00000000   0x........         DC32     Delta_dError_Range

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_29:
   \   00000000   0x........         DC32     SetSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_30:
   \   00000000   0x........         DC32     K_Varialbe_Speed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_31:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_32:
   \   00000000   0x3FF66666         DC32     0x3ff66666

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_33:
   \   00000000   0x........         DC32     ??setspeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_34:
   \   00000000   0x........         DC32     SpeedControlIntegral

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_35:
   \   00000000   0x........         DC32     ??PreError

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_36:
   \   00000000   0x........         DC32     SpeedControlOutNew

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_37:
   \   00000000   0x........         DC32     SpeedControlOutOld

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_38:
   \   00000000   0x........         DC32     PID_Speed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_39:
   \   00000000   0x........         DC32     SpeedCount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_40:
   \   00000000   0x........         DC32     Speed_Filter_Times

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_41:
   \   00000000   0x........         DC32     ??Pre_Middle_Err

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_42:
   \   00000000   0x........         DC32     Middle_Err

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_43:
   \   00000000   0x........         DC32     ??Calculate_Length

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_44:
   \   00000000   0x........         DC32     Delta_P

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_45:
   \   00000000   0x........         DC32     Delta_D

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_46:
   \   00000000   0xC1200000         DC32     0xc1200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_47:
   \   00000000   0x........         DC32     RoadType

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_48:
   \   00000000   0x........         DC32     PID_Turn

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_49:
   \   00000000   0x41200000         DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_50:
   \   00000000   0x........         DC32     K_CrossRoad

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_51:
   \   00000000   0x........         DC32     P_CrossRoad

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_52:
   \   00000000   0x........         DC32     DirControlOutNew

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_53:
   \   00000000   0x........         DC32     DirControlOutOld

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_54:
   \   00000000   0x........         DC32     DirectionCount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_55:
   \   00000000   0x40A00000         DC32     0x40a00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_56:
   \   00000000   0x........         DC32     ??DirectionControl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_57:
   \   00000000   0x3FD99999         DC32     0x3fd99999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_58:
   \   00000000   0x3FD33333         DC32     0x3fd33333

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_59:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_60:
   \   00000000   0x443B8000         DC32     0x443b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_61:
   \   00000000   0x400B8000         DC32     0x400b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_62:
   \   00000000   0x........         DC32     ??resultlast

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Direction_Control
         8   -> Slope_Calculate
         8   -> Turn_Out_Filter
         8   -> __aeabi_fadd
         8   -> __aeabi_fmul
         8   -> __aeabi_fsub
       8   Direction_Control_Output
         8   -> __aeabi_fadd
         8   -> __aeabi_fdiv
         8   -> __aeabi_fmul
         8   -> __aeabi_fsub
         8   -> __aeabi_i2f
      16   Get_Speed
        16   -> LPLD_FTM_ClearCounter
        16   -> LPLD_FTM_GetCounter
        16   -> LPLD_LPTMR_GetPulseAcc
        16   -> LPLD_LPTMR_ResetCounter
        16   -> Left_Encoder_Init
        16   -> __aeabi_d2f
        16   -> __aeabi_dadd
        16   -> __aeabi_ddiv
        16   -> __aeabi_dmul
        16   -> __aeabi_f2d
        16   -> __aeabi_fadd
        16   -> __aeabi_fdiv
        16   -> __aeabi_i2f
        16   -> __aeabi_ui2d
        16   -> __aeabi_ui2f
       8   Motor_Output
         8   -> LPLD_FTM_PWM_ChangeDuty
         8   -> __aeabi_f2uiz
       8   Servo_Output
         8   -> LPLD_FTM_PWM_ChangeDuty
         8   -> __aeabi_f2iz
         8   -> __aeabi_fsub
      40   Slope_Calculate
        40   -> __aeabi_fadd
        40   -> __aeabi_fdiv
        40   -> __aeabi_fmul
        40   -> __aeabi_fsub
        40   -> __aeabi_i2f
        40   -> __aeabi_ui2f
        40 __aeabi_cfcmpeq
      16   Speed_Control
        16   -> __aeabi_d2f
        16   -> __aeabi_dadd
        16   -> __aeabi_dmul
        16   -> __aeabi_f2d
        16   -> __aeabi_fadd
        16   -> __aeabi_fdiv
        16   -> __aeabi_fmul
        16   -> __aeabi_fsub
        16 __aeabi_cfcmple
        16 __aeabi_cfrcmple
       8   Speed_Control_Output
         8   -> __aeabi_fadd
         8   -> __aeabi_fdiv
         8   -> __aeabi_fmul
         8   -> __aeabi_fsub
         8   -> __aeabi_i2f
      16   Turn_Out_Filter
        16   -> __aeabi_d2f
        16   -> __aeabi_dadd
        16   -> __aeabi_dmul
        16   -> __aeabi_f2d


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_10
       4  ??DataTable8_11
       4  ??DataTable8_12
       4  ??DataTable8_13
       4  ??DataTable8_14
       4  ??DataTable8_15
       4  ??DataTable8_16
       4  ??DataTable8_17
       4  ??DataTable8_18
       4  ??DataTable8_19
       4  ??DataTable8_2
       4  ??DataTable8_20
       4  ??DataTable8_21
       4  ??DataTable8_22
       4  ??DataTable8_23
       4  ??DataTable8_24
       4  ??DataTable8_25
       4  ??DataTable8_26
       4  ??DataTable8_27
       4  ??DataTable8_28
       4  ??DataTable8_29
       4  ??DataTable8_3
       4  ??DataTable8_30
       4  ??DataTable8_31
       4  ??DataTable8_32
       4  ??DataTable8_33
       4  ??DataTable8_34
       4  ??DataTable8_35
       4  ??DataTable8_36
       4  ??DataTable8_37
       4  ??DataTable8_38
       4  ??DataTable8_39
       4  ??DataTable8_4
       4  ??DataTable8_40
       4  ??DataTable8_41
       4  ??DataTable8_42
       4  ??DataTable8_43
       4  ??DataTable8_44
       4  ??DataTable8_45
       4  ??DataTable8_46
       4  ??DataTable8_47
       4  ??DataTable8_48
       4  ??DataTable8_49
       4  ??DataTable8_5
       4  ??DataTable8_50
       4  ??DataTable8_51
       4  ??DataTable8_52
       4  ??DataTable8_53
       4  ??DataTable8_54
       4  ??DataTable8_55
       4  ??DataTable8_56
       4  ??DataTable8_57
       4  ??DataTable8_58
       4  ??DataTable8_59
       4  ??DataTable8_6
       4  ??DataTable8_60
       4  ??DataTable8_61
       4  ??DataTable8_62
       4  ??DataTable8_7
       4  ??DataTable8_8
       4  ??DataTable8_9
       4  Calculate_Length
       4  CarSpeed
       4  ControlSpeed
       4  D_Err
       4  Delt_error
       4  Delta_D
       4  Delta_P
      20  Delta_Prederror
      20  Delta_dError_Range
       4  DirControlOutNew
       4  DirControlOutOld
      16  DirectionControl
       4  DirectionCount
     326  Direction_Control
      52  Direction_Control_Output
       4  Distance
       4  Fuzzy_Kd
       4  Fuzzy_Kp
     510  Get_Speed
       4  K_CrossRoad
      24  K_Varialbe_Speed
      52  Motor_Output
      28  PID_Speed
      28  PID_Turn
       4  P_CrossRoad
      40  PreError
       4  Pre_Delta_Error
      60  Pre_Middle_Err
      30  Servo_Output
       4  SetSpeed
     270  Slope_Calculate
       4  SpeedControlIntegral
       4  SpeedControlOutNew
       4  SpeedControlOutOld
       4  SpeedCount
     922  Speed_Control
      76  Speed_Control_Output
       4  Speed_Filter_Times
     138  Turn_Out_Filter
       4  qd1_result
       4  qd1_result_old
       4  qd2_result
       4  qd2_result_old
       4  resultlast
       4  setspeed

 
   300 bytes in section .bss
    48 bytes in section .data
 2 628 bytes in section .text
 
 2 628 bytes of CODE memory
   348 bytes of DATA memory

Errors: none
Warnings: 2
