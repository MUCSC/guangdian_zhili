###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        10/Jul/2016  20:24:42
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\app\fuzzy.c
#    Command line =  
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\app\fuzzy.c
#        -D LPLD_K60 -D USE_K60DZ10 -lCN
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\RAM\List\
#        -lB
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\RAM\List\
#        -o
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\RAM\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        E:\IAR\anzhuang\arm\INC\c\DLib_Config_Normal.h -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\app\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\CPU\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\common\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\LPLD\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\LPLD\HW\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\FatFs\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\FatFs\option\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\USB\common\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\USB\driver\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\USB\descriptor\
#        -I
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\..\..\..\lib\USB\class\
#        -Ol -I E:\IAR\anzhuang\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\RAM\List\fuzzy.lst
#    Object file  =  
#        F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\iar\RAM\Obj\fuzzy.o
#
###############################################################################

F:\work\competition\freescale\P_freestyle\MINE\16.5.16\mycar\project\mycar\app\fuzzy.c
      1          #include "fuzzy.h"
      2          

   \                                 In section .text, align 4, keep-with-next
      3          float Fuzzy(float P,float D)
      4          {
   \                     Fuzzy: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB0CF             SUB      SP,SP,#+316
   \   00000006   0x0007             MOVS     R7,R0
   \   00000008   0x000C             MOVS     R4,R1
      5          /*输入量P语言值特征点*/ 
      6          float PFF[7]={-27,-15,-8,0,8,15,27};
   \   0000000A   0xA811             ADD      R0,SP,#+68
   \   0000000C   0xF8DF 0x1448      LDR.W    R1,??Fuzzy_0
   \   00000010   0x221C             MOVS     R2,#+28
   \   00000012   0x.... 0x....      BL       __aeabi_memcpy4
      7          /*输入量D语言值特征点*/ 
      8          float DFF[5]={-7.2,-3,0,3,7.2};
   \   00000016   0xA80C             ADD      R0,SP,#+48
   \   00000018   0xF8DF 0x1440      LDR.W    R1,??Fuzzy_0+0x4
   \   0000001C   0x2214             MOVS     R2,#+20
   \   0000001E   0x.... 0x....      BL       __aeabi_memcpy4
      9          /*输出量U语言值特征点(根据赛道类型选择不同的输出值)*/
     10          float UFF[7]={0,15,20,35,50,80,120};
   \   00000022   0xA818             ADD      R0,SP,#+96
   \   00000024   0xF8DF 0x1438      LDR.W    R1,??Fuzzy_0+0x8
   \   00000028   0x221C             MOVS     R2,#+28
   \   0000002A   0x.... 0x....      BL       __aeabi_memcpy4
     11          
     12          int rule[8][6]={
     13          //  -2  -1   0   1   2 ec    e
     14            { 2,  2,  3,  0,  0,0}, //  -3
     15            { 6,  5,  1,  0,  0,0}, //  -2
     16            { 5,  3,  1,  1,  0,0}, //  -1
     17            { 4,  3,  0,  3,  5,5}, //   0
     18            { 0,  1,  1,  5,  6,6}, //   1
     19            { 0,  0,  1,  2,  4,4}, //   2
     20            { 0,  0,  3,  2,  2,2}, //   3
     21            { 0,  0,  3,  2,  2,2}   
     22          };
   \   0000002E   0xA81F             ADD      R0,SP,#+124
   \   00000030   0xF8DF 0x1430      LDR.W    R1,??Fuzzy_0+0xC
   \   00000034   0x22C0             MOVS     R2,#+192
   \   00000036   0x.... 0x....      BL       __aeabi_memcpy4
     23          
     24          
     25          float U=0;  /*偏差,偏差微分以及输出值的精确量*/ 
   \   0000003A   0x2000             MOVS     R0,#+0
     26          float PF[2]={0},DF[2]={0},UF[4]={0};
   \   0000003C   0xA804             ADD      R0,SP,#+16
   \   0000003E   0x2100             MOVS     R1,#+0
   \   00000040   0x2200             MOVS     R2,#+0
   \   00000042   0xC006             STM      R0!,{R1,R2}
   \   00000044   0x3808             SUBS     R0,R0,#+8
   \   00000046   0xA806             ADD      R0,SP,#+24
   \   00000048   0x2100             MOVS     R1,#+0
   \   0000004A   0x2200             MOVS     R2,#+0
   \   0000004C   0xC006             STM      R0!,{R1,R2}
   \   0000004E   0x3808             SUBS     R0,R0,#+8
   \   00000050   0xA800             ADD      R0,SP,#+0
   \   00000052   0x2110             MOVS     R1,#+16
   \   00000054   0x.... 0x....      BL       __aeabi_memclr4
     27           /*偏差,偏差微分以及输出值的隶属度*/ 
     28          int Pn=0,Dn=0,Un[4]={0};
   \   00000058   0x2600             MOVS     R6,#+0
   \   0000005A   0x2500             MOVS     R5,#+0
   \   0000005C   0xA808             ADD      R0,SP,#+32
   \   0000005E   0x2110             MOVS     R1,#+16
   \   00000060   0x.... 0x....      BL       __aeabi_memclr4
     29          float t1=0,t2=0,t3=0,t4=0,temp1=0,temp2=0;
   \   00000064   0xF05F 0x0800      MOVS     R8,#+0
   \   00000068   0xF05F 0x0900      MOVS     R9,#+0
   \   0000006C   0xF05F 0x0A00      MOVS     R10,#+0
   \   00000070   0xF05F 0x0B00      MOVS     R11,#+0
   \   00000074   0xF05F 0x0800      MOVS     R8,#+0
   \   00000078   0x2100             MOVS     R1,#+0
     30          /*隶属度的确定*/ 
     31          /*根据PD的指定语言值获得有效隶属度*/ 
     32           if(P>PFF[0] && P<PFF[6])
   \   0000007A   0x9811             LDR      R0,[SP, #+68]
   \   0000007C   0x0039             MOVS     R1,R7
   \   0000007E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000082   0xF080 0x8083      BCS.W    ??Fuzzy_1
   \   00000086   0x0038             MOVS     R0,R7
   \   00000088   0x9917             LDR      R1,[SP, #+92]
   \   0000008A   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000008E   0xD27D             BCS.N    ??Fuzzy_1
     33          {
     34           if(P<=PFF[1])
   \   00000090   0x9812             LDR      R0,[SP, #+72]
   \   00000092   0x0039             MOVS     R1,R7
   \   00000094   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000098   0xD80F             BHI.N    ??Fuzzy_2
     35           {
     36            Pn=1;
   \   0000009A   0x2601             MOVS     R6,#+1
     37            PF[0]=(PFF[1]-P)/(PFF[1]-PFF[0]);
   \   0000009C   0x9812             LDR      R0,[SP, #+72]
   \   0000009E   0x0039             MOVS     R1,R7
   \   000000A0   0x.... 0x....      BL       __aeabi_fsub
   \   000000A4   0x0007             MOVS     R7,R0
   \   000000A6   0x9812             LDR      R0,[SP, #+72]
   \   000000A8   0x9911             LDR      R1,[SP, #+68]
   \   000000AA   0x.... 0x....      BL       __aeabi_fsub
   \   000000AE   0x0001             MOVS     R1,R0
   \   000000B0   0x0038             MOVS     R0,R7
   \   000000B2   0x.... 0x....      BL       __aeabi_fdiv
   \   000000B6   0x9004             STR      R0,[SP, #+16]
   \   000000B8   0xE07A             B.N      ??Fuzzy_3
     38           }
     39           else if(P<=PFF[2])
   \                     ??Fuzzy_2: (+1)
   \   000000BA   0x9813             LDR      R0,[SP, #+76]
   \   000000BC   0x0039             MOVS     R1,R7
   \   000000BE   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000C2   0xD80F             BHI.N    ??Fuzzy_4
     40           {
     41            Pn=2;
   \   000000C4   0x2602             MOVS     R6,#+2
     42            PF[0]=(PFF[2]-P)/(PFF[2]-PFF[1]);
   \   000000C6   0x9813             LDR      R0,[SP, #+76]
   \   000000C8   0x0039             MOVS     R1,R7
   \   000000CA   0x.... 0x....      BL       __aeabi_fsub
   \   000000CE   0x0007             MOVS     R7,R0
   \   000000D0   0x9813             LDR      R0,[SP, #+76]
   \   000000D2   0x9912             LDR      R1,[SP, #+72]
   \   000000D4   0x.... 0x....      BL       __aeabi_fsub
   \   000000D8   0x0001             MOVS     R1,R0
   \   000000DA   0x0038             MOVS     R0,R7
   \   000000DC   0x.... 0x....      BL       __aeabi_fdiv
   \   000000E0   0x9004             STR      R0,[SP, #+16]
   \   000000E2   0xE065             B.N      ??Fuzzy_3
     43           }
     44           else if(P<=PFF[3])
   \                     ??Fuzzy_4: (+1)
   \   000000E4   0x9814             LDR      R0,[SP, #+80]
   \   000000E6   0x0039             MOVS     R1,R7
   \   000000E8   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000EC   0xD80F             BHI.N    ??Fuzzy_5
     45           {
     46            Pn=3;
   \   000000EE   0x2603             MOVS     R6,#+3
     47            PF[0]=(PFF[3]-P)/(PFF[3]-PFF[2]);
   \   000000F0   0x9814             LDR      R0,[SP, #+80]
   \   000000F2   0x0039             MOVS     R1,R7
   \   000000F4   0x.... 0x....      BL       __aeabi_fsub
   \   000000F8   0x0007             MOVS     R7,R0
   \   000000FA   0x9814             LDR      R0,[SP, #+80]
   \   000000FC   0x9913             LDR      R1,[SP, #+76]
   \   000000FE   0x.... 0x....      BL       __aeabi_fsub
   \   00000102   0x0001             MOVS     R1,R0
   \   00000104   0x0038             MOVS     R0,R7
   \   00000106   0x.... 0x....      BL       __aeabi_fdiv
   \   0000010A   0x9004             STR      R0,[SP, #+16]
   \   0000010C   0xE050             B.N      ??Fuzzy_3
     48           }
     49           else if(P<=PFF[4])
   \                     ??Fuzzy_5: (+1)
   \   0000010E   0x9815             LDR      R0,[SP, #+84]
   \   00000110   0x0039             MOVS     R1,R7
   \   00000112   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000116   0xD80F             BHI.N    ??Fuzzy_6
     50           {
     51            Pn=3;
   \   00000118   0x2603             MOVS     R6,#+3
     52            PF[0]=(PFF[4]-P)/(PFF[4]-PFF[3]);
   \   0000011A   0x9815             LDR      R0,[SP, #+84]
   \   0000011C   0x0039             MOVS     R1,R7
   \   0000011E   0x.... 0x....      BL       __aeabi_fsub
   \   00000122   0x0007             MOVS     R7,R0
   \   00000124   0x9815             LDR      R0,[SP, #+84]
   \   00000126   0x9914             LDR      R1,[SP, #+80]
   \   00000128   0x.... 0x....      BL       __aeabi_fsub
   \   0000012C   0x0001             MOVS     R1,R0
   \   0000012E   0x0038             MOVS     R0,R7
   \   00000130   0x.... 0x....      BL       __aeabi_fdiv
   \   00000134   0x9004             STR      R0,[SP, #+16]
   \   00000136   0xE03B             B.N      ??Fuzzy_3
     53           }
     54           else if(P<=PFF[5])
   \                     ??Fuzzy_6: (+1)
   \   00000138   0x9816             LDR      R0,[SP, #+88]
   \   0000013A   0x0039             MOVS     R1,R7
   \   0000013C   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000140   0xD80F             BHI.N    ??Fuzzy_7
     55           {
     56            Pn=4;
   \   00000142   0x2604             MOVS     R6,#+4
     57            PF[0]=(PFF[5]-P)/(PFF[5]-PFF[4]);
   \   00000144   0x9816             LDR      R0,[SP, #+88]
   \   00000146   0x0039             MOVS     R1,R7
   \   00000148   0x.... 0x....      BL       __aeabi_fsub
   \   0000014C   0x0007             MOVS     R7,R0
   \   0000014E   0x9816             LDR      R0,[SP, #+88]
   \   00000150   0x9915             LDR      R1,[SP, #+84]
   \   00000152   0x.... 0x....      BL       __aeabi_fsub
   \   00000156   0x0001             MOVS     R1,R0
   \   00000158   0x0038             MOVS     R0,R7
   \   0000015A   0x.... 0x....      BL       __aeabi_fdiv
   \   0000015E   0x9004             STR      R0,[SP, #+16]
   \   00000160   0xE026             B.N      ??Fuzzy_3
     58           }
     59           else if(P<=PFF[6])
   \                     ??Fuzzy_7: (+1)
   \   00000162   0x9817             LDR      R0,[SP, #+92]
   \   00000164   0x0039             MOVS     R1,R7
   \   00000166   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000016A   0xD821             BHI.N    ??Fuzzy_3
     60           {
     61            Pn=5;
   \   0000016C   0x2605             MOVS     R6,#+5
     62            PF[0]=(PFF[6]-P)/(PFF[6]-PFF[5]);
   \   0000016E   0x9817             LDR      R0,[SP, #+92]
   \   00000170   0x0039             MOVS     R1,R7
   \   00000172   0x.... 0x....      BL       __aeabi_fsub
   \   00000176   0x0007             MOVS     R7,R0
   \   00000178   0x9817             LDR      R0,[SP, #+92]
   \   0000017A   0x9916             LDR      R1,[SP, #+88]
   \   0000017C   0x.... 0x....      BL       __aeabi_fsub
   \   00000180   0x0001             MOVS     R1,R0
   \   00000182   0x0038             MOVS     R0,R7
   \   00000184   0x.... 0x....      BL       __aeabi_fdiv
   \   00000188   0x9004             STR      R0,[SP, #+16]
   \   0000018A   0xE011             B.N      ??Fuzzy_3
     63           }
     64          }
     65           
     66           else if(P<=PFF[0])
   \                     ??Fuzzy_1: (+1)
   \   0000018C   0x9811             LDR      R0,[SP, #+68]
   \   0000018E   0x0039             MOVS     R1,R7
   \   00000190   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000194   0xD804             BHI.N    ??Fuzzy_8
     67           {
     68            Pn=0;
   \   00000196   0x2600             MOVS     R6,#+0
     69            PF[0]=1;
   \   00000198   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   0000019C   0x9004             STR      R0,[SP, #+16]
   \   0000019E   0xE007             B.N      ??Fuzzy_3
     70           }
     71           else if(P>=PFF[6])
   \                     ??Fuzzy_8: (+1)
   \   000001A0   0x0038             MOVS     R0,R7
   \   000001A2   0x9917             LDR      R1,[SP, #+92]
   \   000001A4   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000001A8   0xD802             BHI.N    ??Fuzzy_3
     72           {
     73            Pn=6;
   \   000001AA   0x2606             MOVS     R6,#+6
     74            PF[0]=0;
   \   000001AC   0x2000             MOVS     R0,#+0
   \   000001AE   0x9004             STR      R0,[SP, #+16]
     75           }
     76          
     77          PF[1]=1-PF[0];
   \                     ??Fuzzy_3: (+1)
   \   000001B0   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   000001B4   0x9904             LDR      R1,[SP, #+16]
   \   000001B6   0x.... 0x....      BL       __aeabi_fsub
   \   000001BA   0x9005             STR      R0,[SP, #+20]
     78          
     79          
     80          //判断D的隶属度
     81           if(D>DFF[0]&&D<DFF[4])
   \   000001BC   0x980C             LDR      R0,[SP, #+48]
   \   000001BE   0x0021             MOVS     R1,R4
   \   000001C0   0x.... 0x....      BL       __aeabi_cfcmple
   \   000001C4   0xD258             BCS.N    ??Fuzzy_9
   \   000001C6   0x0020             MOVS     R0,R4
   \   000001C8   0x9910             LDR      R1,[SP, #+64]
   \   000001CA   0x.... 0x....      BL       __aeabi_cfcmple
   \   000001CE   0xD253             BCS.N    ??Fuzzy_9
     82           {
     83            if(D<=DFF[1])
   \   000001D0   0x980D             LDR      R0,[SP, #+52]
   \   000001D2   0x0021             MOVS     R1,R4
   \   000001D4   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000001D8   0xD80F             BHI.N    ??Fuzzy_10
     84            {
     85             Dn=1;
   \   000001DA   0x2501             MOVS     R5,#+1
     86             DF[0]=(DFF[1]-D)/(DFF[1]-DFF[0]);
   \   000001DC   0x980D             LDR      R0,[SP, #+52]
   \   000001DE   0x0021             MOVS     R1,R4
   \   000001E0   0x.... 0x....      BL       __aeabi_fsub
   \   000001E4   0x0004             MOVS     R4,R0
   \   000001E6   0x980D             LDR      R0,[SP, #+52]
   \   000001E8   0x990C             LDR      R1,[SP, #+48]
   \   000001EA   0x.... 0x....      BL       __aeabi_fsub
   \   000001EE   0x0001             MOVS     R1,R0
   \   000001F0   0x0020             MOVS     R0,R4
   \   000001F2   0x.... 0x....      BL       __aeabi_fdiv
   \   000001F6   0x9006             STR      R0,[SP, #+24]
   \   000001F8   0xE050             B.N      ??Fuzzy_11
     87            }
     88           else if(D<=DFF[2])
   \                     ??Fuzzy_10: (+1)
   \   000001FA   0x980E             LDR      R0,[SP, #+56]
   \   000001FC   0x0021             MOVS     R1,R4
   \   000001FE   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000202   0xD80F             BHI.N    ??Fuzzy_12
     89           {
     90            Dn=2;
   \   00000204   0x2502             MOVS     R5,#+2
     91            DF[0]=(DFF[2]-D)/(DFF[2]-DFF[1]);
   \   00000206   0x980E             LDR      R0,[SP, #+56]
   \   00000208   0x0021             MOVS     R1,R4
   \   0000020A   0x.... 0x....      BL       __aeabi_fsub
   \   0000020E   0x0004             MOVS     R4,R0
   \   00000210   0x980E             LDR      R0,[SP, #+56]
   \   00000212   0x990D             LDR      R1,[SP, #+52]
   \   00000214   0x.... 0x....      BL       __aeabi_fsub
   \   00000218   0x0001             MOVS     R1,R0
   \   0000021A   0x0020             MOVS     R0,R4
   \   0000021C   0x.... 0x....      BL       __aeabi_fdiv
   \   00000220   0x9006             STR      R0,[SP, #+24]
   \   00000222   0xE03B             B.N      ??Fuzzy_11
     92            }
     93           else if(D<=DFF[3])
   \                     ??Fuzzy_12: (+1)
   \   00000224   0x980F             LDR      R0,[SP, #+60]
   \   00000226   0x0021             MOVS     R1,R4
   \   00000228   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000022C   0xD80F             BHI.N    ??Fuzzy_13
     94           {
     95            Dn=3;
   \   0000022E   0x2503             MOVS     R5,#+3
     96            DF[0]=(DFF[3]-D)/(DFF[3]-DFF[2]);
   \   00000230   0x980F             LDR      R0,[SP, #+60]
   \   00000232   0x0021             MOVS     R1,R4
   \   00000234   0x.... 0x....      BL       __aeabi_fsub
   \   00000238   0x0004             MOVS     R4,R0
   \   0000023A   0x980F             LDR      R0,[SP, #+60]
   \   0000023C   0x990E             LDR      R1,[SP, #+56]
   \   0000023E   0x.... 0x....      BL       __aeabi_fsub
   \   00000242   0x0001             MOVS     R1,R0
   \   00000244   0x0020             MOVS     R0,R4
   \   00000246   0x.... 0x....      BL       __aeabi_fdiv
   \   0000024A   0x9006             STR      R0,[SP, #+24]
   \   0000024C   0xE026             B.N      ??Fuzzy_11
     97            }
     98           else if(D<=DFF[4])
   \                     ??Fuzzy_13: (+1)
   \   0000024E   0x9810             LDR      R0,[SP, #+64]
   \   00000250   0x0021             MOVS     R1,R4
   \   00000252   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000256   0xD821             BHI.N    ??Fuzzy_11
     99           {
    100            Dn=4;
   \   00000258   0x2504             MOVS     R5,#+4
    101            DF[0]=(DFF[4]-D)/(DFF[4]-DFF[3]);
   \   0000025A   0x9810             LDR      R0,[SP, #+64]
   \   0000025C   0x0021             MOVS     R1,R4
   \   0000025E   0x.... 0x....      BL       __aeabi_fsub
   \   00000262   0x0004             MOVS     R4,R0
   \   00000264   0x9810             LDR      R0,[SP, #+64]
   \   00000266   0x990F             LDR      R1,[SP, #+60]
   \   00000268   0x.... 0x....      BL       __aeabi_fsub
   \   0000026C   0x0001             MOVS     R1,R0
   \   0000026E   0x0020             MOVS     R0,R4
   \   00000270   0x.... 0x....      BL       __aeabi_fdiv
   \   00000274   0x9006             STR      R0,[SP, #+24]
   \   00000276   0xE011             B.N      ??Fuzzy_11
    102           }
    103           }
    104           //不在给定的区间内
    105           else if (D<=DFF[0])
   \                     ??Fuzzy_9: (+1)
   \   00000278   0x980C             LDR      R0,[SP, #+48]
   \   0000027A   0x0021             MOVS     R1,R4
   \   0000027C   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000280   0xD804             BHI.N    ??Fuzzy_14
    106           {
    107            Dn=0;
   \   00000282   0x2500             MOVS     R5,#+0
    108            DF[0]=1;
   \   00000284   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000288   0x9006             STR      R0,[SP, #+24]
   \   0000028A   0xE007             B.N      ??Fuzzy_11
    109           }
    110           else if(D>=DFF[4])
   \                     ??Fuzzy_14: (+1)
   \   0000028C   0x0020             MOVS     R0,R4
   \   0000028E   0x9910             LDR      R1,[SP, #+64]
   \   00000290   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000294   0xD802             BHI.N    ??Fuzzy_11
    111           {
    112            Dn=5;
   \   00000296   0x2505             MOVS     R5,#+5
    113            DF[0]=0;
   \   00000298   0x2000             MOVS     R0,#+0
   \   0000029A   0x9006             STR      R0,[SP, #+24]
    114           }
    115          
    116          DF[1]=1-DF[0];
   \                     ??Fuzzy_11: (+1)
   \   0000029C   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   000002A0   0x9906             LDR      R1,[SP, #+24]
   \   000002A2   0x.... 0x....      BL       __aeabi_fsub
   \   000002A6   0x9007             STR      R0,[SP, #+28]
    117          
    118           /*使用误差范围优化后的规则表rule[7][7]*/ 
    119           /*输出值使用13个隶属函数,中心值由UFF[7]指定*/ 
    120           /*一般都是四个规则有效*/ 
    121          
    122          Un[0]=rule[Pn][Dn]; 
   \   000002A8   0xA81F             ADD      R0,SP,#+124
   \   000002AA   0x2118             MOVS     R1,#+24
   \   000002AC   0xFB01 0x0006      MLA      R0,R1,R6,R0
   \   000002B0   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   000002B4   0x9008             STR      R0,[SP, #+32]
    123          Un[1]=rule[Pn][Dn+1]; 
   \   000002B6   0xA81F             ADD      R0,SP,#+124
   \   000002B8   0x2118             MOVS     R1,#+24
   \   000002BA   0xFB01 0x0006      MLA      R0,R1,R6,R0
   \   000002BE   0xEB10 0x0085      ADDS     R0,R0,R5, LSL #+2
   \   000002C2   0x6840             LDR      R0,[R0, #+4]
   \   000002C4   0x9009             STR      R0,[SP, #+36]
    124          Un[2]=rule[Pn+1][Dn]; 
   \   000002C6   0xA81F             ADD      R0,SP,#+124
   \   000002C8   0x2118             MOVS     R1,#+24
   \   000002CA   0xFB01 0x0006      MLA      R0,R1,R6,R0
   \   000002CE   0xEB10 0x0085      ADDS     R0,R0,R5, LSL #+2
   \   000002D2   0x6980             LDR      R0,[R0, #+24]
   \   000002D4   0x900A             STR      R0,[SP, #+40]
    125          Un[3]=rule[Pn+1][Dn+1]; 
   \   000002D6   0xA81F             ADD      R0,SP,#+124
   \   000002D8   0x2118             MOVS     R1,#+24
   \   000002DA   0xFB01 0x0006      MLA      R0,R1,R6,R0
   \   000002DE   0xEB10 0x0085      ADDS     R0,R0,R5, LSL #+2
   \   000002E2   0x69C0             LDR      R0,[R0, #+28]
   \   000002E4   0x900B             STR      R0,[SP, #+44]
    126           
    127           if(PF[0]<=DF[0])    //求小   
   \   000002E6   0x9806             LDR      R0,[SP, #+24]
   \   000002E8   0x9904             LDR      R1,[SP, #+16]
   \   000002EA   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000002EE   0xD802             BHI.N    ??Fuzzy_15
    128            UF[0]=PF[0];
   \   000002F0   0x9804             LDR      R0,[SP, #+16]
   \   000002F2   0x9000             STR      R0,[SP, #+0]
   \   000002F4   0xE001             B.N      ??Fuzzy_16
    129           else
    130            UF[0]=DF[0];
   \                     ??Fuzzy_15: (+1)
   \   000002F6   0x9806             LDR      R0,[SP, #+24]
   \   000002F8   0x9000             STR      R0,[SP, #+0]
    131           if(PF[1]<=DF[0])
   \                     ??Fuzzy_16: (+1)
   \   000002FA   0x9806             LDR      R0,[SP, #+24]
   \   000002FC   0x9905             LDR      R1,[SP, #+20]
   \   000002FE   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000302   0xD802             BHI.N    ??Fuzzy_17
    132            UF[1]=PF[1];
   \   00000304   0x9805             LDR      R0,[SP, #+20]
   \   00000306   0x9001             STR      R0,[SP, #+4]
   \   00000308   0xE001             B.N      ??Fuzzy_18
    133           else
    134            UF[1]=DF[0];
   \                     ??Fuzzy_17: (+1)
   \   0000030A   0x9806             LDR      R0,[SP, #+24]
   \   0000030C   0x9001             STR      R0,[SP, #+4]
    135           if(PF[0]<=DF[1])
   \                     ??Fuzzy_18: (+1)
   \   0000030E   0x9807             LDR      R0,[SP, #+28]
   \   00000310   0x9904             LDR      R1,[SP, #+16]
   \   00000312   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000316   0xD802             BHI.N    ??Fuzzy_19
    136            UF[2]=PF[0];
   \   00000318   0x9804             LDR      R0,[SP, #+16]
   \   0000031A   0x9002             STR      R0,[SP, #+8]
   \   0000031C   0xE001             B.N      ??Fuzzy_20
    137           else
    138            UF[2]=DF[1];
   \                     ??Fuzzy_19: (+1)
   \   0000031E   0x9807             LDR      R0,[SP, #+28]
   \   00000320   0x9002             STR      R0,[SP, #+8]
    139           if(PF[1]<=DF[1])
   \                     ??Fuzzy_20: (+1)
   \   00000322   0x9807             LDR      R0,[SP, #+28]
   \   00000324   0x9905             LDR      R1,[SP, #+20]
   \   00000326   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000032A   0xD802             BHI.N    ??Fuzzy_21
    140            UF[3]=PF[1];
   \   0000032C   0x9805             LDR      R0,[SP, #+20]
   \   0000032E   0x9003             STR      R0,[SP, #+12]
   \   00000330   0xE001             B.N      ??Fuzzy_22
    141           else
    142            UF[3]=DF[1];
   \                     ??Fuzzy_21: (+1)
   \   00000332   0x9807             LDR      R0,[SP, #+28]
   \   00000334   0x9003             STR      R0,[SP, #+12]
    143          
    144           
    145          /*同隶属函数输出语言值求大*/ 
    146           if(Un[0]==Un[1])
   \                     ??Fuzzy_22: (+1)
   \   00000336   0x9808             LDR      R0,[SP, #+32]
   \   00000338   0x9909             LDR      R1,[SP, #+36]
   \   0000033A   0x4288             CMP      R0,R1
   \   0000033C   0xD109             BNE.N    ??Fuzzy_23
    147           {
    148            if(UF[0]>UF[1])
   \   0000033E   0x9801             LDR      R0,[SP, #+4]
   \   00000340   0x9900             LDR      R1,[SP, #+0]
   \   00000342   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000346   0xD202             BCS.N    ??Fuzzy_24
    149            UF[1]=0;
   \   00000348   0x2000             MOVS     R0,#+0
   \   0000034A   0x9001             STR      R0,[SP, #+4]
   \   0000034C   0xE001             B.N      ??Fuzzy_23
    150            else
    151            UF[0]=0;
   \                     ??Fuzzy_24: (+1)
   \   0000034E   0x2000             MOVS     R0,#+0
   \   00000350   0x9000             STR      R0,[SP, #+0]
    152           }
    153           if(Un[0]==Un[2])
   \                     ??Fuzzy_23: (+1)
   \   00000352   0x9808             LDR      R0,[SP, #+32]
   \   00000354   0x990A             LDR      R1,[SP, #+40]
   \   00000356   0x4288             CMP      R0,R1
   \   00000358   0xD109             BNE.N    ??Fuzzy_25
    154           {
    155            if(UF[0]>UF[2])
   \   0000035A   0x9802             LDR      R0,[SP, #+8]
   \   0000035C   0x9900             LDR      R1,[SP, #+0]
   \   0000035E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000362   0xD202             BCS.N    ??Fuzzy_26
    156            UF[2]=0;
   \   00000364   0x2000             MOVS     R0,#+0
   \   00000366   0x9002             STR      R0,[SP, #+8]
   \   00000368   0xE001             B.N      ??Fuzzy_25
    157            else
    158            UF[0]=0;
   \                     ??Fuzzy_26: (+1)
   \   0000036A   0x2000             MOVS     R0,#+0
   \   0000036C   0x9000             STR      R0,[SP, #+0]
    159           }
    160           if(Un[0]==Un[3])
   \                     ??Fuzzy_25: (+1)
   \   0000036E   0x9808             LDR      R0,[SP, #+32]
   \   00000370   0x990B             LDR      R1,[SP, #+44]
   \   00000372   0x4288             CMP      R0,R1
   \   00000374   0xD109             BNE.N    ??Fuzzy_27
    161           {
    162            if(UF[0]>UF[3])
   \   00000376   0x9803             LDR      R0,[SP, #+12]
   \   00000378   0x9900             LDR      R1,[SP, #+0]
   \   0000037A   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000037E   0xD202             BCS.N    ??Fuzzy_28
    163            UF[3]=0;
   \   00000380   0x2000             MOVS     R0,#+0
   \   00000382   0x9003             STR      R0,[SP, #+12]
   \   00000384   0xE001             B.N      ??Fuzzy_27
    164            else
    165            UF[0]=0;
   \                     ??Fuzzy_28: (+1)
   \   00000386   0x2000             MOVS     R0,#+0
   \   00000388   0x9000             STR      R0,[SP, #+0]
    166           }
    167           if(Un[1]==Un[2])
   \                     ??Fuzzy_27: (+1)
   \   0000038A   0x9809             LDR      R0,[SP, #+36]
   \   0000038C   0x990A             LDR      R1,[SP, #+40]
   \   0000038E   0x4288             CMP      R0,R1
   \   00000390   0xD109             BNE.N    ??Fuzzy_29
    168           {
    169            if(UF[1]>UF[2])
   \   00000392   0x9802             LDR      R0,[SP, #+8]
   \   00000394   0x9901             LDR      R1,[SP, #+4]
   \   00000396   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000039A   0xD202             BCS.N    ??Fuzzy_30
    170            UF[2]=0;
   \   0000039C   0x2000             MOVS     R0,#+0
   \   0000039E   0x9002             STR      R0,[SP, #+8]
   \   000003A0   0xE001             B.N      ??Fuzzy_29
    171            else
    172            UF[1]=0;
   \                     ??Fuzzy_30: (+1)
   \   000003A2   0x2000             MOVS     R0,#+0
   \   000003A4   0x9001             STR      R0,[SP, #+4]
    173           }
    174           if(Un[1]==Un[3])
   \                     ??Fuzzy_29: (+1)
   \   000003A6   0x9809             LDR      R0,[SP, #+36]
   \   000003A8   0x990B             LDR      R1,[SP, #+44]
   \   000003AA   0x4288             CMP      R0,R1
   \   000003AC   0xD109             BNE.N    ??Fuzzy_31
    175           {
    176            if(UF[1]>UF[3])
   \   000003AE   0x9803             LDR      R0,[SP, #+12]
   \   000003B0   0x9901             LDR      R1,[SP, #+4]
   \   000003B2   0x.... 0x....      BL       __aeabi_cfcmple
   \   000003B6   0xD202             BCS.N    ??Fuzzy_32
    177            UF[3]=0;
   \   000003B8   0x2000             MOVS     R0,#+0
   \   000003BA   0x9003             STR      R0,[SP, #+12]
   \   000003BC   0xE001             B.N      ??Fuzzy_31
    178            else
    179            UF[1]=0;
   \                     ??Fuzzy_32: (+1)
   \   000003BE   0x2000             MOVS     R0,#+0
   \   000003C0   0x9001             STR      R0,[SP, #+4]
    180           } 
    181           if(Un[2]==Un[3])
   \                     ??Fuzzy_31: (+1)
   \   000003C2   0x980A             LDR      R0,[SP, #+40]
   \   000003C4   0x990B             LDR      R1,[SP, #+44]
   \   000003C6   0x4288             CMP      R0,R1
   \   000003C8   0xD109             BNE.N    ??Fuzzy_33
    182           {
    183            if(UF[2]>UF[3])
   \   000003CA   0x9803             LDR      R0,[SP, #+12]
   \   000003CC   0x9902             LDR      R1,[SP, #+8]
   \   000003CE   0x.... 0x....      BL       __aeabi_cfcmple
   \   000003D2   0xD202             BCS.N    ??Fuzzy_34
    184            UF[3]=0;
   \   000003D4   0x2000             MOVS     R0,#+0
   \   000003D6   0x9003             STR      R0,[SP, #+12]
   \   000003D8   0xE001             B.N      ??Fuzzy_33
    185            else
    186            UF[2]=0;
   \                     ??Fuzzy_34: (+1)
   \   000003DA   0x2000             MOVS     R0,#+0
   \   000003DC   0x9002             STR      R0,[SP, #+8]
    187           }
    188           
    189           
    190           t1=UF[0]*UFF[Un[0]];  
   \                     ??Fuzzy_33: (+1)
   \   000003DE   0x9900             LDR      R1,[SP, #+0]
   \   000003E0   0xA818             ADD      R0,SP,#+96
   \   000003E2   0x9A08             LDR      R2,[SP, #+32]
   \   000003E4   0xF850 0x0022      LDR      R0,[R0, R2, LSL #+2]
   \   000003E8   0x.... 0x....      BL       __aeabi_fmul
   \   000003EC   0x4680             MOV      R8,R0
    191           t2=UF[1]*UFF[Un[1]];
   \   000003EE   0x9901             LDR      R1,[SP, #+4]
   \   000003F0   0xA818             ADD      R0,SP,#+96
   \   000003F2   0x9A09             LDR      R2,[SP, #+36]
   \   000003F4   0xF850 0x0022      LDR      R0,[R0, R2, LSL #+2]
   \   000003F8   0x.... 0x....      BL       __aeabi_fmul
   \   000003FC   0x4681             MOV      R9,R0
    192           t3=UF[2]*UFF[Un[2]];
   \   000003FE   0x9902             LDR      R1,[SP, #+8]
   \   00000400   0xA818             ADD      R0,SP,#+96
   \   00000402   0x9A0A             LDR      R2,[SP, #+40]
   \   00000404   0xF850 0x0022      LDR      R0,[R0, R2, LSL #+2]
   \   00000408   0x.... 0x....      BL       __aeabi_fmul
   \   0000040C   0x4682             MOV      R10,R0
    193           t4=UF[3]*UFF[Un[3]];
   \   0000040E   0x9903             LDR      R1,[SP, #+12]
   \   00000410   0xA818             ADD      R0,SP,#+96
   \   00000412   0x9A0B             LDR      R2,[SP, #+44]
   \   00000414   0xF850 0x0022      LDR      R0,[R0, R2, LSL #+2]
   \   00000418   0x.... 0x....      BL       __aeabi_fmul
   \   0000041C   0x4683             MOV      R11,R0
    194           temp1=t1+t2+t3+t4;
   \   0000041E   0x4640             MOV      R0,R8
   \   00000420   0x4649             MOV      R1,R9
   \   00000422   0x.... 0x....      BL       __aeabi_fadd
   \   00000426   0x4651             MOV      R1,R10
   \   00000428   0x.... 0x....      BL       __aeabi_fadd
   \   0000042C   0x4659             MOV      R1,R11
   \   0000042E   0x.... 0x....      BL       __aeabi_fadd
   \   00000432   0x4680             MOV      R8,R0
    195           temp2=UF[0]+UF[1]+UF[2]+UF[3];//模糊量输出
   \   00000434   0x9900             LDR      R1,[SP, #+0]
   \   00000436   0x9801             LDR      R0,[SP, #+4]
   \   00000438   0x.... 0x....      BL       __aeabi_fadd
   \   0000043C   0x9902             LDR      R1,[SP, #+8]
   \   0000043E   0x.... 0x....      BL       __aeabi_fadd
   \   00000442   0x9903             LDR      R1,[SP, #+12]
   \   00000444   0x.... 0x....      BL       __aeabi_fadd
   \   00000448   0x0001             MOVS     R1,R0
    196           U=temp1/temp2;
   \   0000044A   0x4640             MOV      R0,R8
   \   0000044C   0x.... 0x....      BL       __aeabi_fdiv
    197           return U;
   \   00000450   0xB04F             ADD      SP,SP,#+316
   \   00000452   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   \   00000456   0xBF00             Nop      
   \                     ??Fuzzy_0:
   \   00000458   0x........         DC32     ?_2
   \   0000045C   0x........         DC32     ?_3
   \   00000460   0x........         DC32     ?_4
   \   00000464   0x........         DC32     ?_0
    198          }

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0xC1D80000         DC32 0C1D80000H, 0C1700000H, 0C1000000H, 0H, 41000000H, 41700000H
   \              0xC1700000   
   \              0xC1000000   
   \              0x00000000   
   \              0x41000000   
   \              0x41700000   
   \   00000018   0x41D80000         DC32 41D80000H

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0xC0E66666         DC32 0C0E66666H, 0C0400000H, 0H, 40400000H, 40E66666H
   \              0xC0400000   
   \              0x00000000   
   \              0x40400000   
   \              0x40E66666   

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x00000000         DC32 0H, 41700000H, 41A00000H, 420C0000H, 42480000H, 42A00000H
   \              0x41700000   
   \              0x41A00000   
   \              0x420C0000   
   \              0x42480000   
   \              0x42A00000   
   \   00000018   0x42F00000         DC32 42F00000H

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x00000002         DC32 2, 2, 3, 0, 0, 0, 6, 5, 1, 0, 0, 0, 5, 3, 1, 1, 0, 0, 4, 3, 0, 3
   \              0x00000002   
   \              0x00000003   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000006   
   \              0x00000005   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000005   
   \              0x00000003   
   \              0x00000001   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x00000004   
   \              0x00000003   
   \              0x00000000   
   \              0x00000003   
   \   00000058   0x00000005         DC32 5, 5, 0, 1, 1, 5, 6, 6, 0, 0, 1, 2, 4, 4, 0, 0, 3, 2, 2, 2, 0, 0
   \              0x00000005   
   \              0x00000000   
   \              0x00000001   
   \              0x00000001   
   \              0x00000005   
   \              0x00000006   
   \              0x00000006   
   \              0x00000000   
   \              0x00000000   
   \              0x00000001   
   \              0x00000002   
   \              0x00000004   
   \              0x00000004   
   \              0x00000000   
   \              0x00000000   
   \              0x00000003   
   \              0x00000002   
   \              0x00000002   
   \              0x00000002   
   \              0x00000000   
   \              0x00000000   
   \   000000B0   0x00000003         DC32 3, 2, 2, 2
   \              0x00000002   
   \              0x00000002   
   \              0x00000002   

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0, 0, 0, 0
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
    199          
    200          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
     352   Fuzzy
       352   -> __aeabi_fadd
       352   -> __aeabi_fdiv
       352   -> __aeabi_fmul
       352   -> __aeabi_fsub
       352   -> __aeabi_memclr4
       352   -> __aeabi_memcpy4
       352 __aeabi_cfcmple
       352 __aeabi_cfrcmple


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     192  ?_0
      16  ?_1
      28  ?_2
      20  ?_3
      28  ?_4
       8  ?_5
       8  ?_6
      16  ?_7
    1128  Fuzzy

 
   316 bytes in section .rodata
 1 128 bytes in section .text
 
 1 128 bytes of CODE  memory
   316 bytes of CONST memory

Errors: none
Warnings: none
